var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/components/AddQuestionComponent.html",[0,0.528,1,1.022]],["body/components/AddQuestionComponent.html",[0,0.621,1,1.079,2,0.072,3,0.061,4,0.566,5,0.566,6,0.566,7,0.051,8,4.503,9,3.803,10,1.244,11,1.01,12,1.388,13,2.699,14,0.566,15,2.397,16,2.133,17,1.551,18,2.109,19,0.951,20,2.449,21,0.951,22,2.449,23,0.072,24,0.505,25,1.039,26,3.707,27,3.707,28,3.707,29,2.801,30,2.796,31,3.707,32,3.161,33,2.581,34,3.707,35,3.707,36,2.085,37,3.814,38,3.707,39,3.707,40,1.598,41,0.344,42,2.162,43,3.707,44,2.449,45,3.161,46,1.528,47,2.449,48,2.449,49,2.449,50,2.449,51,2.449,52,0.205,53,1.459,54,2.396,55,3.247,56,2.972,57,2.743,58,2.699,59,3.161,60,0.417,61,2.449,62,0.815,63,0.023,64,0.679,65,0.393,66,0.815,67,1.459,68,0.729,69,1.651,70,2.449,71,1.459,72,2.088,73,1.459,74,1.459,75,2.449,76,1.459,77,2.391,78,2.449,79,1.459,80,2.449,81,1.459,82,2.449,83,1.459,84,2.532,85,2.449,86,1.459,87,1.931,88,1.931,89,2.816,90,1.459,91,1.459,92,2.014,93,4.473,94,1.459,95,4.132,96,1.459,97,1.459,98,3.161,99,1.459,100,1.459,101,1.459,102,0.951,103,1.459,104,1.459,105,1.459,106,1.459,107,3.707,108,1.459,109,1.459,110,1.459,111,0.695,112,0.191,113,1.102,114,1.459,115,1.459,116,1.459,117,1.244,118,1.459,119,1.223,120,1.244,121,2.139,122,1.244,123,2.088,124,1.244,125,2.391,126,1.244,127,1.986,128,1.244,129,1.459,130,1.244,131,1.459,132,1.673,133,1.102,134,1.102,135,0.996,136,1.459,137,1.459,138,0.682,139,0.476,140,0.601,141,1.244,142,0.566,143,0.061,144,0.02,145,0.319,146,1.459,147,1.459,148,1.244,149,2.391,150,1.244,151,1.459,152,1.459,153,1.459,154,2.449,155,2.449,156,1.459,157,1.459,158,1.459,159,1.459,160,1.459,161,2.088,162,1.459,163,1.244,164,1.459,165,1.459,166,1.28,167,2.449,168,1.459,169,1.459,170,1.459,171,2.449,172,1.459,173,1.459,174,1.244,175,2.449,176,1.459,177,1.459,178,2.449,179,1.459,180,1.459,181,0.996,182,1.459,183,1.459,184,1.459,185,1.459,186,1.459,187,1.459,188,1.102,189,2.449,190,1.459,191,3.165,192,2.449,193,1.673,194,1.459,195,1.459,196,1.459,197,1.459,198,2.449,199,1.459,200,1.459,201,1.459,202,1.459,203,1.459,204,1.459,205,1.459,206,1.459,207,1.459,208,1.459,209,1.459,210,1.459,211,1.459,212,1.459,213,2.449,214,2.449,215,2.581,216,2.449,217,2.449,218,2.449,219,2.449,220,1.459,221,2.449,222,2.449,223,1.459,224,2.449,225,1.459,226,1.459,227,1.459,228,1.459,229,1.459,230,2.088,231,0.799,232,2.449,233,2.449,234,2.449,235,2.088,236,0.504,237,0.951,238,0.951,239,0.951,240,1.439,241,0.566,242,1.229,243,0.449,244,0.846,245,0.951,246,0.449,247,0.566,248,0.449,249,0.566,250,0.449,251,0.566,252,0.449,253,0.534,254,0.566,255,0.449,256,0.566,257,0.425,258,0.566,259,0.425,260,0.566,261,0.449,262,0.896,263,0.425,264,0.566,265,0.425,266,0.566,267,0.425,268,0.566,269,0.425,270,0.566,271,0.425,272,0.504,273,0.566,274,0.449,275,0.566,276,0.007,277,0.007]],["title/injectables/AdminGuard.html",[278,0.306,279,2.025]],["body/injectables/AdminGuard.html",[2,0.217,3,0.186,7,0.155,23,0.217,25,0.967,41,0.787,52,0.622,60,0.356,62,0.96,63,0.022,64,0.733,65,0.356,66,0.96,68,0.863,102,1.718,111,0.691,112,0.579,143,0.186,144,0.062,145,0.967,276,0.017,277,0.017,278,0.535,279,3.231,280,3.773,281,3.5,282,3.022,283,3.926,284,2.254,285,4.425,286,3.825,287,4.41,288,4.642,289,4.879,290,4.425,291,2.068,292,3.5,293,2.21,294,2.21,295,4.425,296,3.773,297,2.21,298,3.343]],["title/classes/Answer.html",[127,1.88,144,0.049]],["body/classes/Answer.html",[2,0.239,3,0.204,7,0.171,23,0.239,24,1.224,60,0.436,63,0.022,65,0.436,92,2.49,127,3.182,143,0.204,144,0.083,276,0.018,277,0.018,299,4.15,300,6.679,301,6.679,302,5.694,303,5.694,304,5.694,305,4.867,306,4.867,307,4.867,308,4.867,309,4.867]],["title/injectables/ApiService.html",[278,0.306,310,1.082]],["body/injectables/ApiService.html",[2,0.097,3,0.083,7,0.07,23,0.097,24,0.648,25,1.367,41,0.442,42,2.672,52,0.278,60,0.392,62,0.929,63,0.023,64,0.709,65,0.408,66,1.098,68,0.938,69,0.969,72,1.69,87,1.828,88,1.828,89,1.571,92,2.657,102,1.221,111,0.582,112,0.259,138,2.082,139,0.646,143,0.083,144,0.028,145,0.433,181,2.672,215,1.815,276,0.01,277,0.01,278,0.34,284,1.686,310,0.969,311,1.69,312,4.454,313,4.484,314,4.409,315,3.146,316,3.146,317,3.146,318,4.454,319,4.454,320,3.797,321,2.377,322,3.912,323,1.69,324,2.955,325,1.836,326,3.146,327,3.146,328,1.982,329,5.613,330,6.336,331,3.146,332,4.858,333,1.982,334,5.623,335,2.304,336,5.623,337,6.162,338,3.146,339,5.333,340,3.146,341,1.982,342,3.365,343,3.146,344,1.982,345,2.682,346,3.146,347,5.254,348,5.171,349,4.454,350,4.454,351,1.982,352,3.146,353,1.982,354,1.982,355,2.149,356,1.966,357,3.146,358,1.982,359,4.142,360,1.982,361,1.982,362,1.982,363,1.69,364,1.982,365,1.69,366,1.685,367,1.061,368,3.146,369,3.912,370,1.982,371,1.982,372,4.858,373,1.982,374,1.982,375,1.982,376,1.982,377,1.982,378,1.982,379,4.454,380,3.912,381,1.982,382,1.982,383,1.982,384,1.982,385,1.982,386,1.982,387,1.982,388,1.982,389,1.982,390,3.146,391,1.982,392,3.146,393,1.982,394,1.982,395,1.982,396,1.982,397,1.982,398,3.146,399,1.982,400,1.982,401,1.982,402,1.982,403,3.146,404,1.982,405,2.682,406,1.982,407,1.982,408,1.982,409,1.982,410,1.982,411,1.982,412,1.354,413,1.982,414,1.982,415,1.982,416,1.982,417,1.982,418,1.982,419,1.982,420,1.982]],["title/components/AppComponent.html",[0,0.528,246,1.082]],["body/components/AppComponent.html",[0,0.864,1,0.96,2,0.162,3,0.138,4,1.281,5,1.281,6,1.281,7,0.116,14,1.281,15,2.759,16,2.471,17,1.076,19,1.788,21,1.788,23,0.162,24,0.949,25,0.721,40,1.016,41,0.647,42,3.145,46,2.367,52,0.463,54,1.767,60,0.384,62,0.565,63,0.022,64,0.694,65,0.338,66,0.565,68,0.647,69,1.769,87,1.542,88,1.542,92,1.788,111,0.597,113,2.492,143,0.138,144,0.046,166,1.139,215,1.903,236,1.139,237,1.788,238,1.788,239,1.788,240,2.229,241,1.281,242,2.06,243,1.016,244,1.591,245,1.788,246,1.769,247,1.281,248,1.016,249,1.281,250,1.016,251,1.281,252,1.016,253,1.207,254,1.281,255,1.016,256,1.281,257,0.96,258,1.281,259,0.96,260,1.281,261,1.016,262,1.686,263,0.96,264,1.281,265,0.96,266,1.281,267,0.96,268,1.281,269,0.96,270,1.281,271,0.96,272,1.139,273,1.281,274,1.016,275,1.281,276,0.014,277,0.014,284,2.222,294,1.648,323,2.813,421,2.813,422,1.899,423,4.605,424,4.605,425,4.338,426,4.338,427,3.208,428,4.605,429,3.299,430,3.299,431,3.299,432,3.299,433,2.492,434,2.813,435,3.299,436,2.813,437,2.492,438,2.813]],["title/modules/AppModule.html",[439,1.753,440,2.397]],["body/modules/AppModule.html",[1,1.687,2,0.145,3,0.124,7,0.104,9,2.883,16,1.022,18,1.472,54,3.104,57,3.154,63,0.022,111,0.75,112,0.387,113,2.235,135,2.02,139,0.965,143,0.124,236,1.022,243,1.685,246,1.999,248,1.685,250,1.685,252,1.685,255,1.685,257,1.592,259,1.592,261,1.685,263,1.592,265,1.592,267,1.687,269,1.592,271,1.592,274,1.786,276,0.013,277,0.013,279,3.154,284,1.783,310,1.685,427,2.731,439,2.129,440,5.074,441,2.02,442,3.634,443,3.123,444,3.634,445,2.522,446,2.522,447,2.522,448,2.522,449,2.522,450,3.623,451,3.154,452,3.154,453,3.154,454,3.154,455,3.734,456,3.634,457,2.522,458,2.02,459,2.958,460,2.958,461,2.522,462,2.235,463,2.522,464,2.958,465,2.958,466,2.958,467,2.958,468,4.26,469,2.522,470,2.958,471,1.849,472,2.02,473,2.522,474,2.958,475,2.958,476,2.958]],["title/modules/AppRoutingModule.html",[439,1.753,450,2.194]],["body/modules/AppRoutingModule.html",[0,1.017,1,1.306,2,0.156,3,0.133,7,0.112,9,2.587,18,1.097,63,0.023,111,0.802,112,0.416,143,0.188,144,0.044,215,1.833,243,1.382,244,1.549,248,1.382,252,1.382,257,1.306,259,1.306,261,1.382,263,1.306,265,1.306,267,0.925,269,1.306,271,1.306,272,1.549,276,0.014,277,0.014,279,2.587,281,4.303,291,2.43,293,1.587,439,1.587,450,2.803,451,3.806,452,3.258,454,2.587,463,3.824,468,3.824,469,4.432,473,2.708,477,3.177,478,3.177,479,3.177,480,2.4,481,4.485,482,4.485,483,2.708,484,3.177,485,2.708,486,3.177,487,3.177,488,3.177,489,3.177,490,2.708,491,4.485,492,3.177,493,3.177,494,2.4,495,3.177,496,3.177,497,3.177,498,3.177,499,3.177,500,2.4,501,3.177,502,2.708,503,3.177,504,2.4,505,3.177,506,6.883,507,4.485,508,2.803,509,4.485,510,4.485,511,2.4,512,2.708,513,2.708,514,3.177,515,3.177,516,3.177,517,4.485,518,2.708,519,3.177,520,3.177,521,3.177]],["title/classes/Area.html",[119,1.753,144,0.049]],["body/classes/Area.html",[2,0.255,3,0.219,7,0.183,23,0.255,24,1.275,60,0.394,63,0.021,65,0.394,119,3.09,143,0.219,144,0.086,231,2.153,276,0.019,277,0.019,522,4.437,523,5.824,524,6.831,525,5.204,526,5.204]],["title/injectables/AreaService.html",[278,0.306,527,2.397]],["body/injectables/AreaService.html",[2,0.208,3,0.178,7,0.149,17,1.779,23,0.208,25,0.929,41,0.766,52,0.597,60,0.384,62,0.935,63,0.022,64,0.714,65,0.27,66,0.935,68,0.893,111,0.74,112,0.556,119,2.725,132,2.901,138,1.985,139,1.385,140,1.751,142,1.649,143,0.178,144,0.059,145,0.929,276,0.016,277,0.016,278,0.525,310,2.11,325,2.776,335,2.118,366,2.275,367,2.275,422,1.751,527,3.726,528,3.621,529,1.985,530,4.247,531,5.456,532,4.247,533,4.247,534,2.817,535,1.863,536,1.863,537,1.985,538,4.247,539,2.55,540,2.55,541,2.55,542,2.55,543,2.249,544,2.55,545,2.655,546,4.247]],["title/injectables/AuthGuard.html",[278,0.306,451,2.025]],["body/injectables/AuthGuard.html",[2,0.218,3,0.187,7,0.156,23,0.218,25,0.972,41,0.789,52,0.625,60,0.357,62,0.963,63,0.022,64,0.735,65,0.357,66,0.963,68,0.865,102,1.726,111,0.693,112,0.582,143,0.187,144,0.062,145,0.972,276,0.017,277,0.017,278,0.536,281,3.511,282,3.037,283,3.93,284,2.256,286,3.837,287,4.418,288,4.652,289,4.887,291,2.078,292,3.511,293,2.221,294,2.221,297,2.221,298,3.36,451,3.241,547,3.791,548,4.447,549,4.447,550,4.447]],["title/injectables/AuthService.html",[278,0.306,284,1.145]],["body/injectables/AuthService.html",[2,0.143,3,0.123,7,0.103,23,0.143,24,0.87,41,0.593,52,0.697,60,0.418,62,0.5,63,0.023,64,0.382,65,0.316,66,0.5,68,1.001,69,1.301,87,1.364,88,1.364,89,2.477,92,2.51,102,2.406,111,0.558,112,0.382,121,2.861,143,0.123,144,0.041,181,3.712,276,0.013,277,0.013,278,0.432,284,1.377,292,3.874,297,2.477,314,5.784,320,3.6,329,2.489,345,2.489,355,3.388,356,1.825,412,1.994,508,2.639,551,2.489,552,5.435,553,5.435,554,5.435,555,5.435,556,4.634,557,5.435,558,4.634,559,5.435,560,4.222,561,2.919,562,2.919,563,2.919,564,4.222,565,6.01,566,2.919,567,2.919,568,3.6,569,4.222,570,4.222,571,2.919,572,2.919,573,4.222,574,4.222,575,4.222,576,2.919,577,5.435,578,4.222,579,4.222,580,2.884,581,2.919,582,2.919,583,1.994,584,2.919,585,2.919,586,2.919,587,4.222,588,2.919,589,2.919,590,2.919,591,2.919,592,5.435,593,2.919,594,2.919,595,2.919,596,4.96,597,2.919,598,3.6,599,2.919,600,3.6]],["title/injectables/AuthenticationService.html",[278,0.306,427,1.753]],["body/injectables/AuthenticationService.html",[2,0.187,3,0.16,7,0.134,23,0.187,25,1.112,36,1.673,41,0.714,52,0.536,60,0.388,62,1.046,63,0.022,64,0.832,65,0.243,66,1.046,68,0.893,69,1.567,111,0.687,112,0.499,139,1.244,143,0.16,144,0.053,145,0.834,276,0.015,277,0.015,278,0.498,284,2.176,310,2.056,324,3.843,325,2.516,335,1.975,356,2.385,365,3.253,422,1.573,426,3.843,427,2.54,508,3.179,511,3.843,535,1.673,536,1.673,601,3.253,602,3.816,603,3.816,604,5.086,605,3.816,606,5.086,607,3.816,608,3.179,609,5.086,610,3.816,611,5.086,612,5.721,613,3.816,614,4.336,615,5.086,616,4.336,617,5.086,618,3.816,619,3.816,620,3.816,621,3.816,622,3.816,623,3.816,624,3.816,625,3.816,626,3.816,627,3.816,628,3.816,629,3.816]],["title/classes/DifficultyLevel.html",[30,2.194,144,0.049]],["body/classes/DifficultyLevel.html",[2,0.253,3,0.217,7,0.181,23,0.253,24,1.268,30,3.847,60,0.392,63,0.021,65,0.392,125,5.146,143,0.217,144,0.086,231,2.145,276,0.019,277,0.019,630,5.608,631,4.399,632,6.811,633,5.16,634,5.16]],["title/injectables/DifficultyLevelService.html",[55,2.397,278,0.306]],["body/injectables/DifficultyLevelService.html",[2,0.222,3,0.19,7,0.159,23,0.222,25,0.992,41,0.799,52,0.637,55,3.885,60,0.362,62,0.778,63,0.022,64,0.594,65,0.289,66,0.778,68,0.799,111,0.755,112,0.594,138,2.12,139,1.479,140,1.87,142,1.761,143,0.19,144,0.063,145,0.992,276,0.017,277,0.017,278,0.541,310,2.141,325,2.823,335,1.761,366,2.43,367,2.43,422,1.87,529,2.12,534,2.659,535,1.989,536,1.989,537,2.12,539,2.12,540,2.12,541,2.12,542,2.12,543,1.87,544,2.12,635,5.298,636,3.868,637,4.536,638,4.536,639,4.536]],["title/components/FooterComponent.html",[0,0.528,250,1.082]],["body/components/FooterComponent.html",[0,0.948,1,1.083,2,0.182,3,0.156,4,1.445,5,1.445,6,1.445,7,0.131,11,2.062,12,2.477,14,1.445,15,2.797,16,2.488,17,1.214,19,1.942,21,1.942,23,0.182,40,1.147,41,0.703,46,2.49,52,0.794,60,0.318,63,0.022,64,0.654,68,0.523,69,1.147,111,0.419,112,0.487,143,0.156,144,0.052,166,1.285,236,1.285,237,1.942,238,1.942,239,1.942,240,2.345,241,1.445,242,2.193,243,1.147,244,1.727,245,1.942,246,1.147,247,1.445,248,1.147,249,1.445,250,1.861,251,1.445,252,1.147,253,1.362,254,1.445,255,1.147,256,1.445,257,1.083,258,1.445,259,1.083,260,1.445,261,1.147,262,1.831,263,1.083,264,1.445,265,1.083,266,1.445,267,1.083,268,1.445,269,1.083,270,1.445,271,1.083,272,1.285,273,1.445,274,1.147,275,1.445,276,0.015,277,0.015,640,3.173,641,5.001,642,5.001,643,5.001,644,3.721,645,3.721,646,5.001,647,5.001,648,5.001]],["title/components/HeaderComponent.html",[0,0.528,255,1.082]],["body/components/HeaderComponent.html",[0,0.846,1,0.799,2,0.135,3,0.115,4,1.066,5,1.066,6,1.066,7,0.096,11,1.665,12,2.1,14,1.066,15,2.694,16,2.397,17,1.562,18,1.823,19,1.567,21,1.567,23,0.135,24,0.832,40,0.846,41,0.567,46,2.177,52,0.386,60,0.405,62,0.471,63,0.022,64,0.833,65,0.305,66,0.471,68,0.826,69,1.244,87,2.468,88,2.468,92,2.05,102,2.05,111,0.662,112,0.359,143,0.115,144,0.038,145,0.6,166,2.1,215,1.584,236,0.948,237,1.567,238,1.567,239,1.567,240,2.05,241,1.066,242,1.859,243,0.846,244,2.236,245,1.567,246,0.846,247,1.066,248,0.846,249,1.066,250,0.846,251,1.066,252,0.846,253,2.059,254,1.066,255,1.627,256,1.066,257,0.799,258,1.066,259,0.799,260,1.066,261,0.846,262,2.153,263,0.799,264,1.066,265,0.799,266,1.066,267,0.799,268,1.066,269,0.799,270,1.859,271,0.799,272,0.948,273,1.066,274,0.846,275,1.066,276,0.012,277,0.012,283,1.584,284,0.896,291,1.283,293,1.372,294,1.372,313,3.05,426,3.989,427,2.938,433,2.074,436,2.341,437,2.074,438,2.341,458,2.758,480,2.074,556,4.501,558,4.501,583,1.875,598,2.341,600,2.341,649,2.341,650,4.038,651,4.038,652,5.279,653,5.279,654,2.341,655,4.038,656,2.746,657,2.746,658,2.746,659,2.746,660,2.746,661,4.038,662,2.746,663,2.746,664,2.074,665,2.341,666,2.746,667,2.746,668,2.746,669,2.746,670,2.746,671,2.341,672,2.746,673,4.038,674,4.501,675,3.442]],["title/components/HelloComponent.html",[0,0.528,257,1.022]],["body/components/HelloComponent.html",[0,0.79,1,0.682,2,0.115,3,0.098,4,0.909,5,0.909,6,0.909,7,0.082,11,1.478,12,1.909,14,0.909,15,2.63,16,2.34,17,0.764,18,1.238,19,1.391,21,1.391,23,0.115,24,0.739,25,1.149,29,1.77,36,1.572,40,0.722,41,0.503,46,2.01,52,0.503,60,0.403,62,0.836,63,0.022,64,0.84,65,0.334,66,0.836,68,0.81,69,1.341,92,1.391,102,0.909,111,0.591,112,0.306,141,1.997,142,0.909,143,0.098,144,0.033,166,2.416,231,1.169,236,0.809,237,1.391,238,1.391,239,1.391,240,1.893,241,0.909,242,1.69,243,0.722,244,1.238,245,1.391,246,1.104,247,0.909,248,0.722,249,0.909,250,0.722,251,0.909,252,0.722,253,0.857,254,0.909,255,0.722,256,0.909,257,1.42,258,0.909,259,0.682,260,0.909,261,0.722,262,2.028,263,0.682,264,0.909,265,0.682,266,0.909,267,0.682,268,0.909,269,0.682,270,0.909,271,0.682,272,0.809,273,0.909,274,0.722,275,0.909,276,0.013,277,0.011,297,1.17,425,2.708,437,1.77,443,1.464,471,1.464,472,1.6,543,0.966,608,3.048,671,1.997,676,1.997,677,3.584,678,3.584,679,3.584,680,4.157,681,4.157,682,3.056,683,3.056,684,2.342,685,3.048,686,3.711,687,4.157,688,3.584,689,3.584,690,3.056,691,2.342,692,4.48,693,2.342,694,3.056,695,2.342,696,1.997,697,3.056,698,2.342,699,1.997,700,2.342,701,2.342,702,2.342,703,2.342,704,2.342,705,1.997,706,1.997,707,2.342,708,2.342,709,3.289,710,2.342,711,2.342,712,3.056,713,2.342,714,1.77,715,1.997,716,3.584,717,1.997,718,1.997,719,1.997,720,1.997,721,1.997,722,1.997,723,1.997,724,3.056,725,1.997,726,1.997,727,1.997,728,1.997,729,1.997,730,1.997,731,1.997,732,1.997,733,3.056,734,4.494,735,2.708,736,2.708,737,4.187,738,3.056,739,3.684,740,3.056,741,3.056,742,3.056,743,3.056,744,3.056,745,3.056,746,3.056,747,2.708,748,2.708,749,2.708,750,2.708,751,2.708,752,2.708,753,2.068,754,2.708]],["title/components/LoginComponent.html",[0,0.528,259,1.022]],["body/components/LoginComponent.html",[0,0.863,1,0.84,2,0.142,3,0.121,4,1.121,5,1.121,6,1.121,7,0.101,14,1.121,15,2.713,16,2.413,17,0.941,19,1.626,21,1.626,23,0.142,24,0.863,25,1.077,40,0.889,41,0.588,52,0.405,60,0.365,62,0.495,63,0.022,64,0.645,65,0.344,66,0.495,68,0.405,69,1.29,87,1.957,88,1.957,92,2.099,111,0.712,112,0.378,133,2.181,138,1.957,139,0.941,140,1.19,142,1.121,143,0.121,144,0.04,145,0.631,166,0.997,193,1.972,236,0.997,237,1.626,238,1.626,239,1.626,240,2.099,241,1.121,242,1.913,243,0.889,244,1.446,245,1.626,246,0.889,247,1.121,248,0.889,249,1.121,250,0.889,251,1.121,252,0.889,253,1.057,254,1.121,255,0.889,256,1.121,257,0.84,258,1.121,259,1.574,260,1.121,261,0.889,262,1.533,263,0.84,264,1.121,265,0.84,266,1.121,267,0.84,268,1.121,269,0.84,270,1.121,271,0.84,272,0.997,273,1.121,274,0.889,275,1.121,276,0.013,277,0.013,283,3.563,284,2.014,293,1.442,294,1.442,310,1.903,342,4.523,427,2.99,433,2.181,508,3.742,614,5.266,616,5.266,654,2.461,675,3.57,755,2.461,756,4.188,757,4.188,758,4.188,759,2.887,760,2.887,761,2.887,762,2.887,763,2.887,764,4.188,765,2.887,766,2.887,767,2.887,768,2.461,769,2.887,770,2.887,771,2.887,772,2.887,773,2.887,774,2.887,775,2.887,776,2.887,777,2.887,778,2.887,779,2.887,780,2.887,781,2.887,782,2.887,783,2.887]],["title/components/PreviewTestsComponent.html",[0,0.528,263,1.022]],["body/components/PreviewTestsComponent.html",[0,0.627,1,0.432,2,0.073,3,0.062,4,0.576,5,0.576,6,0.576,7,0.052,11,1.024,12,1.404,14,0.576,15,2.406,16,2.141,17,0.484,18,1.862,19,0.964,21,0.964,23,0.073,24,0.512,25,0.819,29,1.12,36,1.978,40,0.457,41,0.349,46,1.544,52,0.208,60,0.423,62,0.821,63,0.022,64,0.757,65,0.352,66,0.821,68,0.851,69,1.707,77,1.12,84,1.696,87,2.108,88,2.108,89,1.24,92,1.751,102,1.86,111,0.36,112,0.194,119,0.741,127,2.006,143,0.062,144,0.021,145,0.324,163,1.264,166,2.323,188,1.12,193,1.013,215,2.406,231,1.758,236,0.512,237,0.964,238,0.964,239,0.964,240,1.751,241,0.576,242,1.243,243,0.457,244,0.857,245,0.964,246,0.457,247,0.576,248,0.457,249,0.576,250,0.457,251,0.576,252,0.457,253,1.172,254,0.576,255,0.457,256,0.576,257,0.432,258,0.576,259,0.432,260,0.576,261,0.457,262,2.075,263,1.09,264,0.576,265,0.432,266,0.576,267,0.432,268,0.576,269,0.432,270,0.576,271,0.432,272,0.512,273,0.576,274,0.457,275,0.576,276,0.011,277,0.008,297,0.741,412,2.558,425,1.876,443,0.927,471,0.927,472,1.013,494,5.041,543,0.611,680,3.194,681,3.194,682,2.117,683,2.117,685,2.82,686,2.731,687,3.194,690,2.117,692,3.846,694,2.117,696,1.264,697,2.117,699,2.731,705,1.264,706,1.264,709,3.408,712,2.117,715,1.264,717,1.264,718,1.264,719,1.264,720,1.264,721,1.264,722,1.264,723,1.264,724,3.194,725,2.117,726,2.117,727,2.117,728,1.264,729,1.264,730,1.264,731,1.264,732,1.264,734,4.282,735,1.876,736,1.876,737,3.945,738,2.117,739,3.15,740,2.117,741,2.117,742,2.117,743,2.117,744,2.117,745,2.117,746,2.117,747,1.876,748,2.83,749,2.83,750,1.876,751,1.876,752,1.876,753,3.27,754,2.83,768,1.264,784,5.688,785,1.264,786,2.483,787,2.483,788,3.746,789,3.746,790,2.83,791,3.846,792,3.194,793,3.194,794,3.194,795,3.746,796,3.746,797,3.746,798,3.746,799,3.746,800,2.117,801,2.483,802,4.79,803,2.483,804,1.483,805,2.483,806,1.483,807,1.483,808,1.483,809,1.483,810,1.483,811,1.483,812,1.483,813,2.117,814,1.483,815,2.483,816,1.483,817,1.483,818,1.483,819,1.483,820,1.483,821,1.483,822,1.483,823,1.483,824,3.846,825,1.483,826,1.483,827,1.483,828,1.483,829,1.483,830,1.483,831,1.483,832,1.483,833,1.483,834,1.483,835,1.483,836,1.483,837,1.264,838,1.483,839,1.264,840,1.483,841,3.203,842,2.117,843,2.117,844,2.117,845,1.483,846,1.264,847,1.483,848,2.483,849,2.483,850,1.483,851,1.483,852,1.483,853,1.483,854,1.483,855,1.483,856,1.483,857,1.483,858,1.483,859,1.483,860,1.483,861,1.483,862,1.483,863,1.483,864,1.483,865,1.483,866,1.483,867,1.483,868,1.483,869,1.483,870,1.483,871,2.483,872,1.483,873,1.483,874,1.483,875,1.483,876,1.483,877,2.483,878,1.483,879,1.483,880,1.483,881,1.483,882,1.483,883,1.483,884,1.483,885,1.483,886,1.483,887,1.483,888,2.483,889,2.483,890,2.483,891,2.117,892,2.483,893,2.117,894,2.483,895,2.483]],["title/injectables/PublicGuard.html",[278,0.306,452,2.025]],["body/injectables/PublicGuard.html",[2,0.209,3,0.179,7,0.15,23,0.209,25,0.933,41,0.769,52,0.599,60,0.348,62,0.938,63,0.022,64,0.716,65,0.348,66,0.938,68,0.895,102,1.657,111,0.68,112,0.558,143,0.179,144,0.059,145,0.933,276,0.017,277,0.017,278,0.526,281,3.421,282,2.915,283,3.889,284,2.078,286,3.738,287,4.352,291,1.995,292,3.421,293,2.132,294,2.132,297,2.132,356,3.776,412,3.738,452,3.157,508,3.421,791,4.666,896,3.639,897,4.268,898,5.472,899,5.472,900,5.472,901,5.472,902,5.472,903,4.268,904,4.268,905,6.041,906,4.268]],["title/classes/Question.html",[18,1.212,144,0.049]],["body/classes/Question.html",[2,0.177,3,0.151,7,0.126,18,1.69,23,0.177,24,1.008,30,4.182,32,5.082,33,3.86,36,2.733,40,2.061,60,0.449,63,0.022,65,0.452,92,2.157,111,0.74,119,3.342,120,3.071,121,3.86,122,3.071,123,3.071,124,3.071,125,2.721,126,3.071,127,3.584,128,3.071,143,0.151,144,0.068,149,4.503,231,1.812,276,0.015,277,0.015,302,5.082,303,5.082,304,5.082,907,3.071,908,5.961,909,5.961,910,3.602,911,3.602,912,3.602,913,3.602,914,3.602,915,3.602,916,3.602,917,3.602,918,3.602,919,3.602,920,3.602,921,3.602,922,3.602,923,3.602,924,3.602]],["title/injectables/QuestionService.html",[57,2.025,278,0.306]],["body/injectables/QuestionService.html",[2,0.167,3,0.143,7,0.119,18,2.236,23,0.167,25,0.743,41,0.66,52,0.477,57,2.712,60,0.389,62,0.997,63,0.022,64,0.761,65,0.299,66,0.997,68,0.887,69,1.449,92,2.093,111,0.711,112,0.445,132,3.211,138,1.588,139,1.108,140,1.401,142,1.319,143,0.143,144,0.047,145,0.743,231,2.06,276,0.014,277,0.014,278,0.469,310,1.995,325,2.604,335,2.258,347,2.897,359,2.897,366,1.82,367,1.82,422,1.401,513,4.596,518,4.596,529,1.588,534,2.854,535,1.49,536,1.49,537,1.588,539,2.719,540,2.719,541,2.719,542,2.719,543,2.398,544,2.719,545,2.939,608,4.125,790,2.567,925,2.897,926,4.008,927,3.398,928,3.398,929,3.398,930,3.398,931,3.398,932,3.398,933,4.008,934,5.39,935,4.959,936,5.206,937,3.398,938,3.398,939,3.398,940,3.398,941,2.897,942,4.701,943,2.897]],["title/classes/QuestionType.html",[33,2.025,144,0.049]],["body/classes/QuestionType.html",[2,0.253,3,0.217,7,0.181,23,0.253,24,1.268,33,3.551,60,0.392,63,0.021,65,0.392,143,0.217,144,0.086,231,2.145,276,0.019,277,0.019,944,5.608,945,4.399,946,5.807,947,6.811,948,5.16,949,5.16]],["title/injectables/QuestionTypeService.html",[56,2.194,278,0.306]],["body/injectables/QuestionTypeService.html",[2,0.223,3,0.191,7,0.16,23,0.223,25,0.997,41,0.802,52,0.64,56,3.567,60,0.363,62,0.781,63,0.022,64,0.597,65,0.29,66,0.781,68,0.802,111,0.734,112,0.597,139,1.487,140,1.88,142,1.77,143,0.191,144,0.064,145,0.997,276,0.017,277,0.017,278,0.542,310,2.143,325,2.827,335,1.77,422,1.88,529,2.131,534,2.667,535,1.999,536,1.999,537,2.131,539,2.131,540,2.131,541,2.131,542,2.131,543,1.88,544,2.131,950,4.706,951,3.887,952,4.559,953,4.559,954,4.559]],["title/components/RegisterComponent.html",[0,0.528,265,1.022]],["body/components/RegisterComponent.html",[0,0.955,1,1.109,2,0.187,3,0.16,4,1.478,5,1.478,6,1.478,7,0.134,11,2.094,12,2.506,14,1.478,15,2.804,16,2.495,17,1.242,19,1.972,21,1.972,23,0.187,40,1.173,41,0.713,46,2.514,52,0.803,60,0.323,63,0.022,64,0.665,68,0.535,69,1.173,111,0.428,112,0.498,143,0.16,144,0.053,166,1.315,236,1.315,237,1.972,238,1.972,239,1.972,240,2.367,241,1.478,242,2.219,243,1.173,244,1.754,245,1.972,246,1.173,247,1.478,248,1.173,249,1.478,250,1.173,251,1.478,252,1.173,253,1.394,254,1.478,255,1.173,256,1.478,257,1.109,258,1.478,259,1.109,260,1.478,261,1.173,262,1.859,263,1.109,264,1.478,265,1.775,266,1.478,267,1.109,268,1.478,269,1.109,270,1.478,271,1.109,272,1.315,273,1.478,274,1.173,275,1.478,276,0.015,277,0.015,511,3.837,955,3.246,956,5.079,957,5.079,958,3.808,959,3.808]],["title/classes/Status.html",[121,2.025,144,0.049]],["body/classes/Status.html",[2,0.255,3,0.219,7,0.183,23,0.255,24,1.275,60,0.394,63,0.021,65,0.394,121,3.569,143,0.219,144,0.086,231,2.153,276,0.019,277,0.019,960,4.437,961,6.831,962,6.831,963,5.204,964,5.204]],["title/injectables/StatusService.html",[54,1.88,278,0.306]],["body/injectables/StatusService.html",[2,0.226,3,0.193,7,0.162,23,0.226,25,1.007,41,0.807,52,0.647,54,3.076,60,0.365,62,0.789,63,0.022,64,0.603,65,0.293,66,0.789,68,0.807,111,0.737,139,1.502,140,1.899,142,1.788,143,0.193,144,0.064,145,1.007,276,0.017,277,0.017,278,0.545,310,2.148,325,2.834,335,1.788,422,1.899,529,2.153,534,2.684,535,2.02,536,2.02,537,2.153,539,2.153,540,2.153,541,2.153,542,2.153,543,1.899,544,2.153,965,3.927,966,4.606,967,4.606,968,4.606,969,4.606]],["title/classes/Subject.html",[36,1.539,144,0.049]],["body/classes/Subject.html",[2,0.247,3,0.212,7,0.177,23,0.247,24,1.251,36,2.663,60,0.415,63,0.021,65,0.415,143,0.212,144,0.085,231,2.291,276,0.018,277,0.018,523,5.764,839,5.764,970,4.301,971,6.76,972,5.044,973,5.044,974,5.044]],["title/components/SubjectComponent.html",[0,0.528,267,1.022]],["body/components/SubjectComponent.html",[0,0.777,1,0.657,2,0.111,3,0.095,4,0.876,5,0.876,6,0.876,7,0.079,8,4.452,9,3.76,11,1.436,12,1.865,14,0.876,15,2.615,16,2.326,17,0.736,18,2.251,19,1.352,21,1.352,23,0.111,24,0.718,25,0.493,36,2.827,40,0.696,41,0.489,46,1.972,52,0.317,60,0.41,62,0.886,63,0.023,64,0.745,65,0.304,66,0.886,68,0.767,69,1.592,77,3.214,84,1.542,89,1.128,111,0.538,112,0.295,119,2.728,143,0.095,144,0.031,145,0.493,166,1.469,188,1.705,193,2.905,236,0.78,237,1.352,238,1.352,239,1.352,240,1.856,241,0.876,242,1.651,243,0.696,244,1.203,245,1.352,246,0.696,247,0.876,248,0.696,249,0.876,250,0.696,251,0.876,252,0.696,253,0.826,254,0.876,255,0.696,256,0.876,257,0.657,258,0.876,259,1.014,260,0.876,261,0.696,262,1.275,263,0.657,264,0.876,265,0.657,266,0.876,267,1.392,268,0.876,269,0.657,270,0.876,271,0.657,272,0.78,273,0.876,274,0.696,275,0.876,276,0.011,277,0.011,321,2.632,355,1.542,453,3.15,527,3.887,583,2.905,664,3.613,714,3.214,735,2.632,736,2.632,753,2.454,800,2.97,813,2.97,837,1.925,846,1.925,893,2.97,975,1.925,976,3.483,977,3.483,978,4.782,979,4.782,980,2.989,981,3.483,982,3.483,983,3.613,984,4.253,985,2.257,986,2.257,987,2.257,988,2.257,989,2.257,990,3.483,991,2.257,992,2.257,993,3.483,994,2.257,995,2.257,996,2.257,997,2.257,998,2.257,999,2.257,1000,2.257,1001,2.257,1002,2.97,1003,2.257,1004,2.257,1005,2.257,1006,4.253,1007,2.257,1008,4.782,1009,5.461,1010,2.257,1011,3.483,1012,2.257,1013,2.257,1014,4.253,1015,3.483,1016,2.257,1017,3.483,1018,4.782,1019,3.483,1020,2.257,1021,2.257,1022,2.257,1023,2.257,1024,2.257,1025,3.483,1026,3.483]],["title/injectables/SubjectService.html",[278,0.306,453,2.025]],["body/injectables/SubjectService.html",[2,0.151,3,0.129,7,0.108,17,1.432,23,0.151,24,0.905,25,0.674,36,2.763,41,0.617,52,0.433,60,0.41,62,1.049,63,0.022,64,0.801,65,0.355,66,1.049,68,0.954,111,0.663,112,0.404,132,2.107,138,1.442,139,1.006,140,1.272,142,1.197,143,0.129,144,0.043,145,0.674,231,2.215,276,0.013,277,0.013,278,0.445,310,1.941,325,2.524,335,2.377,342,4.211,366,1.652,367,1.652,422,1.272,453,2.534,529,1.442,534,2.945,535,1.352,536,1.352,537,2.605,539,2.862,540,2.862,541,2.862,542,2.862,543,2.524,544,2.862,545,1.928,608,3.484,943,2.63,1027,2.63,1028,4.392,1029,4.392,1030,4.392,1031,4.392,1032,4.392,1033,4.392,1034,3.084,1035,3.084,1036,4.392,1037,5.115,1038,3.084,1039,4.392,1040,4.392,1041,3.084,1042,4.392,1043,3.084,1044,4.392,1045,3.084,1046,3.084,1047,3.745,1048,3.084,1049,3.084,1050,3.084,1051,4.392]],["title/components/SystemAdminPanelComponent.html",[0,0.528,269,1.022]],["body/components/SystemAdminPanelComponent.html",[0,0.825,1,0.752,2,0.127,3,0.109,4,1.003,5,1.003,6,1.003,7,0.091,11,1.591,12,2.026,14,1.003,15,2.671,16,2.376,17,1.789,18,1.77,19,1.499,21,1.499,23,0.127,24,0.795,25,0.565,33,3.536,37,4.37,40,0.796,41,0.542,46,2.113,52,0.363,56,3.728,58,3.291,59,4.37,60,0.412,62,0.443,63,0.022,64,0.605,65,0.379,66,0.443,68,0.77,69,1.579,87,1.208,88,1.208,98,2.203,102,1.499,111,0.577,112,0.338,117,2.203,134,1.952,135,1.765,143,0.109,144,0.036,145,0.565,148,2.203,150,2.203,166,0.893,174,3.291,230,3.291,236,0.893,237,1.499,238,1.499,239,1.499,240,1.99,241,1.003,242,1.794,243,0.796,244,2.482,245,1.499,246,0.796,247,1.003,248,0.796,249,1.003,250,0.796,251,1.003,252,0.796,253,0.946,254,1.003,255,0.796,256,1.003,257,0.752,258,1.003,259,0.752,260,1.003,261,0.796,262,1.413,263,0.752,264,1.003,265,0.752,266,1.003,267,0.752,268,1.003,269,1.492,270,2.315,271,0.752,272,0.893,273,1.003,274,0.796,275,1.003,276,0.012,277,0.012,500,4.955,674,3.291,714,1.952,753,1.491,946,2.203,950,1.952,1052,5.592,1053,2.203,1054,3.86,1055,3.86,1056,5.125,1057,5.125,1058,5.125,1059,4.621,1060,5.125,1061,5.125,1062,2.584,1063,3.86,1064,2.584,1065,2.584,1066,2.584,1067,2.584,1068,2.584,1069,2.584,1070,2.584,1071,2.584,1072,2.584,1073,2.584,1074,2.584,1075,2.584,1076,3.86,1077,3.86,1078,2.584,1079,2.584,1080,3.86]],["title/injectables/SystemGuard.html",[278,0.306,454,2.025]],["body/injectables/SystemGuard.html",[2,0.218,3,0.187,7,0.156,23,0.218,25,0.972,41,0.789,52,0.625,60,0.357,62,0.963,63,0.022,64,0.735,65,0.357,66,0.963,68,0.865,102,1.726,111,0.693,112,0.582,143,0.187,144,0.062,145,0.972,276,0.017,277,0.017,278,0.536,281,3.511,282,3.037,283,3.93,284,2.256,286,3.837,287,4.418,288,4.652,289,4.887,291,2.078,292,3.511,293,2.221,294,2.221,296,3.791,297,2.221,298,3.36,454,3.241,1081,3.791,1082,4.447,1083,4.447]],["title/components/TestPrintPreviewComponent.html",[0,0.528,271,1.022]],["body/components/TestPrintPreviewComponent.html",[0,0.846,1,0.799,2,0.135,3,0.115,4,1.066,5,1.066,6,1.066,7,0.096,11,1.665,12,2.1,13,4.083,14,1.066,15,2.694,16,2.397,17,0.896,18,2.032,19,1.567,21,1.567,23,0.135,24,0.832,40,0.846,41,0.567,45,4.501,46,2.177,52,0.673,60,0.387,63,0.022,64,0.77,65,0.175,68,0.567,69,1.244,111,0.309,112,0.359,127,2.828,143,0.115,144,0.038,149,3.989,166,2.355,181,1.875,231,1.317,235,3.442,236,0.948,237,1.567,238,1.567,239,1.567,240,2.05,241,1.066,242,1.859,243,0.846,244,1.395,245,1.567,246,0.846,247,1.066,248,0.846,249,1.066,250,0.846,251,1.066,252,0.846,253,1.005,254,1.066,255,0.846,256,1.066,257,0.799,258,1.066,259,0.799,260,1.066,261,0.846,262,1.932,263,0.799,264,1.066,265,0.799,266,1.066,267,0.799,268,1.066,269,0.799,270,1.066,271,1.537,272,2.445,273,1.066,274,0.846,275,1.066,276,0.012,277,0.012,504,4.714,709,3.05,734,4.714,737,3.989,739,3.989,747,3.989,748,3.989,749,3.989,750,3.989,751,3.989,752,3.989,753,2.329,754,3.989,792,4.501,793,4.501,794,4.501,842,2.341,843,2.341,844,2.341,1084,5.319,1085,2.341,1086,4.038,1087,4.038,1088,2.746,1089,2.746,1090,2.746,1091,2.746,1092,2.746,1093,2.746,1094,2.746,1095,2.746,1096,2.746,1097,2.746,1098,2.746,1099,4.038,1100,2.746,1101,5.279,1102,4.038]],["title/injectables/TestService.html",[278,0.306,685,2.194]],["body/injectables/TestService.html",[2,0.149,3,0.128,7,0.107,23,0.149,25,0.665,41,0.611,52,0.427,60,0.399,62,1.045,63,0.023,64,0.797,65,0.277,66,1.045,68,0.952,92,1.971,111,0.686,112,0.398,134,3.286,138,1.422,139,0.992,140,1.254,142,1.181,143,0.128,144,0.042,145,0.665,166,2.105,231,2.13,276,0.013,277,0.013,278,0.442,310,1.933,313,2.299,324,2.299,325,2.513,335,2.366,366,1.63,367,1.63,422,1.254,512,4.328,529,1.422,534,2.933,535,1.334,536,1.334,537,1.422,539,2.849,540,2.849,541,2.849,542,2.849,543,2.513,544,2.849,545,3.663,608,3.922,685,2.719,733,3.708,790,2.299,926,3.708,933,3.708,935,4.723,936,4.996,941,2.594,1047,2.594,1103,2.594,1104,5.076,1105,3.043,1106,3.043,1107,3.043,1108,3.043,1109,3.043,1110,3.043,1111,3.043,1112,4.349,1113,3.043,1114,4.349,1115,3.043,1116,3.043,1117,2.594,1118,3.043,1119,5.076,1120,3.043,1121,3.043,1122,3.043,1123,3.043]],["title/interceptors/TokenInterceptor.html",[455,2.397,1124,2.993]],["body/interceptors/TokenInterceptor.html",[2,0.21,3,0.18,7,0.151,11,1.768,23,0.21,24,1.131,41,0.771,42,3.749,52,0.602,60,0.385,62,0.941,63,0.022,64,0.718,65,0.385,66,0.941,68,0.771,111,0.718,112,0.561,139,1.399,143,0.18,144,0.06,276,0.017,277,0.017,278,0.478,284,2.201,294,2.142,335,2.131,339,5.162,356,4.124,363,3.656,434,3.656,455,3.749,1124,3.656,1125,4.288,1126,5.489,1127,4.288,1128,4.288,1129,5.489,1130,6.383,1131,6.054,1132,6.383,1133,4.288,1134,4.288,1135,4.288,1136,5.489,1137,4.288,1138,4.288,1139,4.288,1140,4.288,1141,4.288]],["title/classes/Visibility.html",[40,1.082,144,0.049]],["body/classes/Visibility.html",[2,0.255,3,0.219,7,0.183,23,0.255,24,1.275,40,1.906,60,0.394,63,0.021,65,0.394,143,0.219,144,0.086,231,2.153,276,0.019,277,0.019,1142,4.437,1143,6.831,1144,6.831,1145,5.204,1146,5.204]],["title/components/VisibilityComponent.html",[0,0.528,274,1.082]],["body/components/VisibilityComponent.html",[0,0.865,1,0.843,2,0.142,3,0.122,4,1.124,5,1.124,6,1.124,7,0.102,8,4.408,9,3.723,11,1.731,12,2.165,14,1.124,15,2.714,16,2.414,17,0.944,18,2.229,19,1.63,21,1.63,23,0.142,24,0.865,40,2.068,41,0.59,46,2.232,52,0.407,60,0.403,62,0.846,63,0.022,64,0.752,65,0.314,66,0.846,68,0.761,69,1.521,84,1.978,89,1.446,111,0.472,112,0.379,143,0.122,144,0.04,145,0.633,161,2.469,166,1.45,236,1,237,1.63,238,1.63,239,1.63,240,2.102,241,1.124,242,1.917,243,0.892,244,1.45,245,1.63,246,0.892,247,1.124,248,0.892,249,1.124,250,0.892,251,1.124,252,0.892,253,1.06,254,1.124,255,0.892,256,1.124,257,0.843,258,1.124,259,0.843,260,1.124,261,0.892,262,1.536,263,0.843,264,1.124,265,0.843,266,1.124,267,0.843,268,1.124,269,0.843,270,1.124,271,0.843,272,1,273,1.124,274,1.668,275,1.124,276,0.013,277,0.013,321,3.171,355,1.978,583,3.372,664,4.091,824,3.579,983,4.091,1002,4.209,1147,2.469,1148,4.197,1149,4.197,1150,5.414,1151,4.197,1152,4.937,1153,2.896,1154,4.094,1155,2.896,1156,2.896,1157,2.896,1158,2.896,1159,4.197,1160,2.896,1161,2.896,1162,2.896,1163,2.896,1164,2.896,1165,2.896,1166,4.197,1167,2.896,1168,4.197,1169,2.896,1170,4.197,1171,2.896,1172,2.896,1173,4.197,1174,4.197]],["title/injectables/VisibilityService.html",[278,0.306,1154,2.397]],["body/injectables/VisibilityService.html",[2,0.227,3,0.194,7,0.163,23,0.227,25,1.012,41,0.809,52,0.65,60,0.367,62,0.794,63,0.022,64,0.606,65,0.295,66,0.794,68,0.809,111,0.738,112,0.606,139,1.51,140,1.909,142,1.797,143,0.194,144,0.065,145,1.012,276,0.017,277,0.017,278,0.546,310,2.15,325,2.838,335,1.797,422,1.909,529,2.164,534,2.693,535,2.03,536,2.03,537,2.164,539,2.164,540,2.164,541,2.164,542,2.164,543,1.909,544,2.164,1154,3.935,1175,3.947,1176,4.629,1177,4.629,1178,4.629]],["title/classes/YearOfStudy.html",[144,0.049,980,2.194]],["body/classes/YearOfStudy.html",[2,0.253,3,0.217,7,0.181,23,0.253,24,1.268,60,0.392,63,0.021,65,0.392,143,0.217,144,0.086,231,2.145,276,0.019,277,0.019,980,3.847,1179,5.608,1180,4.399,1181,6.811,1182,6.811,1183,5.16,1184,5.16]],["title/injectables/YearOfStudyService.html",[278,0.306,1185,2.652]],["body/injectables/YearOfStudyService.html",[2,0.206,3,0.177,7,0.148,17,1.769,23,0.206,25,0.92,41,0.762,52,0.591,60,0.382,62,0.93,63,0.022,64,0.71,65,0.268,66,0.93,68,0.89,111,0.738,112,0.551,138,1.967,139,1.372,140,1.735,142,1.634,143,0.177,144,0.059,145,0.92,276,0.016,277,0.016,278,0.522,310,2.105,325,2.769,335,2.105,366,2.254,367,2.254,422,1.735,529,1.967,534,2.805,535,1.845,536,1.845,537,1.967,539,2.535,540,2.535,541,2.535,542,2.535,543,2.236,544,2.535,545,2.63,980,3.39,1185,4.097,1186,5.404,1187,3.588,1188,4.208,1189,5.423,1190,4.208,1191,4.208,1192,4.208,1193,4.208]],["title/coverage.html",[1194,4.099]],["body/coverage.html",[0,1.04,1,0.84,7,0.101,8,3.366,9,2.843,10,4.202,18,1.702,30,1.804,33,1.665,36,1.266,40,0.889,54,1.546,55,1.972,56,1.804,57,1.665,63,0.022,65,0.184,89,1.442,119,1.442,121,1.665,127,1.546,144,0.09,243,0.889,244,1.446,246,0.889,248,0.889,250,0.889,252,0.889,255,0.889,257,0.84,259,0.84,261,0.889,263,0.84,265,0.84,267,0.84,269,0.84,271,0.84,272,1.446,274,0.889,276,0.013,277,0.013,278,0.602,279,1.665,280,2.461,284,0.941,299,2.461,310,0.889,311,2.461,421,2.461,427,1.442,451,1.665,452,1.665,453,1.665,454,1.665,483,2.461,485,2.461,490,2.461,494,2.181,500,2.181,502,2.461,504,2.181,522,2.461,527,1.972,528,2.461,547,2.461,551,2.461,580,3.692,601,2.461,630,2.461,631,2.461,635,2.461,636,2.461,640,2.461,649,2.461,676,2.461,685,1.804,753,4.233,755,2.461,784,3.57,785,2.461,891,2.461,896,2.461,907,2.461,925,2.461,944,2.461,945,2.461,950,2.181,951,2.461,955,2.461,960,2.461,965,2.461,970,2.461,975,2.461,980,1.804,1027,2.461,1052,2.461,1053,3.57,1081,2.461,1084,2.461,1085,2.461,1103,2.461,1142,2.461,1147,2.461,1154,1.972,1175,2.461,1179,2.461,1180,2.461,1185,2.181,1186,2.461,1187,2.461,1194,2.461,1195,2.887,1196,2.887,1197,2.887,1198,5.406,1199,2.887,1200,4.928,1201,2.887,1202,2.887,1203,2.887,1204,2.887,1205,2.887,1206,2.887,1207,2.887,1208,2.887,1209,4.188,1210,2.887,1211,2.887,1212,6.873,1213,2.887,1214,2.887,1215,2.887,1216,2.887,1217,2.887,1218,4.928,1219,2.887,1220,2.887,1221,2.887,1222,2.887,1223,2.887,1224,2.461,1225,3.57,1226,5.406,1227,2.461,1228,3.57,1229,2.461,1230,2.461,1231,2.887]],["title/dependencies.html",[441,2.887,1232,2.923]],["body/dependencies.html",[63,0.022,112,0.551,130,5.116,133,4.097,135,2.874,262,1.54,276,0.016,277,0.016,293,2.102,439,2.102,441,2.874,443,3.39,461,4.624,462,4.097,471,3.39,472,2.874,480,3.179,983,3.179,1117,3.588,1233,4.208,1234,6.994,1235,4.208,1236,4.208,1237,4.208,1238,3.588,1239,4.208,1240,4.208,1241,6,1242,4.208,1243,4.208,1244,4.208,1245,4.208,1246,4.208,1247,5.423,1248,4.208,1249,6,1250,4.208,1251,4.208,1252,4.208,1253,4.208,1254,4.208,1255,4.208,1256,4.208,1257,4.208,1258,4.208,1259,4.208,1260,4.208,1261,4.208,1262,4.208,1263,4.208,1264,4.208,1265,4.208,1266,5.423,1267,4.208,1268,4.208,1269,4.208,1270,4.208,1271,4.208,1272,4.208,1273,4.208,1274,4.208,1275,4.208,1276,4.208,1277,5.423,1278,4.208,1279,4.208,1280,4.208]],["title/index.html",[23,0.143,1281,2.923,1282,2.923]],["body/index.html",[0,0.926,3,0.187,7,0.156,16,1.536,63,0.017,64,0.582,89,2.221,166,2.304,253,2.368,276,0.017,277,0.017,405,3.791,458,3.037,471,4.325,568,3.791,665,3.791,1238,5.25,1283,4.447,1284,5.617,1285,6.158,1286,4.447,1287,4.447,1288,4.447,1289,5.617,1290,6.918,1291,4.447,1292,4.447,1293,4.447,1294,4.447,1295,4.447,1296,4.447,1297,4.447,1298,4.447,1299,6.158,1300,4.447,1301,6.671,1302,4.447,1303,4.447,1304,4.447,1305,4.447,1306,4.447,1307,4.447,1308,3.791,1309,5.617,1310,5.617,1311,5.617,1312,4.447,1313,6.469,1314,4.447,1315,4.447,1316,6.158,1317,4.447,1318,4.447,1319,4.447]],["title/modules.html",[439,2.401]],["body/modules.html",[63,0.019,276,0.019,277,0.019,439,2.785,440,3.808,450,3.485,462,4.212,1320,5.575,1321,5.575,1322,6.441,1323,5.575,1324,5.575]],["title/overview.html",[1325,4.099]],["body/overview.html",[0,0.525,1,1.591,54,2.928,57,3.154,63,0.022,143,0.147,144,0.049,236,1.206,243,1.684,246,2.009,248,1.684,250,1.684,252,1.684,255,1.684,257,1.591,259,1.591,261,1.684,263,1.591,265,1.591,267,1.591,269,1.591,271,1.591,274,1.684,276,0.014,277,0.014,278,0.304,279,3.154,284,1.783,291,1.631,310,1.684,427,2.73,439,2.392,440,5.105,441,2.384,442,2.976,443,2.182,444,2.976,445,2.976,446,2.976,447,2.976,448,2.976,449,2.976,450,3.417,451,3.154,452,3.154,453,3.154,454,3.154,455,3.734,456,4.083,457,2.976,458,2.384,1325,2.976,1326,3.49,1327,4.789,1328,3.49,1329,3.49]],["title/routes.html",[291,2.247]],["body/routes.html",[63,0.02,276,0.02,277,0.02,291,2.68]],["title/miscellaneous/variables.html",[580,2.887,1330,2.492]],["body/miscellaneous/variables.html",[23,0.242,63,0.022,65,0.411,87,3.016,88,3.016,102,1.915,276,0.018,277,0.018,297,2.992,580,3.37,1224,4.206,1225,5.959,1227,4.206,1228,4.206,1229,5.501,1230,5.501,1308,5.108,1330,4.206,1331,5.991,1332,4.934,1333,4.934,1334,4.934,1335,4.934,1336,6.71]]],"invertedIndex":[["",{"_index":63,"title":{},"body":{"components/AddQuestionComponent.html":{},"injectables/AdminGuard.html":{},"classes/Answer.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Area.html":{},"injectables/AreaService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"classes/DifficultyLevel.html":{},"injectables/DifficultyLevelService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"injectables/PublicGuard.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/QuestionType.html":{},"injectables/QuestionTypeService.html":{},"components/RegisterComponent.html":{},"classes/Status.html":{},"injectables/StatusService.html":{},"classes/Subject.html":{},"components/SubjectComponent.html":{},"injectables/SubjectService.html":{},"components/SystemAdminPanelComponent.html":{},"injectables/SystemGuard.html":{},"components/TestPrintPreviewComponent.html":{},"injectables/TestService.html":{},"interceptors/TokenInterceptor.html":{},"classes/Visibility.html":{},"components/VisibilityComponent.html":{},"injectables/VisibilityService.html":{},"classes/YearOfStudy.html":{},"injectables/YearOfStudyService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":753,"title":{},"body":{"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{},"components/SubjectComponent.html":{},"components/SystemAdminPanelComponent.html":{},"components/TestPrintPreviewComponent.html":{},"coverage.html":{}}}],["0.0.25",{"_index":1268,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":1280,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1226,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1215,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1209,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1199,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1223,"title":{},"body":{"coverage.html":{}}}],["0/27",{"_index":1201,"title":{},"body":{"coverage.html":{}}}],["0/29",{"_index":1211,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1212,"title":{},"body":{"coverage.html":{}}}],["0/33",{"_index":1205,"title":{},"body":{"coverage.html":{}}}],["0/39",{"_index":1203,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1218,"title":{},"body":{"coverage.html":{}}}],["0/42",{"_index":1210,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1221,"title":{},"body":{"coverage.html":{}}}],["0/53",{"_index":1208,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1198,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1200,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1222,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":824,"title":{},"body":{"components/PreviewTestsComponent.html":{},"components/VisibilityComponent.html":{}}}],["1)*10)+(i+1",{"_index":894,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["1.0.0",{"_index":1249,"title":{},"body":{"dependencies.html":{}}}],["1.1.21",{"_index":1271,"title":{},"body":{"dependencies.html":{}}}],["1.4.1",{"_index":1265,"title":{},"body":{"dependencies.html":{}}}],["1/3",{"_index":1214,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":848,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["13",{"_index":1329,"title":{},"body":{"overview.html":{}}}],["16",{"_index":1327,"title":{},"body":{"overview.html":{}}}],["2",{"_index":1326,"title":{},"body":{"overview.html":{}}}],["2.0.3",{"_index":1240,"title":{},"body":{"dependencies.html":{}}}],["2.1.2",{"_index":1237,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1256,"title":{},"body":{"dependencies.html":{}}}],["2.6.0",{"_index":1246,"title":{},"body":{"dependencies.html":{}}}],["2018",{"_index":646,"title":{},"body":{"components/FooterComponent.html":{}}}],["3",{"_index":542,"title":{},"body":{"injectables/AreaService.html":{},"injectables/DifficultyLevelService.html":{},"injectables/QuestionService.html":{},"injectables/QuestionTypeService.html":{},"injectables/StatusService.html":{},"injectables/SubjectService.html":{},"injectables/TestService.html":{},"injectables/VisibilityService.html":{},"injectables/YearOfStudyService.html":{}}}],["3.0.1",{"_index":1272,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":1276,"title":{},"body":{"dependencies.html":{}}}],["3.3.0",{"_index":1274,"title":{},"body":{"dependencies.html":{}}}],["33",{"_index":1213,"title":{},"body":{"coverage.html":{}}}],["4.7.0",{"_index":1261,"title":{},"body":{"dependencies.html":{}}}],["41",{"_index":1216,"title":{},"body":{"coverage.html":{}}}],["45",{"_index":1219,"title":{},"body":{"coverage.html":{}}}],["5.0.0",{"_index":1252,"title":{},"body":{"dependencies.html":{}}}],["5.2.1",{"_index":1243,"title":{},"body":{"dependencies.html":{}}}],["5.3.1",{"_index":1258,"title":{},"body":{"dependencies.html":{}}}],["5/11",{"_index":1220,"title":{},"body":{"coverage.html":{}}}],["5/12",{"_index":1217,"title":{},"body":{"coverage.html":{}}}],["6.0.3",{"_index":1234,"title":{},"body":{"dependencies.html":{}}}],["6.0.8",{"_index":1287,"title":{},"body":{"index.html":{}}}],["6.2.1",{"_index":1277,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":1328,"title":{},"body":{"overview.html":{}}}],["_______________",{"_index":749,"title":{},"body":{"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{},"components/TestPrintPreviewComponent.html":{}}}],["_success",{"_index":26,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["access",{"_index":900,"title":{},"body":{"injectables/PublicGuard.html":{}}}],["accessor",{"_index":321,"title":{},"body":{"injectables/ApiService.html":{},"components/SubjectComponent.html":{},"components/VisibilityComponent.html":{}}}],["accordingli",{"_index":400,"title":{},"body":{"injectables/ApiService.html":{}}}],["achiev",{"_index":1102,"title":{},"body":{"components/TestPrintPreviewComponent.html":{}}}],["activatedroutesnapshot",{"_index":287,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AuthGuard.html":{},"injectables/PublicGuard.html":{},"injectables/SystemGuard.html":{}}}],["actual_compon",{"_index":275,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"components/RegisterComponent.html":{},"components/SubjectComponent.html":{},"components/SystemAdminPanelComponent.html":{},"components/TestPrintPreviewComponent.html":{},"components/VisibilityComponent.html":{}}}],["add",{"_index":17,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/AppComponent.html":{},"injectables/AreaService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"components/RegisterComponent.html":{},"components/SubjectComponent.html":{},"injectables/SubjectService.html":{},"components/SystemAdminPanelComponent.html":{},"components/TestPrintPreviewComponent.html":{},"components/VisibilityComponent.html":{},"injectables/YearOfStudyService.html":{}}}],["add(area",{"_index":531,"title":{},"body":{"injectables/AreaService.html":{}}}],["add(subject",{"_index":1033,"title":{},"body":{"injectables/SubjectService.html":{}}}],["add(yearofstudi",{"_index":1189,"title":{},"body":{"injectables/YearOfStudyService.html":{}}}],["additionalopt",{"_index":348,"title":{},"body":{"injectables/ApiService.html":{}}}],["addquest",{"_index":513,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/QuestionService.html":{}}}],["addquestion(quest",{"_index":928,"title":{},"body":{"injectables/QuestionService.html":{}}}],["addquestionbutton",{"_index":43,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["addquestioncompon",{"_index":1,"title":{"components/AddQuestionComponent.html":{}},"body":{"components/AddQuestionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"components/RegisterComponent.html":{},"components/SubjectComponent.html":{},"components/SystemAdminPanelComponent.html":{},"components/TestPrintPreviewComponent.html":{},"components/VisibilityComponent.html":{},"coverage.html":{},"overview.html":{}}}],["addquestiontypebutton",{"_index":1059,"title":{},"body":{"components/SystemAdminPanelComponent.html":{}}}],["addtest",{"_index":1104,"title":{},"body":{"injectables/TestService.html":{}}}],["addtest(test",{"_index":1106,"title":{},"body":{"injectables/TestService.html":{}}}],["admin",{"_index":244,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"components/RegisterComponent.html":{},"components/SubjectComponent.html":{},"components/SystemAdminPanelComponent.html":{},"components/TestPrintPreviewComponent.html":{},"components/VisibilityComponent.html":{},"coverage.html":{}}}],["adminguard",{"_index":279,"title":{"injectables/AdminGuard.html":{}},"body":{"injectables/AdminGuard.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["adminpanel",{"_index":514,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["adminpanelcompon",{"_index":243,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"components/RegisterComponent.html":{},"components/SubjectComponent.html":{},"components/SystemAdminPanelComponent.html":{},"components/TestPrintPreviewComponent.html":{},"components/VisibilityComponent.html":{},"coverage.html":{},"overview.html":{}}}],["again",{"_index":419,"title":{},"body":{"injectables/ApiService.html":{}}}],["alert",{"_index":1239,"title":{},"body":{"dependencies.html":{}}}],["alerttyp",{"_index":27,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["alpha.12",{"_index":1263,"title":{},"body":{"dependencies.html":{}}}],["alreadi",{"_index":901,"title":{},"body":{"injectables/PublicGuard.html":{}}}],["angular",{"_index":1238,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["angular/anim",{"_index":1233,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":480,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HeaderComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":139,"title":{},"body":{"components/AddQuestionComponent.html":{},"injectables/ApiService.html":{},"modules/AppModule.html":{},"injectables/AreaService.html":{},"injectables/AuthenticationService.html":{},"injectables/DifficultyLevelService.html":{},"components/LoginComponent.html":{},"injectables/QuestionService.html":{},"injectables/QuestionTypeService.html":{},"injectables/StatusService.html":{},"injectables/SubjectService.html":{},"injectables/TestService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/VisibilityService.html":{},"injectables/YearOfStudyService.html":{}}}],["angular/common/http/src/xsrf",{"_index":1075,"title":{},"body":{"components/SystemAdminPanelComponent.html":{}}}],["angular/compil",{"_index":1235,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":112,"title":{},"body":{"components/AddQuestionComponent.html":{},"injectables/AdminGuard.html":{},"injectables/ApiService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AreaService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"injectables/DifficultyLevelService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"injectables/PublicGuard.html":{},"injectables/QuestionService.html":{},"injectables/QuestionTypeService.html":{},"components/RegisterComponent.html":{},"components/SubjectComponent.html":{},"injectables/SubjectService.html":{},"components/SystemAdminPanelComponent.html":{},"injectables/SystemGuard.html":{},"components/TestPrintPreviewComponent.html":{},"injectables/TestService.html":{},"interceptors/TokenInterceptor.html":{},"components/VisibilityComponent.html":{},"injectables/VisibilityService.html":{},"injectables/YearOfStudyService.html":{},"dependencies.html":{}}}],["angular/form",{"_index":135,"title":{},"body":{"components/AddQuestionComponent.html":{},"modules/AppModule.html":{},"components/SystemAdminPanelComponent.html":{},"dependencies.html":{}}}],["angular/forms/src/directives/valid",{"_index":137,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["angular/http",{"_index":1117,"title":{},"body":{"injectables/TestService.html":{},"dependencies.html":{}}}],["angular/http/src/bodi",{"_index":938,"title":{},"body":{"injectables/QuestionService.html":{}}}],["angular/platform",{"_index":461,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":293,"title":{},"body":{"injectables/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/PublicGuard.html":{},"injectables/SystemGuard.html":{},"dependencies.html":{}}}],["angular2",{"_index":1241,"title":{},"body":{"dependencies.html":{}}}],["angularfire2",{"_index":1251,"title":{},"body":{"dependencies.html":{}}}],["answer",{"_index":127,"title":{"classes/Answer.html":{}},"body":{"components/AddQuestionComponent.html":{},"classes/Answer.html":{},"components/PreviewTestsComponent.html":{},"classes/Question.html":{},"components/TestPrintPreviewComponent.html":{},"coverage.html":{}}}],["answerpictur",{"_index":300,"title":{},"body":{"classes/Answer.html":{}}}],["answertext",{"_index":301,"title":{},"body":{"classes/Answer.html":{}}}],["api",{"_index":336,"title":{},"body":{"injectables/ApiService.html":{}}}],["api_root",{"_index":312,"title":{},"body":{"injectables/ApiService.html":{}}}],["apiservic",{"_index":310,"title":{"injectables/ApiService.html":{}},"body":{"injectables/ApiService.html":{},"modules/AppModule.html":{},"injectables/AreaService.html":{},"injectables/AuthenticationService.html":{},"injectables/DifficultyLevelService.html":{},"components/LoginComponent.html":{},"injectables/QuestionService.html":{},"injectables/QuestionTypeService.html":{},"injectables/StatusService.html":{},"injectables/SubjectService.html":{},"injectables/TestService.html":{},"injectables/VisibilityService.html":{},"injectables/YearOfStudyService.html":{},"coverage.html":{},"overview.html":{}}}],["apiservice/api.servic",{"_index":535,"title":{},"body":{"injectables/AreaService.html":{},"injectables/AuthenticationService.html":{},"injectables/DifficultyLevelService.html":{},"injectables/QuestionService.html":{},"injectables/QuestionTypeService.html":{},"injectables/StatusService.html":{},"injectables/SubjectService.html":{},"injectables/TestService.html":{},"injectables/VisibilityService.html":{},"injectables/YearOfStudyService.html":{}}}],["app",{"_index":16,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"components/RegisterComponent.html":{},"components/SubjectComponent.html":{},"components/SystemAdminPanelComponent.html":{},"components/TestPrintPreviewComponent.html":{},"components/VisibilityComponent.html":{},"index.html":{}}}],["app.compon",{"_index":707,"title":{},"body":{"components/HelloComponent.html":{}}}],["app.component.css",{"_index":423,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":424,"title":{},"body":{"components/AppComponent.html":{}}}],["appadmin",{"_index":623,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["appcompon",{"_index":246,"title":{"components/AppComponent.html":{}},"body":{"components/AddQuestionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"components/RegisterComponent.html":{},"components/SubjectComponent.html":{},"components/SystemAdminPanelComponent.html":{},"components/TestPrintPreviewComponent.html":{},"components/VisibilityComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application/json",{"_index":374,"title":{},"body":{"injectables/ApiService.html":{}}}],["appmodul",{"_index":440,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodul",{"_index":450,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["area",{"_index":119,"title":{"classes/Area.html":{}},"body":{"components/AddQuestionComponent.html":{},"classes/Area.html":{},"injectables/AreaService.html":{},"components/PreviewTestsComponent.html":{},"classes/Question.html":{},"components/SubjectComponent.html":{},"coverage.html":{}}}],["area).pip",{"_index":546,"title":{},"body":{"injectables/AreaService.html":{}}}],["areaid",{"_index":523,"title":{},"body":{"classes/Area.html":{},"classes/Subject.html":{}}}],["areanam",{"_index":524,"title":{},"body":{"classes/Area.html":{}}}],["areas').pip",{"_index":538,"title":{},"body":{"injectables/AreaService.html":{}}}],["areaservic",{"_index":527,"title":{"injectables/AreaService.html":{}},"body":{"injectables/AreaService.html":{},"components/SubjectComponent.html":{},"coverage.html":{}}}],["array",{"_index":934,"title":{},"body":{"injectables/QuestionService.html":{}}}],["artifact",{"_index":1302,"title":{},"body":{"index.html":{}}}],["assets/images/placeholderimage.png",{"_index":107,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["auth",{"_index":356,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"injectables/PublicGuard.html":{},"interceptors/TokenInterceptor.html":{}}}],["auth/login",{"_index":613,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["auth/regist",{"_index":618,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authent",{"_index":902,"title":{},"body":{"injectables/PublicGuard.html":{}}}],["authenticationservic",{"_index":427,"title":{"injectables/AuthenticationService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authguard",{"_index":451,"title":{"injectables/AuthGuard.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"coverage.html":{},"overview.html":{}}}],["author",{"_index":1139,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["authservic",{"_index":284,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AdminGuard.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/PublicGuard.html":{},"injectables/SystemGuard.html":{},"interceptors/TokenInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["authservice/auth.servic",{"_index":365,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthenticationService.html":{}}}],["authstatu",{"_index":552,"title":{},"body":{"injectables/AuthService.html":{}}}],["automat",{"_index":1295,"title":{},"body":{"index.html":{}}}],["avail",{"_index":1324,"title":{},"body":{"modules.html":{}}}],["awesom",{"_index":1260,"title":{},"body":{"dependencies.html":{}}}],["backdrop",{"_index":732,"title":{},"body":{"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{}}}],["backend",{"_index":403,"title":{},"body":{"injectables/ApiService.html":{}}}],["bad",{"_index":415,"title":{},"body":{"injectables/ApiService.html":{}}}],["base64",{"_index":93,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["base64_mark",{"_index":28,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["base64index",{"_index":222,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["baseurl",{"_index":322,"title":{},"body":{"injectables/ApiService.html":{}}}],["bearer",{"_index":376,"title":{},"body":{"injectables/ApiService.html":{}}}],["behaviorsubject",{"_index":577,"title":{},"body":{"injectables/AuthService.html":{}}}],["behaviorsubject(fals",{"_index":578,"title":{},"body":{"injectables/AuthService.html":{}}}],["biti",{"_index":211,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["blank",{"_index":889,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["bodi",{"_index":347,"title":{},"body":{"injectables/ApiService.html":{},"injectables/QuestionService.html":{}}}],["boolean",{"_index":292,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/PublicGuard.html":{},"injectables/SystemGuard.html":{}}}],["bootstrap",{"_index":443,"title":{},"body":{"modules/AppModule.html":{},"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/chronos/test/chain",{"_index":131,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["bootstrap/ng",{"_index":472,"title":{},"body":{"modules/AppModule.html":{},"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{},"dependencies.html":{}}}],["brows",{"_index":1322,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":462,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodul",{"_index":460,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1301,"title":{},"body":{"index.html":{}}}],["canactiv",{"_index":281,"title":{},"body":{"injectables/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"injectables/PublicGuard.html":{},"injectables/SystemGuard.html":{}}}],["canactivate(rout",{"_index":286,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AuthGuard.html":{},"injectables/PublicGuard.html":{},"injectables/SystemGuard.html":{}}}],["catcherror",{"_index":140,"title":{},"body":{"components/AddQuestionComponent.html":{},"injectables/AreaService.html":{},"injectables/DifficultyLevelService.html":{},"components/LoginComponent.html":{},"injectables/QuestionService.html":{},"injectables/QuestionTypeService.html":{},"injectables/StatusService.html":{},"injectables/SubjectService.html":{},"injectables/TestService.html":{},"injectables/VisibilityService.html":{},"injectables/YearOfStudyService.html":{}}}],["catcherror(this.apiservice.handleerror",{"_index":544,"title":{},"body":{"injectables/AreaService.html":{},"injectables/DifficultyLevelService.html":{},"injectables/QuestionService.html":{},"injectables/QuestionTypeService.html":{},"injectables/StatusService.html":{},"injectables/SubjectService.html":{},"injectables/TestService.html":{},"injectables/VisibilityService.html":{},"injectables/YearOfStudyService.html":{}}}],["chang",{"_index":1297,"title":{},"body":{"index.html":{}}}],["changesuccessmessag",{"_index":44,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["changesuccessmessage(messag",{"_index":70,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["check",{"_index":568,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["class",{"_index":144,"title":{"classes/Answer.html":{},"classes/Area.html":{},"classes/DifficultyLevel.html":{},"classes/Question.html":{},"classes/QuestionType.html":{},"classes/Status.html":{},"classes/Subject.html":{},"classes/Visibility.html":{},"classes/YearOfStudy.html":{}},"body":{"components/AddQuestionComponent.html":{},"injectables/AdminGuard.html":{},"classes/Answer.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"classes/Area.html":{},"injectables/AreaService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"classes/DifficultyLevel.html":{},"injectables/DifficultyLevelService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"injectables/PublicGuard.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/QuestionType.html":{},"injectables/QuestionTypeService.html":{},"components/RegisterComponent.html":{},"classes/Status.html":{},"injectables/StatusService.html":{},"classes/Subject.html":{},"components/SubjectComponent.html":{},"injectables/SubjectService.html":{},"components/SystemAdminPanelComponent.html":{},"injectables/SystemGuard.html":{},"components/TestPrintPreviewComponent.html":{},"injectables/TestService.html":{},"interceptors/TokenInterceptor.html":{},"classes/Visibility.html":{},"components/VisibilityComponent.html":{},"injectables/VisibilityService.html":{},"classes/YearOfStudy.html":{},"injectables/YearOfStudyService.html":{},"coverage.html":{},"overview.html":{}}}],["cli",{"_index":1285,"title":{},"body":{"index.html":{}}}],["click",{"_index":29,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{}}}],["client",{"_index":395,"title":{},"body":{"injectables/ApiService.html":{}}}],["close",{"_index":725,"title":{},"body":{"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{}}}],["closeresult",{"_index":680,"title":{},"body":{"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{}}}],["clue",{"_index":407,"title":{},"body":{"injectables/ApiService.html":{}}}],["cluster_appmodul",{"_index":445,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":448,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":446,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":447,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":449,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":405,"title":{},"body":{"injectables/ApiService.html":{},"index.html":{}}}],["collapsesubject",{"_index":1060,"title":{},"body":{"components/SystemAdminPanelComponent.html":{}}}],["commonmodul",{"_index":479,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["compat",{"_index":1278,"title":{},"body":{"dependencies.html":{}}}],["compon",{"_index":0,"title":{"components/AddQuestionComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"components/RegisterComponent.html":{},"components/SubjectComponent.html":{},"components/SystemAdminPanelComponent.html":{},"components/TestPrintPreviewComponent.html":{},"components/VisibilityComponent.html":{}},"body":{"components/AddQuestionComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"components/RegisterComponent.html":{},"components/SubjectComponent.html":{},"components/SystemAdminPanelComponent.html":{},"components/TestPrintPreviewComponent.html":{},"components/VisibilityComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":241,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"components/RegisterComponent.html":{},"components/SubjectComponent.html":{},"components/SystemAdminPanelComponent.html":{},"components/TestPrintPreviewComponent.html":{},"components/VisibilityComponent.html":{}}}],["components/add",{"_index":468,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/admin",{"_index":489,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/edit",{"_index":501,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/gener",{"_index":484,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/hello/hello.compon",{"_index":496,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/login/login.compon",{"_index":487,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/preview",{"_index":482,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/register/register.compon",{"_index":488,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/system",{"_index":499,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/test",{"_index":503,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["confirmpassword",{"_index":620,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["console.error",{"_index":410,"title":{},"body":{"injectables/ApiService.html":{}}}],["console.error('an",{"_index":401,"title":{},"body":{"injectables/ApiService.html":{}}}],["console.log('df",{"_index":627,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["const",{"_index":215,"title":{},"body":{"components/AddQuestionComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/HeaderComponent.html":{},"components/PreviewTestsComponent.html":{}}}],["constructor",{"_index":52,"title":{},"body":{"components/AddQuestionComponent.html":{},"injectables/AdminGuard.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AreaService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"injectables/DifficultyLevelService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"injectables/PublicGuard.html":{},"injectables/QuestionService.html":{},"injectables/QuestionTypeService.html":{},"components/RegisterComponent.html":{},"injectables/StatusService.html":{},"components/SubjectComponent.html":{},"injectables/SubjectService.html":{},"components/SystemAdminPanelComponent.html":{},"injectables/SystemGuard.html":{},"components/TestPrintPreviewComponent.html":{},"injectables/TestService.html":{},"interceptors/TokenInterceptor.html":{},"components/VisibilityComponent.html":{},"injectables/VisibilityService.html":{},"injectables/YearOfStudyService.html":{}}}],["constructor(auth",{"_index":1127,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["constructor(authenticationservic",{"_index":654,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["constructor(authservic",{"_index":323,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{}}}],["constructor(form",{"_index":1062,"title":{},"body":{"components/SystemAdminPanelComponent.html":{}}}],["constructor(http",{"_index":602,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["constructor(httpcli",{"_index":529,"title":{},"body":{"injectables/AreaService.html":{},"injectables/DifficultyLevelService.html":{},"injectables/QuestionService.html":{},"injectables/QuestionTypeService.html":{},"injectables/StatusService.html":{},"injectables/SubjectService.html":{},"injectables/TestService.html":{},"injectables/VisibilityService.html":{},"injectables/YearOfStudyService.html":{}}}],["constructor(priv",{"_index":145,"title":{},"body":{"components/AddQuestionComponent.html":{},"injectables/AdminGuard.html":{},"injectables/ApiService.html":{},"injectables/AreaService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/DifficultyLevelService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"injectables/PublicGuard.html":{},"injectables/QuestionService.html":{},"injectables/QuestionTypeService.html":{},"injectables/StatusService.html":{},"components/SubjectComponent.html":{},"injectables/SubjectService.html":{},"components/SystemAdminPanelComponent.html":{},"injectables/SystemGuard.html":{},"injectables/TestService.html":{},"components/VisibilityComponent.html":{},"injectables/VisibilityService.html":{},"injectables/YearOfStudyService.html":{}}}],["constructor(publ",{"_index":434,"title":{},"body":{"components/AppComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["constructor(rout",{"_index":282,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AuthGuard.html":{},"injectables/PublicGuard.html":{},"injectables/SystemGuard.html":{}}}],["constructor(statusservic",{"_index":53,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["constructor(subjectservic",{"_index":985,"title":{},"body":{"components/SubjectComponent.html":{}}}],["constructor(testservc",{"_index":684,"title":{},"body":{"components/HelloComponent.html":{}}}],["constructor(testservic",{"_index":804,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["constructor(visibilityservic",{"_index":1153,"title":{},"body":{"components/VisibilityComponent.html":{}}}],["contain",{"_index":406,"title":{},"body":{"injectables/ApiService.html":{}}}],["content",{"_index":696,"title":{},"body":{"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{}}}],["context",{"_index":1229,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["core",{"_index":1254,"title":{},"body":{"dependencies.html":{}}}],["count",{"_index":788,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["coverag",{"_index":1194,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":738,"title":{},"body":{"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{}}}],["createdd",{"_index":302,"title":{},"body":{"classes/Answer.html":{},"classes/Question.html":{}}}],["creator",{"_index":908,"title":{},"body":{"classes/Question.html":{}}}],["d",{"_index":886,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["danger",{"_index":191,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["data",{"_index":574,"title":{},"body":{"injectables/AuthService.html":{}}}],["date",{"_index":737,"title":{},"body":{"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{},"components/TestPrintPreviewComponent.html":{}}}],["dd",{"_index":877,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["dd.tostr",{"_index":887,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["debounc",{"_index":708,"title":{},"body":{"components/HelloComponent.html":{}}}],["debouncetim",{"_index":141,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/HelloComponent.html":{}}}],["debouncetime(3000",{"_index":180,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["declar",{"_index":442,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["default",{"_index":87,"title":{},"body":{"components/AddQuestionComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"components/SystemAdminPanelComponent.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":60,"title":{},"body":{"components/AddQuestionComponent.html":{},"injectables/AdminGuard.html":{},"classes/Answer.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"classes/DifficultyLevel.html":{},"injectables/DifficultyLevelService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"injectables/PublicGuard.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/QuestionType.html":{},"injectables/QuestionTypeService.html":{},"components/RegisterComponent.html":{},"classes/Status.html":{},"injectables/StatusService.html":{},"classes/Subject.html":{},"components/SubjectComponent.html":{},"injectables/SubjectService.html":{},"components/SystemAdminPanelComponent.html":{},"injectables/SystemGuard.html":{},"components/TestPrintPreviewComponent.html":{},"injectables/TestService.html":{},"interceptors/TokenInterceptor.html":{},"classes/Visibility.html":{},"components/VisibilityComponent.html":{},"injectables/VisibilityService.html":{},"classes/YearOfStudy.html":{},"injectables/YearOfStudyService.html":{}}}],["delet",{"_index":345,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{}}}],["depend",{"_index":441,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descript",{"_index":897,"title":{},"body":{"injectables/PublicGuard.html":{}}}],["dev",{"_index":1292,"title":{},"body":{"index.html":{}}}],["develop",{"_index":1288,"title":{},"body":{"index.html":{}}}],["devicevalu",{"_index":77,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/PreviewTestsComponent.html":{},"components/SubjectComponent.html":{}}}],["difficulti",{"_index":232,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["difficultylevel",{"_index":30,"title":{"classes/DifficultyLevel.html":{}},"body":{"components/AddQuestionComponent.html":{},"classes/DifficultyLevel.html":{},"classes/Question.html":{},"coverage.html":{}}}],["difficultylevel').pip",{"_index":639,"title":{},"body":{"injectables/DifficultyLevelService.html":{}}}],["difficultylevelid",{"_index":632,"title":{},"body":{"classes/DifficultyLevel.html":{}}}],["difficultylevelservic",{"_index":55,"title":{"injectables/DifficultyLevelService.html":{}},"body":{"components/AddQuestionComponent.html":{},"injectables/DifficultyLevelService.html":{},"coverage.html":{}}}],["direct",{"_index":239,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"components/RegisterComponent.html":{},"components/SubjectComponent.html":{},"components/SystemAdminPanelComponent.html":{},"components/TestPrintPreviewComponent.html":{},"components/VisibilityComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":1300,"title":{},"body":{"index.html":{}}}],["directori",{"_index":1305,"title":{},"body":{"index.html":{}}}],["dismiss",{"_index":726,"title":{},"body":{"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{}}}],["dist",{"_index":1304,"title":{},"body":{"index.html":{}}}],["doc",{"_index":858,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["doc.fromhtml(s,30,60",{"_index":874,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["doc.line(30,32,190,32",{"_index":865,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["doc.setfont('ari",{"_index":861,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["doc.setfontsize(14",{"_index":864,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["doc.setfontsize(22",{"_index":862,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["doc.text(\"grupa:\"+item.group,160,40",{"_index":866,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["doc.text(\"test",{"_index":867,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["doc.text(item.subject.subjectname,90,30",{"_index":863,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["document",{"_index":1195,"title":{},"body":{"coverage.html":{}}}],["dodano",{"_index":205,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"components/RegisterComponent.html":{},"components/SubjectComponent.html":{},"components/SystemAdminPanelComponent.html":{},"components/TestPrintPreviewComponent.html":{},"components/VisibilityComponent.html":{}}}],["dynam",{"_index":1236,"title":{},"body":{"dependencies.html":{}}}],["e2",{"_index":1314,"title":{},"body":{"index.html":{}}}],["edit",{"_index":249,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"components/RegisterComponent.html":{},"components/SubjectComponent.html":{},"components/SystemAdminPanelComponent.html":{},"components/TestPrintPreviewComponent.html":{},"components/VisibilityComponent.html":{}}}],["editor",{"_index":1273,"title":{},"body":{"dependencies.html":{}}}],["editquest",{"_index":518,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/QuestionService.html":{}}}],["editquestion(id",{"_index":930,"title":{},"body":{"injectables/QuestionService.html":{}}}],["editquestioncompon",{"_index":248,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"components/RegisterComponent.html":{},"components/SubjectComponent.html":{},"components/SystemAdminPanelComponent.html":{},"components/TestPrintPreviewComponent.html":{},"components/VisibilityComponent.html":{},"coverage.html":{},"overview.html":{}}}],["element",{"_index":238,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"components/RegisterComponent.html":{},"components/SubjectComponent.html":{},"components/SystemAdminPanelComponent.html":{},"components/TestPrintPreviewComponent.html":{},"components/VisibilityComponent.html":{}}}],["email",{"_index":614,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{}}}],["emit",{"_index":590,"title":{},"body":{"injectables/AuthService.html":{}}}],["en",{"_index":661,"title":{},"body":{"components/HeaderComponent.html":{}}}],["end",{"_index":1313,"title":{},"body":{"index.html":{}}}],["environ",{"_index":1225,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":782,"title":{},"body":{"components/LoginComponent.html":{}}}],["err.error.messag",{"_index":783,"title":{},"body":{"components/LoginComponent.html":{}}}],["error",{"_index":342,"title":{},"body":{"injectables/ApiService.html":{},"components/LoginComponent.html":{},"injectables/SubjectService.html":{}}}],["error.error",{"_index":392,"title":{},"body":{"injectables/ApiService.html":{}}}],["error.error.messag",{"_index":402,"title":{},"body":{"injectables/ApiService.html":{}}}],["error.statu",{"_index":411,"title":{},"body":{"injectables/ApiService.html":{}}}],["errorev",{"_index":394,"title":{},"body":{"injectables/ApiService.html":{}}}],["esc",{"_index":730,"title":{},"body":{"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{}}}],["event",{"_index":84,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/PreviewTestsComponent.html":{},"components/SubjectComponent.html":{},"components/VisibilityComponent.html":{}}}],["event.target.fil",{"_index":213,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["event.target.files[0",{"_index":214,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["event.target.result",{"_index":221,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["eventemitt",{"_index":583,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/SubjectComponent.html":{},"components/VisibilityComponent.html":{}}}],["execut",{"_index":1310,"title":{},"body":{"index.html":{}}}],["exist",{"_index":570,"title":{},"body":{"injectables/AuthService.html":{}}}],["expir",{"_index":569,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":143,"title":{},"body":{"components/AddQuestionComponent.html":{},"injectables/AdminGuard.html":{},"classes/Answer.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Area.html":{},"injectables/AreaService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"classes/DifficultyLevel.html":{},"injectables/DifficultyLevelService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"injectables/PublicGuard.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/QuestionType.html":{},"injectables/QuestionTypeService.html":{},"components/RegisterComponent.html":{},"classes/Status.html":{},"injectables/StatusService.html":{},"classes/Subject.html":{},"components/SubjectComponent.html":{},"injectables/SubjectService.html":{},"components/SystemAdminPanelComponent.html":{},"injectables/SystemGuard.html":{},"components/TestPrintPreviewComponent.html":{},"injectables/TestService.html":{},"interceptors/TokenInterceptor.html":{},"classes/Visibility.html":{},"components/VisibilityComponent.html":{},"injectables/VisibilityService.html":{},"classes/YearOfStudy.html":{},"injectables/YearOfStudyService.html":{},"overview.html":{}}}],["face",{"_index":413,"title":{},"body":{"injectables/ApiService.html":{}}}],["fail",{"_index":540,"title":{},"body":{"injectables/AreaService.html":{},"injectables/DifficultyLevelService.html":{},"injectables/QuestionService.html":{},"injectables/QuestionTypeService.html":{},"injectables/StatusService.html":{},"injectables/SubjectService.html":{},"injectables/TestService.html":{},"injectables/VisibilityService.html":{},"injectables/YearOfStudyService.html":{}}}],["fals",{"_index":102,"title":{},"body":{"components/AddQuestionComponent.html":{},"injectables/AdminGuard.html":{},"injectables/ApiService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{},"injectables/PublicGuard.html":{},"components/SystemAdminPanelComponent.html":{},"injectables/SystemGuard.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AddQuestionComponent.html":{},"injectables/AdminGuard.html":{},"classes/Answer.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Area.html":{},"injectables/AreaService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"classes/DifficultyLevel.html":{},"injectables/DifficultyLevelService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"injectables/PublicGuard.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/QuestionType.html":{},"injectables/QuestionTypeService.html":{},"components/RegisterComponent.html":{},"classes/Status.html":{},"injectables/StatusService.html":{},"classes/Subject.html":{},"components/SubjectComponent.html":{},"injectables/SubjectService.html":{},"components/SystemAdminPanelComponent.html":{},"injectables/SystemGuard.html":{},"components/TestPrintPreviewComponent.html":{},"injectables/TestService.html":{},"interceptors/TokenInterceptor.html":{},"classes/Visibility.html":{},"components/VisibilityComponent.html":{},"injectables/VisibilityService.html":{},"classes/YearOfStudy.html":{},"injectables/YearOfStudyService.html":{},"coverage.html":{},"index.html":{}}}],["fileread",{"_index":217,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["filter",{"_index":795,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["firebas",{"_index":1257,"title":{},"body":{"dependencies.html":{}}}],["flag",{"_index":1307,"title":{},"body":{"index.html":{}}}],["font",{"_index":1259,"title":{},"body":{"dependencies.html":{}}}],["fontawesom",{"_index":1242,"title":{},"body":{"dependencies.html":{}}}],["footer",{"_index":641,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'nam",{"_index":251,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"components/RegisterComponent.html":{},"components/SubjectComponent.html":{},"components/SystemAdminPanelComponent.html":{},"components/TestPrintPreviewComponent.html":{},"components/VisibilityComponent.html":{}}}],["footer.component.css",{"_index":642,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.html",{"_index":643,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercompon",{"_index":250,"title":{"components/FooterComponent.html":{}},"body":{"components/AddQuestionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"components/RegisterComponent.html":{},"components/SubjectComponent.html":{},"components/SystemAdminPanelComponent.html":{},"components/TestPrintPreviewComponent.html":{},"components/VisibilityComponent.html":{},"coverage.html":{},"overview.html":{}}}],["foreach((paramnam",{"_index":389,"title":{},"body":{"injectables/ApiService.html":{}}}],["form",{"_index":58,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/SystemAdminPanelComponent.html":{}}}],["formbuild",{"_index":59,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/SystemAdminPanelComponent.html":{}}}],["formcontrol",{"_index":1073,"title":{},"body":{"components/SystemAdminPanelComponent.html":{}}}],["formgroup",{"_index":98,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/SystemAdminPanelComponent.html":{}}}],["formsmodul",{"_index":475,"title":{},"body":{"modules/AppModule.html":{}}}],["froala",{"_index":1244,"title":{},"body":{"dependencies.html":{}}}],["from'@angular/cor",{"_index":968,"title":{},"body":{"injectables/StatusService.html":{}}}],["full",{"_index":510,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["fullrespons",{"_index":332,"title":{},"body":{"injectables/ApiService.html":{}}}],["further",{"_index":1315,"title":{},"body":{"index.html":{}}}],["gener",{"_index":253,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"components/RegisterComponent.html":{},"components/SubjectComponent.html":{},"components/SystemAdminPanelComponent.html":{},"components/TestPrintPreviewComponent.html":{},"components/VisibilityComponent.html":{},"index.html":{}}}],["generatehttpparam",{"_index":315,"title":{},"body":{"injectables/ApiService.html":{}}}],["generatehttpparams(param",{"_index":327,"title":{},"body":{"injectables/ApiService.html":{}}}],["generatetabletest",{"_index":796,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["generatetest",{"_index":512,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TestService.html":{}}}],["generatetest(test",{"_index":1108,"title":{},"body":{"injectables/TestService.html":{}}}],["generatetestcompon",{"_index":252,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"components/RegisterComponent.html":{},"components/SubjectComponent.html":{},"components/SystemAdminPanelComponent.html":{},"components/TestPrintPreviewComponent.html":{},"components/VisibilityComponent.html":{},"coverage.html":{},"overview.html":{}}}],["generatewithansw",{"_index":797,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["generatewithblankspac",{"_index":798,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["get",{"_index":1281,"title":{"index.html":{}},"body":{}}],["get(this.api_root",{"_index":382,"title":{},"body":{"injectables/ApiService.html":{}}}],["get(url",{"_index":331,"title":{},"body":{"injectables/ApiService.html":{}}}],["getal",{"_index":926,"title":{},"body":{"injectables/QuestionService.html":{},"injectables/TestService.html":{}}}],["getall(indexi",{"_index":933,"title":{},"body":{"injectables/QuestionService.html":{},"injectables/TestService.html":{}}}],["getarea",{"_index":1028,"title":{},"body":{"injectables/SubjectService.html":{}}}],["getareas(idsubject",{"_index":1036,"title":{},"body":{"injectables/SubjectService.html":{}}}],["getbaseurl",{"_index":361,"title":{},"body":{"injectables/ApiService.html":{}}}],["getdat",{"_index":799,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["getdismissreason",{"_index":682,"title":{},"body":{"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{}}}],["getdismissreason(reason",{"_index":690,"title":{},"body":{"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{}}}],["getid",{"_index":1029,"title":{},"body":{"injectables/SubjectService.html":{}}}],["getid(id",{"_index":1040,"title":{},"body":{"injectables/SubjectService.html":{}}}],["getrol",{"_index":553,"title":{},"body":{"injectables/AuthService.html":{}}}],["getsystemrol",{"_index":554,"title":{},"body":{"injectables/AuthService.html":{}}}],["gettoken",{"_index":555,"title":{},"body":{"injectables/AuthService.html":{}}}],["getyearofstudi",{"_index":1030,"title":{},"body":{"injectables/SubjectService.html":{}}}],["getyearofstudies(id",{"_index":1042,"title":{},"body":{"injectables/SubjectService.html":{}}}],["go",{"_index":1318,"title":{},"body":{"index.html":{}}}],["graph",{"_index":1323,"title":{},"body":{"modules.html":{}}}],["group",{"_index":734,"title":{},"body":{"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{},"components/TestPrintPreviewComponent.html":{}}}],["grupa",{"_index":868,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["guard",{"_index":898,"title":{},"body":{"injectables/PublicGuard.html":{}}}],["guards/admin.guard",{"_index":497,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["guards/auth.guard",{"_index":493,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["guards/public.guard",{"_index":492,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["guards/system.guard",{"_index":498,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["handl",{"_index":399,"title":{},"body":{"injectables/ApiService.html":{}}}],["handleerror",{"_index":316,"title":{},"body":{"injectables/ApiService.html":{}}}],["handleerror(error",{"_index":340,"title":{},"body":{"injectables/ApiService.html":{}}}],["happen",{"_index":416,"title":{},"body":{"injectables/ApiService.html":{}}}],["header",{"_index":313,"title":{},"body":{"injectables/ApiService.html":{},"components/HeaderComponent.html":{},"injectables/TestService.html":{}}}],["header'},{'nam",{"_index":256,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"components/RegisterComponent.html":{},"components/SubjectComponent.html":{},"components/SystemAdminPanelComponent.html":{},"components/TestPrintPreviewComponent.html":{},"components/VisibilityComponent.html":{}}}],["header.component.css",{"_index":650,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.html",{"_index":651,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercompon",{"_index":255,"title":{"components/HeaderComponent.html":{}},"body":{"components/AddQuestionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"components/RegisterComponent.html":{},"components/SubjectComponent.html":{},"components/SystemAdminPanelComponent.html":{},"components/TestPrintPreviewComponent.html":{},"components/VisibilityComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hello",{"_index":677,"title":{},"body":{"components/HelloComponent.html":{}}}],["hello'},{'nam",{"_index":258,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"components/RegisterComponent.html":{},"components/SubjectComponent.html":{},"components/SystemAdminPanelComponent.html":{},"components/TestPrintPreviewComponent.html":{},"components/VisibilityComponent.html":{}}}],["hello.component.css",{"_index":678,"title":{},"body":{"components/HelloComponent.html":{}}}],["hello.component.html",{"_index":679,"title":{},"body":{"components/HelloComponent.html":{}}}],["hellocompon",{"_index":257,"title":{"components/HelloComponent.html":{}},"body":{"components/AddQuestionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"components/RegisterComponent.html":{},"components/SubjectComponent.html":{},"components/SystemAdminPanelComponent.html":{},"components/TestPrintPreviewComponent.html":{},"components/VisibilityComponent.html":{},"coverage.html":{},"overview.html":{}}}],["help",{"_index":1316,"title":{},"body":{"index.html":{}}}],["helpvari",{"_index":789,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["home",{"_index":673,"title":{},"body":{"components/HeaderComponent.html":{}}}],["html",{"_index":237,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"components/RegisterComponent.html":{},"components/SubjectComponent.html":{},"components/SystemAdminPanelComponent.html":{},"components/TestPrintPreviewComponent.html":{},"components/VisibilityComponent.html":{}}}],["html2canva",{"_index":1262,"title":{},"body":{"dependencies.html":{}}}],["http",{"_index":324,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthenticationService.html":{},"injectables/TestService.html":{}}}],["http://localhost:4200",{"_index":1294,"title":{},"body":{"index.html":{}}}],["http://localhost:60007/api",{"_index":357,"title":{},"body":{"injectables/ApiService.html":{}}}],["http_interceptor",{"_index":466,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":325,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AreaService.html":{},"injectables/AuthenticationService.html":{},"injectables/DifficultyLevelService.html":{},"injectables/QuestionService.html":{},"injectables/QuestionTypeService.html":{},"injectables/StatusService.html":{},"injectables/SubjectService.html":{},"injectables/TestService.html":{},"injectables/VisibilityService.html":{},"injectables/YearOfStudyService.html":{}}}],["httpclientmodul",{"_index":465,"title":{},"body":{"modules/AppModule.html":{}}}],["httpdelet",{"_index":317,"title":{},"body":{"injectables/ApiService.html":{}}}],["httpdelete(url",{"_index":343,"title":{},"body":{"injectables/ApiService.html":{}}}],["httperrorrespons",{"_index":138,"title":{},"body":{"components/AddQuestionComponent.html":{},"injectables/ApiService.html":{},"injectables/AreaService.html":{},"injectables/DifficultyLevelService.html":{},"components/LoginComponent.html":{},"injectables/QuestionService.html":{},"injectables/SubjectService.html":{},"injectables/TestService.html":{},"injectables/YearOfStudyService.html":{}}}],["httpevent",{"_index":1135,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["httphandler",{"_index":1132,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["httpheader",{"_index":359,"title":{},"body":{"injectables/ApiService.html":{},"injectables/QuestionService.html":{}}}],["httpinterceptor",{"_index":1136,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["httpparam",{"_index":330,"title":{},"body":{"injectables/ApiService.html":{}}}],["httpparams.append(paramnam",{"_index":391,"title":{},"body":{"injectables/ApiService.html":{}}}],["httprequest",{"_index":1130,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["httpxsrfcookieextractor",{"_index":1074,"title":{},"body":{"components/SystemAdminPanelComponent.html":{}}}],["i+1",{"_index":739,"title":{},"body":{"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{},"components/TestPrintPreviewComponent.html":{}}}],["id",{"_index":608,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/HelloComponent.html":{},"injectables/QuestionService.html":{},"injectables/SubjectService.html":{},"injectables/TestService.html":{}}}],["id).pip",{"_index":1047,"title":{},"body":{"injectables/SubjectService.html":{},"injectables/TestService.html":{}}}],["id).subscrib",{"_index":626,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["idarea",{"_index":1037,"title":{},"body":{"injectables/SubjectService.html":{}}}],["idarea).pip",{"_index":1050,"title":{},"body":{"injectables/SubjectService.html":{}}}],["identifi",{"_index":1196,"title":{},"body":{"coverage.html":{}}}],["idsubject",{"_index":1039,"title":{},"body":{"injectables/SubjectService.html":{}}}],["imag",{"_index":1247,"title":{},"body":{"dependencies.html":{}}}],["implement",{"_index":11,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{},"components/RegisterComponent.html":{},"components/SubjectComponent.html":{},"components/SystemAdminPanelComponent.html":{},"components/TestPrintPreviewComponent.html":{},"interceptors/TokenInterceptor.html":{},"components/VisibilityComponent.html":{}}}],["import",{"_index":111,"title":{},"body":{"components/AddQuestionComponent.html":{},"injectables/AdminGuard.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AreaService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"injectables/DifficultyLevelService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"injectables/PublicGuard.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"injectables/QuestionTypeService.html":{},"components/RegisterComponent.html":{},"injectables/StatusService.html":{},"components/SubjectComponent.html":{},"injectables/SubjectService.html":{},"components/SystemAdminPanelComponent.html":{},"injectables/SystemGuard.html":{},"components/TestPrintPreviewComponent.html":{},"injectables/TestService.html":{},"interceptors/TokenInterceptor.html":{},"components/VisibilityComponent.html":{},"injectables/VisibilityService.html":{},"injectables/YearOfStudyService.html":{}}}],["import{component}from'@angular/cor",{"_index":432,"title":{},"body":{"components/AppComponent.html":{}}}],["index",{"_index":23,"title":{"index.html":{}},"body":{"components/AddQuestionComponent.html":{},"injectables/AdminGuard.html":{},"classes/Answer.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"classes/DifficultyLevel.html":{},"injectables/DifficultyLevelService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"injectables/PublicGuard.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/QuestionType.html":{},"injectables/QuestionTypeService.html":{},"components/RegisterComponent.html":{},"classes/Status.html":{},"injectables/StatusService.html":{},"classes/Subject.html":{},"components/SubjectComponent.html":{},"injectables/SubjectService.html":{},"components/SystemAdminPanelComponent.html":{},"injectables/SystemGuard.html":{},"components/TestPrintPreviewComponent.html":{},"injectables/TestService.html":{},"interceptors/TokenInterceptor.html":{},"classes/Visibility.html":{},"components/VisibilityComponent.html":{},"injectables/VisibilityService.html":{},"classes/YearOfStudy.html":{},"injectables/YearOfStudyService.html":{},"miscellaneous/variables.html":{}}}],["indexi",{"_index":790,"title":{},"body":{"components/PreviewTestsComponent.html":{},"injectables/QuestionService.html":{},"injectables/TestService.html":{}}}],["indexi).pip",{"_index":941,"title":{},"body":{"injectables/QuestionService.html":{},"injectables/TestService.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AddQuestionComponent.html":{},"injectables/AdminGuard.html":{},"classes/Answer.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Area.html":{},"injectables/AreaService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"classes/DifficultyLevel.html":{},"injectables/DifficultyLevelService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"injectables/PublicGuard.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/QuestionType.html":{},"injectables/QuestionTypeService.html":{},"components/RegisterComponent.html":{},"classes/Status.html":{},"injectables/StatusService.html":{},"classes/Subject.html":{},"components/SubjectComponent.html":{},"injectables/SubjectService.html":{},"components/SystemAdminPanelComponent.html":{},"injectables/SystemGuard.html":{},"components/TestPrintPreviewComponent.html":{},"injectables/TestService.html":{},"interceptors/TokenInterceptor.html":{},"classes/Visibility.html":{},"components/VisibilityComponent.html":{},"injectables/VisibilityService.html":{},"classes/YearOfStudy.html":{},"injectables/YearOfStudyService.html":{}}}],["inject",{"_index":278,"title":{"injectables/AdminGuard.html":{},"injectables/ApiService.html":{},"injectables/AreaService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"injectables/DifficultyLevelService.html":{},"injectables/PublicGuard.html":{},"injectables/QuestionService.html":{},"injectables/QuestionTypeService.html":{},"injectables/StatusService.html":{},"injectables/SubjectService.html":{},"injectables/SystemGuard.html":{},"injectables/TestService.html":{},"injectables/VisibilityService.html":{},"injectables/YearOfStudyService.html":{}},"body":{"injectables/AdminGuard.html":{},"injectables/ApiService.html":{},"injectables/AreaService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"injectables/DifficultyLevelService.html":{},"injectables/PublicGuard.html":{},"injectables/QuestionService.html":{},"injectables/QuestionTypeService.html":{},"injectables/StatusService.html":{},"injectables/SubjectService.html":{},"injectables/SystemGuard.html":{},"injectables/TestService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/VisibilityService.html":{},"injectables/YearOfStudyService.html":{},"coverage.html":{},"overview.html":{}}}],["input",{"_index":983,"title":{},"body":{"components/SubjectComponent.html":{},"components/VisibilityComponent.html":{},"dependencies.html":{}}}],["instanceof",{"_index":393,"title":{},"body":{"injectables/ApiService.html":{}}}],["intercept",{"_index":1126,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["intercept(request",{"_index":1129,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["interceptor",{"_index":1124,"title":{"interceptors/TokenInterceptor.html":{}},"body":{"interceptors/TokenInterceptor.html":{}}}],["isadmin",{"_index":556,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{}}}],["isauthent",{"_index":557,"title":{},"body":{"injectables/AuthService.html":{}}}],["isload",{"_index":681,"title":{},"body":{"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{}}}],["issystemadmin",{"_index":558,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{}}}],["item",{"_index":699,"title":{},"body":{"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{}}}],["item.areanam",{"_index":1026,"title":{},"body":{"components/SubjectComponent.html":{}}}],["item.createddate.substring(0,16",{"_index":746,"title":{},"body":{"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{}}}],["item.d",{"_index":745,"title":{},"body":{"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{}}}],["item.group",{"_index":742,"title":{},"body":{"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{}}}],["item.level",{"_index":233,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["item.not",{"_index":741,"title":{},"body":{"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{}}}],["item.quesstiontypenam",{"_index":230,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/SystemAdminPanelComponent.html":{}}}],["item.question.point",{"_index":754,"title":{},"body":{"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{},"components/TestPrintPreviewComponent.html":{}}}],["item.statusnam",{"_index":234,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["item.subject.subjectnam",{"_index":740,"title":{},"body":{"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{}}}],["item.subjectnam",{"_index":893,"title":{},"body":{"components/PreviewTestsComponent.html":{},"components/SubjectComponent.html":{}}}],["item.testgroup",{"_index":743,"title":{},"body":{"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{}}}],["item.testgroup,160,50",{"_index":869,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["item.testquestions[i].question.points+\"\"+item.testquestions[i].question.questiontext",{"_index":873,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["item.yearofstudy.yearofstudynam",{"_index":744,"title":{},"body":{"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{}}}],["item.yearofstudynam",{"_index":1025,"title":{},"body":{"components/SubjectComponent.html":{}}}],["iz",{"_index":195,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["j=0",{"_index":875,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["januari",{"_index":881,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["js",{"_index":1255,"title":{},"body":{"dependencies.html":{}}}],["json.parse(localstorage.getitem('nam",{"_index":710,"title":{},"body":{"components/HelloComponent.html":{}}}],["json.parse(localstorage.getitem('roleappadmin",{"_index":598,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{}}}],["json.parse(localstorage.getitem('rolesystemadmin",{"_index":600,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{}}}],["json.parse(localstorage.getitem('subject",{"_index":837,"title":{},"body":{"components/PreviewTestsComponent.html":{},"components/SubjectComponent.html":{}}}],["json.parse(localstorage.getitem('us",{"_index":163,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/PreviewTestsComponent.html":{}}}],["json.parse(localstorage.getitem('user')).id",{"_index":437,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{}}}],["json.parse(localstorage.getitem('user')).nam",{"_index":672,"title":{},"body":{"components/HeaderComponent.html":{}}}],["json.parse(sessionstorage.getitem('tableview",{"_index":1097,"title":{},"body":{"components/TestPrintPreviewComponent.html":{}}}],["json.parse(sessionstorage.getitem('test",{"_index":1098,"title":{},"body":{"components/TestPrintPreviewComponent.html":{}}}],["json.parse(sessionstorage.getitem('withansw",{"_index":1095,"title":{},"body":{"components/TestPrintPreviewComponent.html":{}}}],["json.parse(sessionstorage.getitem('withblankspac",{"_index":1096,"title":{},"body":{"components/TestPrintPreviewComponent.html":{}}}],["json.stringify(fals",{"_index":716,"title":{},"body":{"components/HelloComponent.html":{}}}],["json.stringify(item",{"_index":719,"title":{},"body":{"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{}}}],["json.stringify(response.roleappadmin",{"_index":776,"title":{},"body":{"components/LoginComponent.html":{}}}],["json.stringify(response.rolesystemadmin",{"_index":778,"title":{},"body":{"components/LoginComponent.html":{}}}],["json.stringify(response.usersubject",{"_index":774,"title":{},"body":{"components/LoginComponent.html":{}}}],["json.stringify(response.usersubjects.nam",{"_index":772,"title":{},"body":{"components/LoginComponent.html":{}}}],["json.stringify(response.usersubjects.subject",{"_index":770,"title":{},"body":{"components/LoginComponent.html":{}}}],["json.stringify(this.tableview",{"_index":857,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["json.stringify(this.withansw",{"_index":854,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["json.stringify(this.withblankspac",{"_index":855,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["jspdf",{"_index":1264,"title":{},"body":{"dependencies.html":{}}}],["jspdf('p",{"_index":859,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["jwt",{"_index":584,"title":{},"body":{"injectables/AuthService.html":{}}}],["karma",{"_index":1312,"title":{},"body":{"index.html":{}}}],["languag",{"_index":652,"title":{},"body":{"components/HeaderComponent.html":{}}}],["later",{"_index":420,"title":{},"body":{"injectables/ApiService.html":{}}}],["leav",{"_index":888,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["legend",{"_index":236,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"components/RegisterComponent.html":{},"components/SubjectComponent.html":{},"components/SystemAdminPanelComponent.html":{},"components/TestPrintPreviewComponent.html":{},"components/VisibilityComponent.html":{},"overview.html":{}}}],["level",{"_index":125,"title":{},"body":{"components/AddQuestionComponent.html":{},"classes/DifficultyLevel.html":{},"classes/Question.html":{}}}],["level.servic",{"_index":115,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["level.service.t",{"_index":636,"title":{},"body":{"injectables/DifficultyLevelService.html":{},"coverage.html":{}}}],["level.service.ts:10",{"_index":637,"title":{},"body":{"injectables/DifficultyLevelService.html":{}}}],["level.service.ts:13",{"_index":638,"title":{},"body":{"injectables/DifficultyLevelService.html":{}}}],["level.t",{"_index":631,"title":{},"body":{"classes/DifficultyLevel.html":{},"coverage.html":{}}}],["level.ts:2",{"_index":633,"title":{},"body":{"classes/DifficultyLevel.html":{}}}],["level.ts:3",{"_index":634,"title":{},"body":{"classes/DifficultyLevel.html":{}}}],["lg'}).result.then((result",{"_index":723,"title":{},"body":{"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{}}}],["limit",{"_index":935,"title":{},"body":{"injectables/QuestionService.html":{},"injectables/TestService.html":{}}}],["liter",{"_index":349,"title":{},"body":{"injectables/ApiService.html":{}}}],["local",{"_index":585,"title":{},"body":{"injectables/AuthService.html":{}}}],["locale_id",{"_index":464,"title":{},"body":{"modules/AppModule.html":{}}}],["localstorag",{"_index":565,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.clear",{"_index":593,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.getitem('jwt",{"_index":587,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem('jwt",{"_index":588,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('jwt",{"_index":591,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('nam",{"_index":771,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.setitem('roleappadmin",{"_index":775,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.setitem('rolesystemadmin",{"_index":777,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.setitem('subject",{"_index":769,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.setitem('us",{"_index":773,"title":{},"body":{"components/LoginComponent.html":{}}}],["location.reload",{"_index":629,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["log",{"_index":675,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["login",{"_index":508,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"injectables/PublicGuard.html":{}}}],["login'},{'nam",{"_index":260,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"components/RegisterComponent.html":{},"components/SubjectComponent.html":{},"components/SystemAdminPanelComponent.html":{},"components/TestPrintPreviewComponent.html":{},"components/VisibilityComponent.html":{}}}],["login(request",{"_index":604,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["login.component.css",{"_index":756,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":757,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.compon",{"_index":1005,"title":{},"body":{"components/SubjectComponent.html":{}}}],["logincompon",{"_index":259,"title":{"components/LoginComponent.html":{}},"body":{"components/AddQuestionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"components/RegisterComponent.html":{},"components/SubjectComponent.html":{},"components/SystemAdminPanelComponent.html":{},"components/TestPrintPreviewComponent.html":{},"components/VisibilityComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logout",{"_index":426,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/HeaderComponent.html":{}}}],["logout(id",{"_index":606,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["m",{"_index":884,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["match",{"_index":277,"title":{},"body":{"components/AddQuestionComponent.html":{},"injectables/AdminGuard.html":{},"classes/Answer.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Area.html":{},"injectables/AreaService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"classes/DifficultyLevel.html":{},"injectables/DifficultyLevelService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"injectables/PublicGuard.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/QuestionType.html":{},"injectables/QuestionTypeService.html":{},"components/RegisterComponent.html":{},"classes/Status.html":{},"injectables/StatusService.html":{},"classes/Subject.html":{},"components/SubjectComponent.html":{},"injectables/SubjectService.html":{},"components/SystemAdminPanelComponent.html":{},"injectables/SystemGuard.html":{},"components/TestPrintPreviewComponent.html":{},"injectables/TestService.html":{},"interceptors/TokenInterceptor.html":{},"classes/Visibility.html":{},"components/VisibilityComponent.html":{},"injectables/VisibilityService.html":{},"classes/YearOfStudy.html":{},"injectables/YearOfStudyService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["messag",{"_index":72,"title":{},"body":{"components/AddQuestionComponent.html":{},"injectables/ApiService.html":{}}}],["metadata",{"_index":14,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"components/RegisterComponent.html":{},"components/SubjectComponent.html":{},"components/SystemAdminPanelComponent.html":{},"components/TestPrintPreviewComponent.html":{},"components/VisibilityComponent.html":{}}}],["method",{"_index":41,"title":{},"body":{"components/AddQuestionComponent.html":{},"injectables/AdminGuard.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AreaService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"injectables/DifficultyLevelService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"injectables/PublicGuard.html":{},"injectables/QuestionService.html":{},"injectables/QuestionTypeService.html":{},"components/RegisterComponent.html":{},"injectables/StatusService.html":{},"components/SubjectComponent.html":{},"injectables/SubjectService.html":{},"components/SystemAdminPanelComponent.html":{},"injectables/SystemGuard.html":{},"components/TestPrintPreviewComponent.html":{},"injectables/TestService.html":{},"interceptors/TokenInterceptor.html":{},"components/VisibilityComponent.html":{},"injectables/VisibilityService.html":{},"injectables/YearOfStudyService.html":{}}}],["min_length_valid",{"_index":136,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["miscellan",{"_index":1330,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mm",{"_index":879,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["mm','a4",{"_index":860,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["mm.tostr",{"_index":885,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["modal",{"_index":1267,"title":{},"body":{"dependencies.html":{}}}],["modaldismissreason",{"_index":706,"title":{},"body":{"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{}}}],["modaldismissreasons.backdrop_click",{"_index":731,"title":{},"body":{"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{}}}],["modaldismissreasons.esc",{"_index":728,"title":{},"body":{"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{}}}],["modalservic",{"_index":686,"title":{},"body":{"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{}}}],["modifiedd",{"_index":303,"title":{},"body":{"classes/Answer.html":{},"classes/Question.html":{}}}],["modul",{"_index":439,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"dependencies.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":129,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["more",{"_index":1317,"title":{},"body":{"index.html":{}}}],["moze",{"_index":210,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["name",{"_index":64,"title":{},"body":{"components/AddQuestionComponent.html":{},"injectables/AdminGuard.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AreaService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"injectables/DifficultyLevelService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"injectables/PublicGuard.html":{},"injectables/QuestionService.html":{},"injectables/QuestionTypeService.html":{},"components/RegisterComponent.html":{},"injectables/StatusService.html":{},"components/SubjectComponent.html":{},"injectables/SubjectService.html":{},"components/SystemAdminPanelComponent.html":{},"injectables/SystemGuard.html":{},"components/TestPrintPreviewComponent.html":{},"injectables/TestService.html":{},"interceptors/TokenInterceptor.html":{},"components/VisibilityComponent.html":{},"injectables/VisibilityService.html":{},"injectables/YearOfStudyService.html":{},"index.html":{}}}],["navig",{"_index":1293,"title":{},"body":{"index.html":{}}}],["ne",{"_index":209,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["network",{"_index":397,"title":{},"body":{"injectables/ApiService.html":{}}}],["new",{"_index":89,"title":{},"body":{"components/AddQuestionComponent.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/PreviewTestsComponent.html":{},"components/SubjectComponent.html":{},"components/VisibilityComponent.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":1131,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["next.handle(request",{"_index":1141,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["ng",{"_index":471,"title":{},"body":{"modules/AppModule.html":{},"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{},"dependencies.html":{},"index.html":{}}}],["ng2",{"_index":1266,"title":{},"body":{"dependencies.html":{}}}],["ngbmodal",{"_index":687,"title":{},"body":{"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{}}}],["ngbmodul",{"_index":470,"title":{},"body":{"modules/AppModule.html":{}}}],["ngmodul",{"_index":463,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngondestroy",{"_index":45,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/TestPrintPreviewComponent.html":{}}}],["ngoninit",{"_index":46,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{},"components/RegisterComponent.html":{},"components/SubjectComponent.html":{},"components/SystemAdminPanelComponent.html":{},"components/TestPrintPreviewComponent.html":{},"components/VisibilityComponent.html":{}}}],["ngx",{"_index":130,"title":{},"body":{"components/AddQuestionComponent.html":{},"dependencies.html":{}}}],["note",{"_index":304,"title":{},"body":{"classes/Answer.html":{},"classes/Question.html":{}}}],["null",{"_index":181,"title":{},"body":{"components/AddQuestionComponent.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/TestPrintPreviewComponent.html":{}}}],["number",{"_index":231,"title":{},"body":{"components/AddQuestionComponent.html":{},"classes/Area.html":{},"classes/DifficultyLevel.html":{},"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/QuestionType.html":{},"classes/Status.html":{},"classes/Subject.html":{},"injectables/SubjectService.html":{},"components/TestPrintPreviewComponent.html":{},"injectables/TestService.html":{},"classes/Visibility.html":{},"classes/YearOfStudy.html":{}}}],["object",{"_index":1336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.assign",{"_index":379,"title":{},"body":{"injectables/ApiService.html":{}}}],["object.assign(opt",{"_index":384,"title":{},"body":{"injectables/ApiService.html":{}}}],["object.keys(param",{"_index":388,"title":{},"body":{"injectables/ApiService.html":{}}}],["oblasti",{"_index":194,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["observ",{"_index":339,"title":{},"body":{"injectables/ApiService.html":{},"interceptors/TokenInterceptor.html":{}}}],["observableinput",{"_index":763,"title":{},"body":{"components/LoginComponent.html":{}}}],["occur",{"_index":398,"title":{},"body":{"injectables/ApiService.html":{}}}],["onchangearea",{"_index":981,"title":{},"body":{"components/SubjectComponent.html":{}}}],["onchangearea(devicevalu",{"_index":990,"title":{},"body":{"components/SubjectComponent.html":{}}}],["onchangedifficultylevel",{"_index":47,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["onchangedifficultylevel(devicevalu",{"_index":75,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["onchangequestiontyp",{"_index":48,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["onchangequestiontype(devicevalu",{"_index":78,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["onchangestatu",{"_index":49,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["onchangestatus(devicevalu",{"_index":80,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["onchangesubject",{"_index":800,"title":{},"body":{"components/PreviewTestsComponent.html":{},"components/SubjectComponent.html":{}}}],["onchangesubject(devicevalu",{"_index":813,"title":{},"body":{"components/PreviewTestsComponent.html":{},"components/SubjectComponent.html":{}}}],["onchangeyearofstudi",{"_index":982,"title":{},"body":{"components/SubjectComponent.html":{}}}],["onchangeyearofstudy(devicevalu",{"_index":993,"title":{},"body":{"components/SubjectComponent.html":{}}}],["ondestroy",{"_index":13,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/TestPrintPreviewComponent.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{},"components/RegisterComponent.html":{},"components/SubjectComponent.html":{},"components/SystemAdminPanelComponent.html":{},"components/TestPrintPreviewComponent.html":{},"components/VisibilityComponent.html":{}}}],["onsearchchang",{"_index":1061,"title":{},"body":{"components/SystemAdminPanelComponent.html":{}}}],["onselectanswerimag",{"_index":50,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["onselectanswerimage(ev",{"_index":82,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["onselectionchang",{"_index":1151,"title":{},"body":{"components/VisibilityComponent.html":{}}}],["onselectionchange(v",{"_index":1159,"title":{},"body":{"components/VisibilityComponent.html":{}}}],["onselectquestionimag",{"_index":51,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["onselectquestionimage(ev",{"_index":85,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["opd",{"_index":1269,"title":{},"body":{"dependencies.html":{}}}],["option",{"_index":66,"title":{},"body":{"components/AddQuestionComponent.html":{},"injectables/AdminGuard.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AreaService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"injectables/DifficultyLevelService.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"injectables/PublicGuard.html":{},"injectables/QuestionService.html":{},"injectables/QuestionTypeService.html":{},"injectables/StatusService.html":{},"components/SubjectComponent.html":{},"injectables/SubjectService.html":{},"components/SystemAdminPanelComponent.html":{},"injectables/SystemGuard.html":{},"injectables/TestService.html":{},"interceptors/TokenInterceptor.html":{},"components/VisibilityComponent.html":{},"injectables/VisibilityService.html":{},"injectables/YearOfStudyService.html":{}}}],["osb",{"_index":647,"title":{},"body":{"components/FooterComponent.html":{}}}],["out",{"_index":458,"title":{},"body":{"modules/AppModule.html":{},"components/HeaderComponent.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":664,"title":{},"body":{"components/HeaderComponent.html":{},"components/SubjectComponent.html":{},"components/VisibilityComponent.html":{}}}],["overview",{"_index":1325,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":1232,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":791,"title":{},"body":{"components/PreviewTestsComponent.html":{},"injectables/PublicGuard.html":{}}}],["pagechang",{"_index":801,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["pagechanged(ev",{"_index":815,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["pagin",{"_index":1275,"title":{},"body":{"dependencies.html":{}}}],["panel",{"_index":674,"title":{},"body":{"components/HeaderComponent.html":{},"components/SystemAdminPanelComponent.html":{}}}],["panel'},{'nam",{"_index":245,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"components/RegisterComponent.html":{},"components/SubjectComponent.html":{},"components/SystemAdminPanelComponent.html":{},"components/TestPrintPreviewComponent.html":{},"components/VisibilityComponent.html":{}}}],["panel.compon",{"_index":491,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["panel.component.css",{"_index":1054,"title":{},"body":{"components/SystemAdminPanelComponent.html":{}}}],["panel.component.html",{"_index":1055,"title":{},"body":{"components/SystemAdminPanelComponent.html":{}}}],["panel.component.t",{"_index":1053,"title":{},"body":{"components/SystemAdminPanelComponent.html":{},"coverage.html":{}}}],["panel.component.ts:12",{"_index":1072,"title":{},"body":{"components/SystemAdminPanelComponent.html":{}}}],["panel.component.ts:13",{"_index":1069,"title":{},"body":{"components/SystemAdminPanelComponent.html":{}}}],["panel.component.ts:14",{"_index":1068,"title":{},"body":{"components/SystemAdminPanelComponent.html":{}}}],["panel.component.ts:15",{"_index":1071,"title":{},"body":{"components/SystemAdminPanelComponent.html":{}}}],["panel.component.ts:16",{"_index":1070,"title":{},"body":{"components/SystemAdminPanelComponent.html":{}}}],["panel.component.ts:17",{"_index":1063,"title":{},"body":{"components/SystemAdminPanelComponent.html":{}}}],["panel.component.ts:20",{"_index":1066,"title":{},"body":{"components/SystemAdminPanelComponent.html":{}}}],["panel.component.ts:32",{"_index":1065,"title":{},"body":{"components/SystemAdminPanelComponent.html":{}}}],["panel.component.ts:35",{"_index":1067,"title":{},"body":{"components/SystemAdminPanelComponent.html":{}}}],["panel.component.ts:47",{"_index":1064,"title":{},"body":{"components/SystemAdminPanelComponent.html":{}}}],["panel/admin",{"_index":490,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["panel/system",{"_index":500,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/SystemAdminPanelComponent.html":{},"coverage.html":{}}}],["param",{"_index":329,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{}}}],["paramet",{"_index":62,"title":{},"body":{"components/AddQuestionComponent.html":{},"injectables/AdminGuard.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AreaService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"injectables/DifficultyLevelService.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"injectables/PublicGuard.html":{},"injectables/QuestionService.html":{},"injectables/QuestionTypeService.html":{},"injectables/StatusService.html":{},"components/SubjectComponent.html":{},"injectables/SubjectService.html":{},"components/SystemAdminPanelComponent.html":{},"injectables/SystemGuard.html":{},"injectables/TestService.html":{},"interceptors/TokenInterceptor.html":{},"components/VisibilityComponent.html":{},"injectables/VisibilityService.html":{},"injectables/YearOfStudyService.html":{}}}],["params[paramnam",{"_index":390,"title":{},"body":{"injectables/ApiService.html":{}}}],["password",{"_index":616,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{}}}],["path",{"_index":506,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":509,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pitanj",{"_index":872,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["pitanja",{"_index":208,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["pleas",{"_index":417,"title":{},"body":{"injectables/ApiService.html":{}}}],["point",{"_index":149,"title":{},"body":{"components/AddQuestionComponent.html":{},"classes/Question.html":{},"components/TestPrintPreviewComponent.html":{}}}],["popup",{"_index":1270,"title":{},"body":{"dependencies.html":{}}}],["post",{"_index":318,"title":{},"body":{"injectables/ApiService.html":{}}}],["post(url",{"_index":346,"title":{},"body":{"injectables/ApiService.html":{}}}],["prazno",{"_index":212,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["predemta",{"_index":197,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["predmeta",{"_index":190,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["press",{"_index":729,"title":{},"body":{"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{}}}],["prevent",{"_index":899,"title":{},"body":{"injectables/PublicGuard.html":{}}}],["preview",{"_index":262,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"components/RegisterComponent.html":{},"components/SubjectComponent.html":{},"components/SystemAdminPanelComponent.html":{},"components/TestPrintPreviewComponent.html":{},"components/VisibilityComponent.html":{},"dependencies.html":{}}}],["preview'},{'nam",{"_index":273,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"components/RegisterComponent.html":{},"components/SubjectComponent.html":{},"components/SystemAdminPanelComponent.html":{},"components/TestPrintPreviewComponent.html":{},"components/VisibilityComponent.html":{}}}],["preview(cont",{"_index":694,"title":{},"body":{"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{}}}],["preview.compon",{"_index":505,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preview.component.css",{"_index":1086,"title":{},"body":{"components/TestPrintPreviewComponent.html":{}}}],["preview.component.html",{"_index":1087,"title":{},"body":{"components/TestPrintPreviewComponent.html":{}}}],["preview.component.t",{"_index":1085,"title":{},"body":{"components/TestPrintPreviewComponent.html":{},"coverage.html":{}}}],["preview.component.ts:11",{"_index":1092,"title":{},"body":{"components/TestPrintPreviewComponent.html":{}}}],["preview.component.ts:12",{"_index":1093,"title":{},"body":{"components/TestPrintPreviewComponent.html":{}}}],["preview.component.ts:13",{"_index":1094,"title":{},"body":{"components/TestPrintPreviewComponent.html":{}}}],["preview.component.ts:14",{"_index":1091,"title":{},"body":{"components/TestPrintPreviewComponent.html":{}}}],["preview.component.ts:15",{"_index":1090,"title":{},"body":{"components/TestPrintPreviewComponent.html":{}}}],["preview.component.ts:26",{"_index":1089,"title":{},"body":{"components/TestPrintPreviewComponent.html":{}}}],["preview.component.ts:8",{"_index":1088,"title":{},"body":{"components/TestPrintPreviewComponent.html":{}}}],["preview/test",{"_index":504,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/TestPrintPreviewComponent.html":{},"coverage.html":{}}}],["previewquest",{"_index":515,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["previewquestioncompon",{"_index":261,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"components/RegisterComponent.html":{},"components/SubjectComponent.html":{},"components/SystemAdminPanelComponent.html":{},"components/TestPrintPreviewComponent.html":{},"components/VisibilityComponent.html":{},"coverage.html":{},"overview.html":{}}}],["previewtest",{"_index":516,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["previewtestscompon",{"_index":263,"title":{"components/PreviewTestsComponent.html":{}},"body":{"components/AddQuestionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"components/RegisterComponent.html":{},"components/SubjectComponent.html":{},"components/SystemAdminPanelComponent.html":{},"components/TestPrintPreviewComponent.html":{},"components/VisibilityComponent.html":{},"coverage.html":{},"overview.html":{}}}],["print",{"_index":272,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"components/RegisterComponent.html":{},"components/SubjectComponent.html":{},"components/SystemAdminPanelComponent.html":{},"components/TestPrintPreviewComponent.html":{},"components/VisibilityComponent.html":{},"coverage.html":{}}}],["printpdf",{"_index":683,"title":{},"body":{"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{}}}],["printpdf(item",{"_index":697,"title":{},"body":{"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{}}}],["privat",{"_index":25,"title":{},"body":{"components/AddQuestionComponent.html":{},"injectables/AdminGuard.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AreaService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/DifficultyLevelService.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"injectables/PublicGuard.html":{},"injectables/QuestionService.html":{},"injectables/QuestionTypeService.html":{},"injectables/StatusService.html":{},"components/SubjectComponent.html":{},"injectables/SubjectService.html":{},"components/SystemAdminPanelComponent.html":{},"injectables/SystemGuard.html":{},"injectables/TestService.html":{},"injectables/VisibilityService.html":{},"injectables/YearOfStudyService.html":{}}}],["prod",{"_index":1306,"title":{},"body":{"index.html":{}}}],["product",{"_index":1308,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":1284,"title":{},"body":{"index.html":{}}}],["properti",{"_index":24,"title":{},"body":{"components/AddQuestionComponent.html":{},"classes/Answer.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AuthService.html":{},"classes/DifficultyLevel.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"classes/Question.html":{},"classes/QuestionType.html":{},"classes/Status.html":{},"classes/Subject.html":{},"components/SubjectComponent.html":{},"injectables/SubjectService.html":{},"components/SystemAdminPanelComponent.html":{},"components/TestPrintPreviewComponent.html":{},"interceptors/TokenInterceptor.html":{},"classes/Visibility.html":{},"components/VisibilityComponent.html":{},"classes/YearOfStudy.html":{}}}],["protractor",{"_index":665,"title":{},"body":{"components/HeaderComponent.html":{},"index.html":{}}}],["provid",{"_index":444,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["providedin",{"_index":536,"title":{},"body":{"injectables/AreaService.html":{},"injectables/AuthenticationService.html":{},"injectables/DifficultyLevelService.html":{},"injectables/QuestionService.html":{},"injectables/QuestionTypeService.html":{},"injectables/StatusService.html":{},"injectables/SubjectService.html":{},"injectables/TestService.html":{},"injectables/VisibilityService.html":{},"injectables/YearOfStudyService.html":{}}}],["public",{"_index":42,"title":{},"body":{"components/AddQuestionComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["publicguard",{"_index":452,"title":{"injectables/PublicGuard.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/PublicGuard.html":{},"coverage.html":{},"overview.html":{}}}],["put",{"_index":319,"title":{},"body":{"injectables/ApiService.html":{}}}],["put(url",{"_index":352,"title":{},"body":{"injectables/ApiService.html":{}}}],["queryparam",{"_index":350,"title":{},"body":{"injectables/ApiService.html":{}}}],["quesstiontypenam",{"_index":946,"title":{},"body":{"classes/QuestionType.html":{},"components/SystemAdminPanelComponent.html":{}}}],["question",{"_index":18,"title":{"classes/Question.html":{}},"body":{"components/AddQuestionComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"components/SubjectComponent.html":{},"components/SystemAdminPanelComponent.html":{},"components/TestPrintPreviewComponent.html":{},"components/VisibilityComponent.html":{},"coverage.html":{}}}],["question').pip",{"_index":939,"title":{},"body":{"injectables/QuestionService.html":{}}}],["question'},{'nam",{"_index":242,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"components/RegisterComponent.html":{},"components/SubjectComponent.html":{},"components/SystemAdminPanelComponent.html":{},"components/TestPrintPreviewComponent.html":{},"components/VisibilityComponent.html":{}}}],["question).pip",{"_index":942,"title":{},"body":{"injectables/QuestionService.html":{}}}],["question.compon",{"_index":469,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["question.component.css",{"_index":20,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["question.component.html",{"_index":22,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["question.component.t",{"_index":10,"title":{},"body":{"components/AddQuestionComponent.html":{},"coverage.html":{}}}],["question.component.ts:102",{"_index":81,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["question.component.ts:106",{"_index":67,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["question.component.ts:125",{"_index":86,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["question.component.ts:138",{"_index":83,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["question.component.ts:28",{"_index":104,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["question.component.ts:29",{"_index":96,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["question.component.ts:30",{"_index":101,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["question.component.ts:31",{"_index":100,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["question.component.ts:32",{"_index":97,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["question.component.ts:33",{"_index":105,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["question.component.ts:34",{"_index":110,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["question.component.ts:35",{"_index":99,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["question.component.ts:36",{"_index":94,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["question.component.ts:37",{"_index":109,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["question.component.ts:38",{"_index":108,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["question.component.ts:39",{"_index":91,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["question.component.ts:41",{"_index":61,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["question.component.ts:46",{"_index":73,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["question.component.ts:49",{"_index":90,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["question.component.ts:51",{"_index":103,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["question.component.ts:52",{"_index":106,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["question.component.ts:54",{"_index":74,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["question.component.ts:91",{"_index":71,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["question.component.ts:96",{"_index":79,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["question.component.ts:99",{"_index":76,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["question/add",{"_index":9,"title":{},"body":{"components/AddQuestionComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/SubjectComponent.html":{},"components/VisibilityComponent.html":{},"coverage.html":{}}}],["question/edit",{"_index":502,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["question/pagination/limit",{"_index":940,"title":{},"body":{"injectables/QuestionService.html":{}}}],["question/preview",{"_index":483,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["questionform",{"_index":31,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["questionimag",{"_index":909,"title":{},"body":{"classes/Question.html":{}}}],["questionservic",{"_index":57,"title":{"injectables/QuestionService.html":{}},"body":{"components/AddQuestionComponent.html":{},"modules/AppModule.html":{},"injectables/QuestionService.html":{},"coverage.html":{},"overview.html":{}}}],["questiontext",{"_index":32,"title":{},"body":{"components/AddQuestionComponent.html":{},"classes/Question.html":{}}}],["questiontyp",{"_index":33,"title":{"classes/QuestionType.html":{}},"body":{"components/AddQuestionComponent.html":{},"classes/Question.html":{},"classes/QuestionType.html":{},"components/SystemAdminPanelComponent.html":{},"coverage.html":{}}}],["questiontype').pip",{"_index":954,"title":{},"body":{"injectables/QuestionTypeService.html":{}}}],["questiontypeform",{"_index":1056,"title":{},"body":{"components/SystemAdminPanelComponent.html":{}}}],["questiontypeid",{"_index":947,"title":{},"body":{"classes/QuestionType.html":{}}}],["questiontypesearch",{"_index":1057,"title":{},"body":{"components/SystemAdminPanelComponent.html":{}}}],["questiontypeservic",{"_index":56,"title":{"injectables/QuestionTypeService.html":{}},"body":{"components/AddQuestionComponent.html":{},"injectables/QuestionTypeService.html":{},"components/SystemAdminPanelComponent.html":{},"coverage.html":{}}}],["questiontypeshow",{"_index":1058,"title":{},"body":{"components/SystemAdminPanelComponent.html":{}}}],["rc.1",{"_index":1250,"title":{},"body":{"dependencies.html":{}}}],["rc.11",{"_index":1253,"title":{},"body":{"dependencies.html":{}}}],["re",{"_index":714,"title":{},"body":{"components/HelloComponent.html":{},"components/SubjectComponent.html":{},"components/SystemAdminPanelComponent.html":{}}}],["reactiv",{"_index":579,"title":{},"body":{"injectables/AuthService.html":{}}}],["reactiveformsmodul",{"_index":476,"title":{},"body":{"modules/AppModule.html":{}}}],["reader",{"_index":216,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["reader.onload",{"_index":219,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["reader.readasdataurl(event.target.files[0",{"_index":218,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["readm",{"_index":1319,"title":{},"body":{"index.html":{}}}],["reason",{"_index":692,"title":{},"body":{"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{}}}],["recent",{"_index":733,"title":{},"body":{"components/HelloComponent.html":{},"injectables/TestService.html":{}}}],["recent(id",{"_index":1112,"title":{},"body":{"injectables/TestService.html":{}}}],["redirectto",{"_index":507,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["regist",{"_index":511,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/RegisterComponent.html":{}}}],["register'},{'nam",{"_index":266,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"components/RegisterComponent.html":{},"components/SubjectComponent.html":{},"components/SystemAdminPanelComponent.html":{},"components/TestPrintPreviewComponent.html":{},"components/VisibilityComponent.html":{}}}],["register(request",{"_index":609,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["register.component.css",{"_index":956,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.html",{"_index":957,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercompon",{"_index":265,"title":{"components/RegisterComponent.html":{}},"body":{"components/AddQuestionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"components/RegisterComponent.html":{},"components/SubjectComponent.html":{},"components/SystemAdminPanelComponent.html":{},"components/TestPrintPreviewComponent.html":{},"components/VisibilityComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registerlocaledata",{"_index":666,"title":{},"body":{"components/HeaderComponent.html":{}}}],["reload",{"_index":1296,"title":{},"body":{"index.html":{}}}],["remov",{"_index":573,"title":{},"body":{"injectables/AuthService.html":{}}}],["removelogindata",{"_index":559,"title":{},"body":{"injectables/AuthService.html":{}}}],["repeat",{"_index":802,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["repeatcont",{"_index":822,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["repeattest",{"_index":803,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["repeattest(repeatcont",{"_index":820,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["request",{"_index":335,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AreaService.html":{},"injectables/AuthenticationService.html":{},"injectables/DifficultyLevelService.html":{},"injectables/QuestionService.html":{},"injectables/QuestionTypeService.html":{},"injectables/StatusService.html":{},"injectables/SubjectService.html":{},"injectables/TestService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/VisibilityService.html":{},"injectables/YearOfStudyService.html":{}}}],["request.appadmin",{"_index":624,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["request.clon",{"_index":1137,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["request.confirmpassword",{"_index":621,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["request.email",{"_index":615,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["request.nam",{"_index":619,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["request.password",{"_index":617,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["request.subject",{"_index":622,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["requestopt",{"_index":1116,"title":{},"body":{"injectables/TestService.html":{}}}],["requir",{"_index":1230,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":457,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["respons",{"_index":380,"title":{},"body":{"injectables/ApiService.html":{}}}],["response.count",{"_index":853,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["response.data",{"_index":851,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["result",{"_index":276,"title":{},"body":{"components/AddQuestionComponent.html":{},"injectables/AdminGuard.html":{},"classes/Answer.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Area.html":{},"injectables/AreaService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"classes/DifficultyLevel.html":{},"injectables/DifficultyLevelService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"injectables/PublicGuard.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/QuestionType.html":{},"injectables/QuestionTypeService.html":{},"components/RegisterComponent.html":{},"classes/Status.html":{},"injectables/StatusService.html":{},"classes/Subject.html":{},"components/SubjectComponent.html":{},"injectables/SubjectService.html":{},"components/SystemAdminPanelComponent.html":{},"injectables/SystemGuard.html":{},"components/TestPrintPreviewComponent.html":{},"injectables/TestService.html":{},"interceptors/TokenInterceptor.html":{},"classes/Visibility.html":{},"components/VisibilityComponent.html":{},"injectables/VisibilityService.html":{},"classes/YearOfStudy.html":{},"injectables/YearOfStudyService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retri",{"_index":534,"title":{},"body":{"injectables/AreaService.html":{},"injectables/DifficultyLevelService.html":{},"injectables/QuestionService.html":{},"injectables/QuestionTypeService.html":{},"injectables/StatusService.html":{},"injectables/SubjectService.html":{},"injectables/TestService.html":{},"injectables/VisibilityService.html":{},"injectables/YearOfStudyService.html":{}}}],["retriev",{"_index":564,"title":{},"body":{"injectables/AuthService.html":{}}}],["retry(0",{"_index":539,"title":{},"body":{"injectables/AreaService.html":{},"injectables/DifficultyLevelService.html":{},"injectables/QuestionService.html":{},"injectables/QuestionTypeService.html":{},"injectables/StatusService.html":{},"injectables/SubjectService.html":{},"injectables/TestService.html":{},"injectables/VisibilityService.html":{},"injectables/YearOfStudyService.html":{}}}],["return",{"_index":68,"title":{},"body":{"components/AddQuestionComponent.html":{},"injectables/AdminGuard.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AreaService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"injectables/DifficultyLevelService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"injectables/PublicGuard.html":{},"injectables/QuestionService.html":{},"injectables/QuestionTypeService.html":{},"components/RegisterComponent.html":{},"injectables/StatusService.html":{},"components/SubjectComponent.html":{},"injectables/SubjectService.html":{},"components/SystemAdminPanelComponent.html":{},"injectables/SystemGuard.html":{},"components/TestPrintPreviewComponent.html":{},"injectables/TestService.html":{},"interceptors/TokenInterceptor.html":{},"components/VisibilityComponent.html":{},"injectables/VisibilityService.html":{},"injectables/YearOfStudyService.html":{}}}],["root",{"_index":422,"title":{},"body":{"components/AppComponent.html":{},"injectables/AreaService.html":{},"injectables/AuthenticationService.html":{},"injectables/DifficultyLevelService.html":{},"injectables/QuestionService.html":{},"injectables/QuestionTypeService.html":{},"injectables/StatusService.html":{},"injectables/SubjectService.html":{},"injectables/TestService.html":{},"injectables/VisibilityService.html":{},"injectables/YearOfStudyService.html":{}}}],["root'},{'nam",{"_index":247,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"components/RegisterComponent.html":{},"components/SubjectComponent.html":{},"components/SystemAdminPanelComponent.html":{},"components/TestPrintPreviewComponent.html":{},"components/VisibilityComponent.html":{}}}],["rout",{"_index":291,"title":{"routes.html":{}},"body":{"injectables/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"components/HeaderComponent.html":{},"injectables/PublicGuard.html":{},"injectables/SystemGuard.html":{},"overview.html":{},"routes.html":{}}}],["router",{"_index":283,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AuthGuard.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/PublicGuard.html":{},"injectables/SystemGuard.html":{}}}],["routermodul",{"_index":481,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(rout",{"_index":521,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":289,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AuthGuard.html":{},"injectables/SystemGuard.html":{}}}],["routing.modul",{"_index":467,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.t",{"_index":478,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":1290,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":133,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["rxjs/add/observable/of",{"_index":582,"title":{},"body":{"injectables/AuthService.html":{}}}],["rxjs/add/operator/map",{"_index":364,"title":{},"body":{"injectables/ApiService.html":{}}}],["rxjs/behaviorsubject",{"_index":581,"title":{},"body":{"injectables/AuthService.html":{}}}],["rxjs/internal/observable/throwerror",{"_index":367,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AreaService.html":{},"injectables/DifficultyLevelService.html":{},"injectables/QuestionService.html":{},"injectables/SubjectService.html":{},"injectables/TestService.html":{},"injectables/YearOfStudyService.html":{}}}],["rxjs/observ",{"_index":363,"title":{},"body":{"injectables/ApiService.html":{},"interceptors/TokenInterceptor.html":{}}}],["rxjs/oper",{"_index":142,"title":{},"body":{"components/AddQuestionComponent.html":{},"injectables/AreaService.html":{},"injectables/DifficultyLevelService.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"injectables/QuestionService.html":{},"injectables/QuestionTypeService.html":{},"injectables/StatusService.html":{},"injectables/SubjectService.html":{},"injectables/TestService.html":{},"injectables/VisibilityService.html":{},"injectables/YearOfStudyService.html":{}}}],["s",{"_index":871,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["s:string",{"_index":870,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["sarajevo",{"_index":648,"title":{},"body":{"components/FooterComponent.html":{}}}],["save",{"_index":589,"title":{},"body":{"injectables/AuthService.html":{}}}],["scaffold",{"_index":1298,"title":{},"body":{"index.html":{}}}],["selector",{"_index":15,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"components/RegisterComponent.html":{},"components/SubjectComponent.html":{},"components/SystemAdminPanelComponent.html":{},"components/TestPrintPreviewComponent.html":{},"components/VisibilityComponent.html":{}}}],["send",{"_index":334,"title":{},"body":{"injectables/ApiService.html":{}}}],["serv",{"_index":1291,"title":{},"body":{"index.html":{}}}],["server",{"_index":1289,"title":{},"body":{"index.html":{}}}],["services/apiservice/api.servic",{"_index":762,"title":{},"body":{"components/LoginComponent.html":{}}}],["services/areaservice/area.servic",{"_index":1004,"title":{},"body":{"components/SubjectComponent.html":{}}}],["services/authenticationservice/authentication.servic",{"_index":433,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["services/authservice/auth.servic",{"_index":294,"title":{},"body":{"injectables/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/PublicGuard.html":{},"injectables/SystemGuard.html":{},"interceptors/TokenInterceptor.html":{}}}],["services/difficultylevelservice/difficulti",{"_index":114,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["services/questionservice/question.servic",{"_index":118,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["services/questiontypeservice/quest",{"_index":116,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["services/statusservice/status.servic",{"_index":113,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["services/subjectservice/subject.servic",{"_index":1003,"title":{},"body":{"components/SubjectComponent.html":{}}}],["services/testservice/test.servic",{"_index":705,"title":{},"body":{"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{}}}],["services/visibilityservice/visibility.servic",{"_index":1165,"title":{},"body":{"components/VisibilityComponent.html":{}}}],["sessionstorage.clear",{"_index":594,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessionstorage.removeitem('test",{"_index":1099,"title":{},"body":{"components/TestPrintPreviewComponent.html":{}}}],["sessionstorage.setitem('tableview",{"_index":856,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["sessionstorage.setitem('test",{"_index":718,"title":{},"body":{"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{}}}],["sessionstorage.setitem('withansw",{"_index":715,"title":{},"body":{"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{}}}],["sessionstorage.setitem('withblankspac",{"_index":717,"title":{},"body":{"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{}}}],["set",{"_index":355,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/SubjectComponent.html":{},"components/VisibilityComponent.html":{}}}],["set('author",{"_index":375,"title":{},"body":{"injectables/ApiService.html":{}}}],["set('cont",{"_index":373,"title":{},"body":{"injectables/ApiService.html":{}}}],["sethead",{"_index":1138,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["setsubject(v",{"_index":1000,"title":{},"body":{"components/SubjectComponent.html":{}}}],["settoken",{"_index":320,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{}}}],["settoken(token",{"_index":575,"title":{},"body":{"injectables/AuthService.html":{}}}],["setvisibility(v",{"_index":1163,"title":{},"body":{"components/VisibilityComponent.html":{}}}],["shared/models/answ",{"_index":128,"title":{},"body":{"components/AddQuestionComponent.html":{},"classes/Question.html":{}}}],["shared/models/area",{"_index":120,"title":{},"body":{"components/AddQuestionComponent.html":{},"classes/Question.html":{}}}],["shared/models/difficulti",{"_index":124,"title":{},"body":{"components/AddQuestionComponent.html":{},"classes/Question.html":{}}}],["shared/models/quest",{"_index":123,"title":{},"body":{"components/AddQuestionComponent.html":{},"classes/Question.html":{}}}],["shared/models/statu",{"_index":122,"title":{},"body":{"components/AddQuestionComponent.html":{},"classes/Question.html":{}}}],["shared/models/subject",{"_index":924,"title":{},"body":{"classes/Question.html":{}}}],["shared/models/vis",{"_index":126,"title":{},"body":{"components/AddQuestionComponent.html":{},"classes/Question.html":{}}}],["side",{"_index":396,"title":{},"body":{"injectables/ApiService.html":{}}}],["size",{"_index":722,"title":{},"body":{"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{}}}],["skip",{"_index":936,"title":{},"body":{"injectables/QuestionService.html":{},"injectables/TestService.html":{}}}],["someth",{"_index":414,"title":{},"body":{"injectables/ApiService.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AddQuestionComponent.html":{},"injectables/AdminGuard.html":{},"classes/Answer.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Area.html":{},"injectables/AreaService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"classes/DifficultyLevel.html":{},"injectables/DifficultyLevelService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"injectables/PublicGuard.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/QuestionType.html":{},"injectables/QuestionTypeService.html":{},"components/RegisterComponent.html":{},"classes/Status.html":{},"injectables/StatusService.html":{},"classes/Subject.html":{},"components/SubjectComponent.html":{},"injectables/SubjectService.html":{},"components/SystemAdminPanelComponent.html":{},"injectables/SystemGuard.html":{},"components/TestPrintPreviewComponent.html":{},"injectables/TestService.html":{},"interceptors/TokenInterceptor.html":{},"classes/Visibility.html":{},"components/VisibilityComponent.html":{},"injectables/VisibilityService.html":{},"classes/YearOfStudy.html":{},"injectables/YearOfStudyService.html":{},"index.html":{}}}],["space",{"_index":890,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["spec\\.t",{"_index":1335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.t",{"_index":1332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":1333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.t",{"_index":1331,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":477,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.t",{"_index":421,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:15",{"_index":428,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:16",{"_index":431,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:19",{"_index":430,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:23",{"_index":429,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":459,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/add",{"_index":8,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/SubjectComponent.html":{},"components/VisibilityComponent.html":{},"coverage.html":{}}}],["src/app/components/admin",{"_index":1202,"title":{},"body":{"coverage.html":{}}}],["src/app/components/edit",{"_index":1204,"title":{},"body":{"coverage.html":{}}}],["src/app/components/gener",{"_index":1206,"title":{},"body":{"coverage.html":{}}}],["src/app/components/hello/hello.component.t",{"_index":676,"title":{},"body":{"components/HelloComponent.html":{},"coverage.html":{}}}],["src/app/components/hello/hello.component.ts:13",{"_index":702,"title":{},"body":{"components/HelloComponent.html":{}}}],["src/app/components/hello/hello.component.ts:14",{"_index":700,"title":{},"body":{"components/HelloComponent.html":{}}}],["src/app/components/hello/hello.component.ts:15",{"_index":704,"title":{},"body":{"components/HelloComponent.html":{}}}],["src/app/components/hello/hello.component.ts:16",{"_index":703,"title":{},"body":{"components/HelloComponent.html":{}}}],["src/app/components/hello/hello.component.ts:17",{"_index":688,"title":{},"body":{"components/HelloComponent.html":{}}}],["src/app/components/hello/hello.component.ts:19",{"_index":701,"title":{},"body":{"components/HelloComponent.html":{}}}],["src/app/components/hello/hello.component.ts:22",{"_index":693,"title":{},"body":{"components/HelloComponent.html":{}}}],["src/app/components/hello/hello.component.ts:32",{"_index":698,"title":{},"body":{"components/HelloComponent.html":{}}}],["src/app/components/hello/hello.component.ts:38",{"_index":695,"title":{},"body":{"components/HelloComponent.html":{}}}],["src/app/components/hello/hello.component.ts:46",{"_index":691,"title":{},"body":{"components/HelloComponent.html":{}}}],["src/app/components/interceptors/tokeninterceptor.t",{"_index":1125,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["src/app/components/interceptors/tokeninterceptor.ts:12",{"_index":1128,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["src/app/components/interceptors/tokeninterceptor.ts:13",{"_index":1134,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["src/app/components/interceptors/tokeninterceptor.ts:14",{"_index":1133,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["src/app/components/login/login.component.t",{"_index":755,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts:18",{"_index":760,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:19",{"_index":761,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:20",{"_index":758,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:27",{"_index":759,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/preview",{"_index":784,"title":{},"body":{"components/PreviewTestsComponent.html":{},"coverage.html":{}}}],["src/app/components/register/register.component.t",{"_index":955,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/components/register/register.component.ts:12",{"_index":959,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:8",{"_index":958,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/system",{"_index":1052,"title":{},"body":{"components/SystemAdminPanelComponent.html":{},"coverage.html":{}}}],["src/app/components/test",{"_index":1084,"title":{},"body":{"components/TestPrintPreviewComponent.html":{},"coverage.html":{}}}],["src/app/footer/footer.component.t",{"_index":640,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/footer/footer.component.ts:12",{"_index":645,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/footer/footer.component.ts:8",{"_index":644,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/guards/admin.guard.t",{"_index":280,"title":{},"body":{"injectables/AdminGuard.html":{},"coverage.html":{}}}],["src/app/guards/admin.guard.ts:11",{"_index":290,"title":{},"body":{"injectables/AdminGuard.html":{}}}],["src/app/guards/admin.guard.ts:7",{"_index":285,"title":{},"body":{"injectables/AdminGuard.html":{}}}],["src/app/guards/auth.guard.t",{"_index":547,"title":{},"body":{"injectables/AuthGuard.html":{},"coverage.html":{}}}],["src/app/guards/auth.guard.ts:11",{"_index":549,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/app/guards/auth.guard.ts:7",{"_index":548,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/app/guards/public.guard.t",{"_index":896,"title":{},"body":{"injectables/PublicGuard.html":{},"coverage.html":{}}}],["src/app/guards/public.guard.ts:11",{"_index":903,"title":{},"body":{"injectables/PublicGuard.html":{}}}],["src/app/guards/public.guard.ts:15",{"_index":904,"title":{},"body":{"injectables/PublicGuard.html":{}}}],["src/app/guards/system.guard.t",{"_index":1081,"title":{},"body":{"injectables/SystemGuard.html":{},"coverage.html":{}}}],["src/app/guards/system.guard.ts:11",{"_index":1083,"title":{},"body":{"injectables/SystemGuard.html":{}}}],["src/app/guards/system.guard.ts:7",{"_index":1082,"title":{},"body":{"injectables/SystemGuard.html":{}}}],["src/app/header/header.component.t",{"_index":649,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/header/header.component.ts:15",{"_index":660,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:16",{"_index":663,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:17",{"_index":662,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:18",{"_index":655,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:21",{"_index":659,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:26",{"_index":658,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:31",{"_index":657,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:34",{"_index":656,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/services/apiservice/api.service.t",{"_index":311,"title":{},"body":{"injectables/ApiService.html":{},"coverage.html":{}}}],["src/app/services/apiservice/api.service.ts:106",{"_index":344,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/apiservice/api.service.ts:110",{"_index":328,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/apiservice/api.service.ts:122",{"_index":341,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/apiservice/api.service.ts:13",{"_index":358,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/apiservice/api.service.ts:14",{"_index":360,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/apiservice/api.service.ts:15",{"_index":326,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/apiservice/api.service.ts:26",{"_index":362,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/apiservice/api.service.ts:33",{"_index":354,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/apiservice/api.service.ts:48",{"_index":333,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/apiservice/api.service.ts:75",{"_index":351,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/apiservice/api.service.ts:97",{"_index":353,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/areaservice/area.service.t",{"_index":528,"title":{},"body":{"injectables/AreaService.html":{},"coverage.html":{}}}],["src/app/services/areaservice/area.service.ts:10",{"_index":530,"title":{},"body":{"injectables/AreaService.html":{}}}],["src/app/services/areaservice/area.service.ts:13",{"_index":533,"title":{},"body":{"injectables/AreaService.html":{}}}],["src/app/services/areaservice/area.service.ts:19",{"_index":532,"title":{},"body":{"injectables/AreaService.html":{}}}],["src/app/services/authenticationservice/authentication.service.t",{"_index":601,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{}}}],["src/app/services/authenticationservice/authentication.service.ts:15",{"_index":605,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authenticationservice/authentication.service.ts:21",{"_index":610,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authenticationservice/authentication.service.ts:31",{"_index":607,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authenticationservice/authentication.service.ts:9",{"_index":603,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authservice/auth.service.t",{"_index":551,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/services/authservice/auth.service.ts:13",{"_index":560,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/authservice/auth.service.ts:23",{"_index":576,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/authservice/auth.service.ts:39",{"_index":572,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/authservice/auth.service.ts:49",{"_index":563,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/authservice/auth.service.ts:59",{"_index":567,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/authservice/auth.service.ts:68",{"_index":566,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/authservice/auth.service.ts:76",{"_index":561,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/authservice/auth.service.ts:81",{"_index":571,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/authservice/auth.service.ts:89",{"_index":562,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/difficultylevelservice/difficulti",{"_index":635,"title":{},"body":{"injectables/DifficultyLevelService.html":{},"coverage.html":{}}}],["src/app/services/questionservice/question.service.t",{"_index":925,"title":{},"body":{"injectables/QuestionService.html":{},"coverage.html":{}}}],["src/app/services/questionservice/question.service.ts:11",{"_index":927,"title":{},"body":{"injectables/QuestionService.html":{}}}],["src/app/services/questionservice/question.service.ts:14",{"_index":932,"title":{},"body":{"injectables/QuestionService.html":{}}}],["src/app/services/questionservice/question.service.ts:21",{"_index":937,"title":{},"body":{"injectables/QuestionService.html":{}}}],["src/app/services/questionservice/question.service.ts:28",{"_index":929,"title":{},"body":{"injectables/QuestionService.html":{}}}],["src/app/services/questionservice/question.service.ts:34",{"_index":931,"title":{},"body":{"injectables/QuestionService.html":{}}}],["src/app/services/questiontypeservice/quest",{"_index":950,"title":{},"body":{"injectables/QuestionTypeService.html":{},"components/SystemAdminPanelComponent.html":{},"coverage.html":{}}}],["src/app/services/statusservice/status.service.t",{"_index":965,"title":{},"body":{"injectables/StatusService.html":{},"coverage.html":{}}}],["src/app/services/statusservice/status.service.ts:12",{"_index":967,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/app/services/statusservice/status.service.ts:9",{"_index":966,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/app/services/subjectservice/subject.service.t",{"_index":1027,"title":{},"body":{"injectables/SubjectService.html":{},"coverage.html":{}}}],["src/app/services/subjectservice/subject.service.ts:11",{"_index":1032,"title":{},"body":{"injectables/SubjectService.html":{}}}],["src/app/services/subjectservice/subject.service.ts:13",{"_index":1035,"title":{},"body":{"injectables/SubjectService.html":{}}}],["src/app/services/subjectservice/subject.service.ts:20",{"_index":1041,"title":{},"body":{"injectables/SubjectService.html":{}}}],["src/app/services/subjectservice/subject.service.ts:27",{"_index":1043,"title":{},"body":{"injectables/SubjectService.html":{}}}],["src/app/services/subjectservice/subject.service.ts:33",{"_index":1038,"title":{},"body":{"injectables/SubjectService.html":{}}}],["src/app/services/subjectservice/subject.service.ts:39",{"_index":1034,"title":{},"body":{"injectables/SubjectService.html":{}}}],["src/app/services/subjectservice/subject.service.ts:45",{"_index":1045,"title":{},"body":{"injectables/SubjectService.html":{}}}],["src/app/services/testservice/test.service.t",{"_index":1103,"title":{},"body":{"injectables/TestService.html":{},"coverage.html":{}}}],["src/app/services/testservice/test.service.ts:11",{"_index":1105,"title":{},"body":{"injectables/TestService.html":{}}}],["src/app/services/testservice/test.service.ts:14",{"_index":1109,"title":{},"body":{"injectables/TestService.html":{}}}],["src/app/services/testservice/test.service.ts:21",{"_index":1107,"title":{},"body":{"injectables/TestService.html":{}}}],["src/app/services/testservice/test.service.ts:28",{"_index":1110,"title":{},"body":{"injectables/TestService.html":{}}}],["src/app/services/testservice/test.service.ts:34",{"_index":1115,"title":{},"body":{"injectables/TestService.html":{}}}],["src/app/services/testservice/test.service.ts:40",{"_index":1113,"title":{},"body":{"injectables/TestService.html":{}}}],["src/app/services/testservice/test.service.ts:52",{"_index":1111,"title":{},"body":{"injectables/TestService.html":{}}}],["src/app/services/visibilityservice/visibility.service.t",{"_index":1175,"title":{},"body":{"injectables/VisibilityService.html":{},"coverage.html":{}}}],["src/app/services/visibilityservice/visibility.service.ts:13",{"_index":1177,"title":{},"body":{"injectables/VisibilityService.html":{}}}],["src/app/services/visibilityservice/visibility.service.ts:9",{"_index":1176,"title":{},"body":{"injectables/VisibilityService.html":{}}}],["src/app/services/yearodstudyservice/year",{"_index":1186,"title":{},"body":{"injectables/YearOfStudyService.html":{},"coverage.html":{}}}],["src/app/shared/models/answer.t",{"_index":299,"title":{},"body":{"classes/Answer.html":{},"coverage.html":{}}}],["src/app/shared/models/answer.ts:2",{"_index":306,"title":{},"body":{"classes/Answer.html":{}}}],["src/app/shared/models/answer.ts:3",{"_index":305,"title":{},"body":{"classes/Answer.html":{}}}],["src/app/shared/models/answer.ts:4",{"_index":307,"title":{},"body":{"classes/Answer.html":{}}}],["src/app/shared/models/answer.ts:5",{"_index":308,"title":{},"body":{"classes/Answer.html":{}}}],["src/app/shared/models/answer.ts:6",{"_index":309,"title":{},"body":{"classes/Answer.html":{}}}],["src/app/shared/models/area.t",{"_index":522,"title":{},"body":{"classes/Area.html":{},"coverage.html":{}}}],["src/app/shared/models/area.ts:2",{"_index":525,"title":{},"body":{"classes/Area.html":{}}}],["src/app/shared/models/area.ts:3",{"_index":526,"title":{},"body":{"classes/Area.html":{}}}],["src/app/shared/models/difficulti",{"_index":630,"title":{},"body":{"classes/DifficultyLevel.html":{},"coverage.html":{}}}],["src/app/shared/models/quest",{"_index":944,"title":{},"body":{"classes/QuestionType.html":{},"coverage.html":{}}}],["src/app/shared/models/question.t",{"_index":907,"title":{},"body":{"classes/Question.html":{},"coverage.html":{}}}],["src/app/shared/models/question.ts:11",{"_index":919,"title":{},"body":{"classes/Question.html":{}}}],["src/app/shared/models/question.ts:12",{"_index":912,"title":{},"body":{"classes/Question.html":{}}}],["src/app/shared/models/question.ts:13",{"_index":915,"title":{},"body":{"classes/Question.html":{}}}],["src/app/shared/models/question.ts:14",{"_index":920,"title":{},"body":{"classes/Question.html":{}}}],["src/app/shared/models/question.ts:15",{"_index":914,"title":{},"body":{"classes/Question.html":{}}}],["src/app/shared/models/question.ts:16",{"_index":911,"title":{},"body":{"classes/Question.html":{}}}],["src/app/shared/models/question.ts:17",{"_index":916,"title":{},"body":{"classes/Question.html":{}}}],["src/app/shared/models/question.ts:18",{"_index":921,"title":{},"body":{"classes/Question.html":{}}}],["src/app/shared/models/question.ts:19",{"_index":922,"title":{},"body":{"classes/Question.html":{}}}],["src/app/shared/models/question.ts:20",{"_index":923,"title":{},"body":{"classes/Question.html":{}}}],["src/app/shared/models/question.ts:21",{"_index":910,"title":{},"body":{"classes/Question.html":{}}}],["src/app/shared/models/question.ts:22",{"_index":918,"title":{},"body":{"classes/Question.html":{}}}],["src/app/shared/models/question.ts:23",{"_index":917,"title":{},"body":{"classes/Question.html":{}}}],["src/app/shared/models/question.ts:24",{"_index":913,"title":{},"body":{"classes/Question.html":{}}}],["src/app/shared/models/status.t",{"_index":960,"title":{},"body":{"classes/Status.html":{},"coverage.html":{}}}],["src/app/shared/models/status.ts:2",{"_index":963,"title":{},"body":{"classes/Status.html":{}}}],["src/app/shared/models/status.ts:3",{"_index":964,"title":{},"body":{"classes/Status.html":{}}}],["src/app/shared/models/subject.t",{"_index":970,"title":{},"body":{"classes/Subject.html":{},"coverage.html":{}}}],["src/app/shared/models/subject.ts:2",{"_index":973,"title":{},"body":{"classes/Subject.html":{}}}],["src/app/shared/models/subject.ts:3",{"_index":974,"title":{},"body":{"classes/Subject.html":{}}}],["src/app/shared/models/subject.ts:4",{"_index":972,"title":{},"body":{"classes/Subject.html":{}}}],["src/app/shared/models/visibility.t",{"_index":1142,"title":{},"body":{"classes/Visibility.html":{},"coverage.html":{}}}],["src/app/shared/models/visibility.ts:2",{"_index":1145,"title":{},"body":{"classes/Visibility.html":{}}}],["src/app/shared/models/visibility.ts:3",{"_index":1146,"title":{},"body":{"classes/Visibility.html":{}}}],["src/app/shared/models/year",{"_index":1179,"title":{},"body":{"classes/YearOfStudy.html":{},"coverage.html":{}}}],["src/environments/environment.prod.t",{"_index":1224,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":1227,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.t",{"_index":1228,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":1282,"title":{"index.html":{}},"body":{}}],["startpag",{"_index":517,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["state",{"_index":288,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AuthGuard.html":{},"injectables/SystemGuard.html":{}}}],["statement",{"_index":1197,"title":{},"body":{"coverage.html":{}}}],["staticalertclos",{"_index":34,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["statu",{"_index":121,"title":{"classes/Status.html":{}},"body":{"components/AddQuestionComponent.html":{},"injectables/AuthService.html":{},"classes/Question.html":{},"classes/Status.html":{},"coverage.html":{}}}],["status",{"_index":35,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["status').pip",{"_index":969,"title":{},"body":{"injectables/StatusService.html":{}}}],["statusid",{"_index":961,"title":{},"body":{"classes/Status.html":{}}}],["statusnam",{"_index":962,"title":{},"body":{"classes/Status.html":{}}}],["statusservic",{"_index":54,"title":{"injectables/StatusService.html":{}},"body":{"components/AddQuestionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/StatusService.html":{},"coverage.html":{},"overview.html":{}}}],["storag",{"_index":586,"title":{},"body":{"injectables/AuthService.html":{}}}],["store",{"_index":1303,"title":{},"body":{"index.html":{}}}],["string",{"_index":92,"title":{},"body":{"components/AddQuestionComponent.html":{},"classes/Answer.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"injectables/TestService.html":{}}}],["studi",{"_index":736,"title":{},"body":{"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{},"components/SubjectComponent.html":{}}}],["study.service.t",{"_index":1187,"title":{},"body":{"injectables/YearOfStudyService.html":{},"coverage.html":{}}}],["study.service.ts:10",{"_index":1188,"title":{},"body":{"injectables/YearOfStudyService.html":{}}}],["study.service.ts:13",{"_index":1191,"title":{},"body":{"injectables/YearOfStudyService.html":{}}}],["study.service.ts:19",{"_index":1190,"title":{},"body":{"injectables/YearOfStudyService.html":{}}}],["study.t",{"_index":1180,"title":{},"body":{"classes/YearOfStudy.html":{},"coverage.html":{}}}],["study.ts:2",{"_index":1183,"title":{},"body":{"classes/YearOfStudy.html":{}}}],["study.ts:3",{"_index":1184,"title":{},"body":{"classes/YearOfStudy.html":{}}}],["styleurl",{"_index":19,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"components/RegisterComponent.html":{},"components/SubjectComponent.html":{},"components/SystemAdminPanelComponent.html":{},"components/TestPrintPreviewComponent.html":{},"components/VisibilityComponent.html":{}}}],["subcomponents/subject/subject.compon",{"_index":473,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["subcomponents/subject/subject.component.t",{"_index":975,"title":{},"body":{"components/SubjectComponent.html":{},"coverage.html":{}}}],["subcomponents/subject/subject.component.ts:12",{"_index":996,"title":{},"body":{"components/SubjectComponent.html":{}}}],["subcomponents/subject/subject.component.ts:13",{"_index":995,"title":{},"body":{"components/SubjectComponent.html":{}}}],["subcomponents/subject/subject.component.ts:14",{"_index":999,"title":{},"body":{"components/SubjectComponent.html":{}}}],["subcomponents/subject/subject.component.ts:15",{"_index":997,"title":{},"body":{"components/SubjectComponent.html":{}}}],["subcomponents/subject/subject.component.ts:16",{"_index":998,"title":{},"body":{"components/SubjectComponent.html":{}}}],["subcomponents/subject/subject.component.ts:17",{"_index":988,"title":{},"body":{"components/SubjectComponent.html":{}}}],["subcomponents/subject/subject.component.ts:19",{"_index":987,"title":{},"body":{"components/SubjectComponent.html":{}}}],["subcomponents/subject/subject.component.ts:22",{"_index":1001,"title":{},"body":{"components/SubjectComponent.html":{}}}],["subcomponents/subject/subject.component.ts:25",{"_index":986,"title":{},"body":{"components/SubjectComponent.html":{}}}],["subcomponents/subject/subject.component.ts:29",{"_index":989,"title":{},"body":{"components/SubjectComponent.html":{}}}],["subcomponents/subject/subject.component.ts:49",{"_index":992,"title":{},"body":{"components/SubjectComponent.html":{}}}],["subcomponents/subject/subject.component.ts:65",{"_index":994,"title":{},"body":{"components/SubjectComponent.html":{}}}],["subcomponents/subject/subject.component.ts:70",{"_index":991,"title":{},"body":{"components/SubjectComponent.html":{}}}],["subcomponents/visibility/visibility.compon",{"_index":474,"title":{},"body":{"modules/AppModule.html":{}}}],["subcomponents/visibility/visibility.component.t",{"_index":1147,"title":{},"body":{"components/VisibilityComponent.html":{},"coverage.html":{}}}],["subcomponents/visibility/visibility.component.ts:10",{"_index":1161,"title":{},"body":{"components/VisibilityComponent.html":{}}}],["subcomponents/visibility/visibility.component.ts:11",{"_index":1162,"title":{},"body":{"components/VisibilityComponent.html":{}}}],["subcomponents/visibility/visibility.component.ts:13",{"_index":1157,"title":{},"body":{"components/VisibilityComponent.html":{}}}],["subcomponents/visibility/visibility.component.ts:16",{"_index":1156,"title":{},"body":{"components/VisibilityComponent.html":{}}}],["subcomponents/visibility/visibility.component.ts:19",{"_index":1164,"title":{},"body":{"components/VisibilityComponent.html":{}}}],["subcomponents/visibility/visibility.component.ts:22",{"_index":1155,"title":{},"body":{"components/VisibilityComponent.html":{}}}],["subcomponents/visibility/visibility.component.ts:25",{"_index":1158,"title":{},"body":{"components/VisibilityComponent.html":{}}}],["subcomponents/visibility/visibility.component.ts:31",{"_index":1160,"title":{},"body":{"components/VisibilityComponent.html":{}}}],["subject",{"_index":36,"title":{"classes/Subject.html":{}},"body":{"components/AddQuestionComponent.html":{},"injectables/AuthenticationService.html":{},"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{},"classes/Question.html":{},"classes/Subject.html":{},"components/SubjectComponent.html":{},"injectables/SubjectService.html":{},"coverage.html":{}}}],["subject').pip",{"_index":1046,"title":{},"body":{"injectables/SubjectService.html":{}}}],["subject'},{'nam",{"_index":268,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"components/RegisterComponent.html":{},"components/SubjectComponent.html":{},"components/SystemAdminPanelComponent.html":{},"components/TestPrintPreviewComponent.html":{},"components/VisibilityComponent.html":{}}}],["subject(v",{"_index":1007,"title":{},"body":{"components/SubjectComponent.html":{}}}],["subject).pip",{"_index":1051,"title":{},"body":{"injectables/SubjectService.html":{}}}],["subject.component.css",{"_index":976,"title":{},"body":{"components/SubjectComponent.html":{}}}],["subject.component.html",{"_index":977,"title":{},"body":{"components/SubjectComponent.html":{}}}],["subject/area",{"_index":1049,"title":{},"body":{"injectables/SubjectService.html":{}}}],["subject/yearofstudi",{"_index":1048,"title":{},"body":{"injectables/SubjectService.html":{}}}],["subjectchang",{"_index":984,"title":{},"body":{"components/SubjectComponent.html":{}}}],["subjectcompon",{"_index":267,"title":{"components/SubjectComponent.html":{}},"body":{"components/AddQuestionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"components/RegisterComponent.html":{},"components/SubjectComponent.html":{},"components/SystemAdminPanelComponent.html":{},"components/TestPrintPreviewComponent.html":{},"components/VisibilityComponent.html":{},"coverage.html":{},"overview.html":{}}}],["subjectid",{"_index":839,"title":{},"body":{"components/PreviewTestsComponent.html":{},"classes/Subject.html":{}}}],["subjectnam",{"_index":971,"title":{},"body":{"classes/Subject.html":{}}}],["subjectservic",{"_index":453,"title":{"injectables/SubjectService.html":{}},"body":{"modules/AppModule.html":{},"components/SubjectComponent.html":{},"injectables/SubjectService.html":{},"coverage.html":{},"overview.html":{}}}],["subjectv",{"_index":978,"title":{},"body":{"components/SubjectComponent.html":{}}}],["subscrib",{"_index":132,"title":{},"body":{"components/AddQuestionComponent.html":{},"injectables/AreaService.html":{},"injectables/QuestionService.html":{},"injectables/SubjectService.html":{}}}],["subscribe((respons",{"_index":768,"title":{},"body":{"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{}}}],["subscript",{"_index":95,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["success",{"_index":206,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["successmessag",{"_index":37,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/SystemAdminPanelComponent.html":{}}}],["support",{"_index":1320,"title":{},"body":{"modules.html":{}}}],["surnam",{"_index":748,"title":{},"body":{"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{},"components/TestPrintPreviewComponent.html":{}}}],["svg",{"_index":1321,"title":{},"body":{"modules.html":{}}}],["system",{"_index":270,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"components/RegisterComponent.html":{},"components/SubjectComponent.html":{},"components/SystemAdminPanelComponent.html":{},"components/TestPrintPreviewComponent.html":{},"components/VisibilityComponent.html":{}}}],["systemadmin",{"_index":653,"title":{},"body":{"components/HeaderComponent.html":{}}}],["systemadminpanel",{"_index":520,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["systemadminpanelcompon",{"_index":269,"title":{"components/SystemAdminPanelComponent.html":{}},"body":{"components/AddQuestionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"components/RegisterComponent.html":{},"components/SubjectComponent.html":{},"components/SystemAdminPanelComponent.html":{},"components/TestPrintPreviewComponent.html":{},"components/VisibilityComponent.html":{},"coverage.html":{},"overview.html":{}}}],["systemguard",{"_index":454,"title":{"injectables/SystemGuard.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/SystemGuard.html":{},"coverage.html":{},"overview.html":{}}}],["tabl",{"_index":891,"title":{},"body":{"components/PreviewTestsComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1231,"title":{},"body":{"coverage.html":{}}}],["tableview",{"_index":792,"title":{},"body":{"components/PreviewTestsComponent.html":{},"components/TestPrintPreviewComponent.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"components/RegisterComponent.html":{},"components/SubjectComponent.html":{},"components/SystemAdminPanelComponent.html":{},"components/TestPrintPreviewComponent.html":{},"components/VisibilityComponent.html":{}}}],["templateurl",{"_index":21,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"components/RegisterComponent.html":{},"components/SubjectComponent.html":{},"components/SystemAdminPanelComponent.html":{},"components/TestPrintPreviewComponent.html":{},"components/VisibilityComponent.html":{}}}],["test",{"_index":166,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"components/RegisterComponent.html":{},"components/SubjectComponent.html":{},"components/SystemAdminPanelComponent.html":{},"components/TestPrintPreviewComponent.html":{},"injectables/TestService.html":{},"components/VisibilityComponent.html":{},"index.html":{}}}],["test').pip",{"_index":1120,"title":{},"body":{"injectables/TestService.html":{}}}],["test'},{'nam",{"_index":254,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"components/RegisterComponent.html":{},"components/SubjectComponent.html":{},"components/SystemAdminPanelComponent.html":{},"components/TestPrintPreviewComponent.html":{},"components/VisibilityComponent.html":{}}}],["test).pip",{"_index":1119,"title":{},"body":{"injectables/TestService.html":{}}}],["test.compon",{"_index":486,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["test.component.t",{"_index":1207,"title":{},"body":{"coverage.html":{}}}],["test.creator.nam",{"_index":1101,"title":{},"body":{"components/TestPrintPreviewComponent.html":{}}}],["test.dat",{"_index":751,"title":{},"body":{"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{},"components/TestPrintPreviewComponent.html":{}}}],["test.group",{"_index":752,"title":{},"body":{"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{},"components/TestPrintPreviewComponent.html":{}}}],["test.not",{"_index":747,"title":{},"body":{"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{},"components/TestPrintPreviewComponent.html":{}}}],["test.testgroup",{"_index":750,"title":{},"body":{"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{},"components/TestPrintPreviewComponent.html":{}}}],["test.testquestions.length",{"_index":895,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["test/gener",{"_index":485,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["test/generatetest",{"_index":1118,"title":{},"body":{"injectables/TestService.html":{}}}],["test/pagination/limit",{"_index":1123,"title":{},"body":{"injectables/TestService.html":{}}}],["test/recenttest",{"_index":1122,"title":{},"body":{"injectables/TestService.html":{}}}],["test/testvalid",{"_index":1121,"title":{},"body":{"injectables/TestService.html":{}}}],["testgener",{"_index":1283,"title":{},"body":{"index.html":{}}}],["testpreview",{"_index":519,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["testprintpreviewcompon",{"_index":271,"title":{"components/TestPrintPreviewComponent.html":{}},"body":{"components/AddQuestionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"components/RegisterComponent.html":{},"components/SubjectComponent.html":{},"components/SystemAdminPanelComponent.html":{},"components/TestPrintPreviewComponent.html":{},"components/VisibilityComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tests'},{'nam",{"_index":264,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"components/RegisterComponent.html":{},"components/SubjectComponent.html":{},"components/SystemAdminPanelComponent.html":{},"components/TestPrintPreviewComponent.html":{},"components/VisibilityComponent.html":{}}}],["tests.compon",{"_index":495,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["tests.component.css",{"_index":786,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["tests.component.html",{"_index":787,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["tests.component.t",{"_index":785,"title":{},"body":{"components/PreviewTestsComponent.html":{},"coverage.html":{}}}],["tests.component.ts:11",{"_index":830,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["tests.component.ts:12",{"_index":833,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["tests.component.ts:126",{"_index":821,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["tests.component.ts:13",{"_index":825,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["tests.component.ts:134",{"_index":810,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["tests.component.ts:14",{"_index":826,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["tests.component.ts:15",{"_index":828,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["tests.component.ts:151",{"_index":819,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["tests.component.ts:16",{"_index":834,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["tests.component.ts:17",{"_index":823,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["tests.component.ts:18",{"_index":829,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["tests.component.ts:19",{"_index":832,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["tests.component.ts:20",{"_index":805,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["tests.component.ts:23",{"_index":812,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["tests.component.ts:31",{"_index":835,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["tests.component.ts:32",{"_index":836,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["tests.component.ts:33",{"_index":831,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["tests.component.ts:34",{"_index":808,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["tests.component.ts:37",{"_index":809,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["tests.component.ts:40",{"_index":807,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["tests.component.ts:43",{"_index":814,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["tests.component.ts:47",{"_index":827,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["tests.component.ts:49",{"_index":806,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["tests.component.ts:64",{"_index":817,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["tests.component.ts:72",{"_index":811,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["tests.component.ts:81",{"_index":816,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["tests.component.ts:85",{"_index":818,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["tests/preview",{"_index":494,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/PreviewTestsComponent.html":{},"coverage.html":{}}}],["testservc",{"_index":689,"title":{},"body":{"components/HelloComponent.html":{}}}],["testservic",{"_index":685,"title":{"injectables/TestService.html":{}},"body":{"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{},"injectables/TestService.html":{},"coverage.html":{}}}],["text",{"_index":235,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/TestPrintPreviewComponent.html":{}}}],["this._success.next(messag",{"_index":183,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["this._success.pip",{"_index":179,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["this._success.subscribe((messag",{"_index":177,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["this.admin",{"_index":667,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.alerttyp",{"_index":182,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["this.api_root",{"_index":370,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.apiservice.baseurl",{"_index":612,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.apiservice.settoken",{"_index":780,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.area",{"_index":1018,"title":{},"body":{"components/SubjectComponent.html":{}}}],["this.areas[0].areaid",{"_index":1019,"title":{},"body":{"components/SubjectComponent.html":{}}}],["this.areas[devicevalue].areaid",{"_index":1024,"title":{},"body":{"components/SubjectComponent.html":{}}}],["this.auth.gettoken",{"_index":1140,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["this.auth.isauthent",{"_index":905,"title":{},"body":{"injectables/PublicGuard.html":{}}}],["this.authenticationservice.login",{"_index":765,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authenticationservice.logout(userid",{"_index":438,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{}}}],["this.authservice.authstatus.next(this.authservice.isauthent",{"_index":435,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authservice.gettoken",{"_index":371,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.authservice.isadmin",{"_index":295,"title":{},"body":{"injectables/AdminGuard.html":{}}}],["this.authservice.isauthent",{"_index":550,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["this.authservice.issystemadmin",{"_index":296,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/SystemGuard.html":{}}}],["this.authservice.removelogindata",{"_index":628,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.authservice.settoken(response.token",{"_index":779,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authstatus.next(fals",{"_index":596,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authstatus.next(tru",{"_index":592,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.base64_marker.length",{"_index":224,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["this.changesuccessmessage('nem",{"_index":189,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["this.changesuccessmessage('pitanj",{"_index":203,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["this.changesuccessmessage('tekst",{"_index":207,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["this.click",{"_index":151,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["this.click.add(this.difficultylevelservice.get().subscribe((test",{"_index":169,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["this.click.add(this.questiontypeservice.get().subscribe((test",{"_index":173,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["this.click.add(this.statusservice.get().subscribe((test",{"_index":164,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["this.click.unsubscrib",{"_index":146,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["this.closeresult",{"_index":724,"title":{},"body":{"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{}}}],["this.count",{"_index":852,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["this.difficultylevel",{"_index":170,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["this.difficultylevels[0].difficultylevelid",{"_index":172,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["this.difficultylevels[devicevalue].difficultylevelid",{"_index":185,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["this.email",{"_index":766,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.error",{"_index":764,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.filt",{"_index":841,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["this.form.group",{"_index":148,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/SystemAdminPanelComponent.html":{}}}],["this.generatehttpparams(param",{"_index":378,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.generatehttpparams(queryparam",{"_index":383,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.getdismissreason(reason",{"_index":727,"title":{},"body":{"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{}}}],["this.getrol",{"_index":597,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getsystemrol",{"_index":599,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.gettoken",{"_index":595,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.head",{"_index":372,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.header.get('auth",{"_index":377,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http",{"_index":381,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.delet",{"_index":625,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.http.delete(this.api_root",{"_index":387,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.post",{"_index":611,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.http.post(this.api_root",{"_index":385,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.put(this.api_root",{"_index":386,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.httpclient.get(this.apiservice.baseurl",{"_index":537,"title":{},"body":{"injectables/AreaService.html":{},"injectables/DifficultyLevelService.html":{},"injectables/QuestionService.html":{},"injectables/QuestionTypeService.html":{},"injectables/StatusService.html":{},"injectables/SubjectService.html":{},"injectables/TestService.html":{},"injectables/VisibilityService.html":{},"injectables/YearOfStudyService.html":{}}}],["this.httpclient.post(this.apiservice.baseurl",{"_index":545,"title":{},"body":{"injectables/AreaService.html":{},"injectables/QuestionService.html":{},"injectables/SubjectService.html":{},"injectables/TestService.html":{},"injectables/YearOfStudyService.html":{}}}],["this.httpclient.put(this.apiservice.baseurl",{"_index":943,"title":{},"body":{"injectables/QuestionService.html":{},"injectables/SubjectService.html":{}}}],["this.id",{"_index":711,"title":{},"body":{"components/HelloComponent.html":{}}}],["this.indexi",{"_index":845,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["this.isadmin",{"_index":668,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.isload",{"_index":712,"title":{},"body":{"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{}}}],["this.issystemadmin",{"_index":670,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.modalservice.open(cont",{"_index":721,"title":{},"body":{"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{}}}],["this.nam",{"_index":671,"title":{},"body":{"components/HeaderComponent.html":{},"components/HelloComponent.html":{}}}],["this.pag",{"_index":849,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["this.password",{"_index":767,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.quest",{"_index":152,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["this.question.answ",{"_index":153,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["this.question.answer.answerpictur",{"_index":198,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["this.question.area",{"_index":157,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["this.question.area.areaid",{"_index":201,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["this.question.cr",{"_index":162,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["this.question.difficultylevel",{"_index":159,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["this.question.difficultylevel.difficultylevelid",{"_index":171,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["this.question.not",{"_index":187,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["this.question.questionimag",{"_index":226,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["this.question.questiontext",{"_index":154,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["this.question.questiontyp",{"_index":158,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["this.question.questiontype.questiontypeid",{"_index":175,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["this.question.statu",{"_index":160,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["this.question.status.statusid",{"_index":167,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["this.question.subject",{"_index":156,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["this.question.subject.subjectid",{"_index":199,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["this.question.vis",{"_index":155,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["this.questionform",{"_index":147,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["this.questionservice.addquestion(this.quest",{"_index":202,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["this.questiontyp",{"_index":174,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/SystemAdminPanelComponent.html":{}}}],["this.questiontype.quesstiontypenam",{"_index":1077,"title":{},"body":{"components/SystemAdminPanelComponent.html":{}}}],["this.questiontypeform",{"_index":1079,"title":{},"body":{"components/SystemAdminPanelComponent.html":{}}}],["this.questiontypes[0].questiontypeid",{"_index":176,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["this.questiontypes[devicevalue].questiontypeid",{"_index":184,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["this.questiontypesearch",{"_index":1076,"title":{},"body":{"components/SystemAdminPanelComponent.html":{}}}],["this.questiontypeservice.get().subscribe((r",{"_index":1078,"title":{},"body":{"components/SystemAdminPanelComponent.html":{}}}],["this.questiontypeshow",{"_index":1080,"title":{},"body":{"components/SystemAdminPanelComponent.html":{}}}],["this.router.navigate(['/addquest",{"_index":906,"title":{},"body":{"injectables/PublicGuard.html":{}}}],["this.router.navigate(['/login",{"_index":298,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AuthGuard.html":{},"injectables/SystemGuard.html":{}}}],["this.router.navigate(['/startpag",{"_index":781,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.settoken",{"_index":368,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.status",{"_index":165,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["this.statuses[0].statusid",{"_index":168,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["this.statuses[devicevalue].statusid",{"_index":186,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["this.subject",{"_index":188,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/PreviewTestsComponent.html":{},"components/SubjectComponent.html":{}}}],["this.subject.areaid",{"_index":192,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["this.subject.subjectid",{"_index":200,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["this.subjectchange.emit(this.subjectv",{"_index":1008,"title":{},"body":{"components/SubjectComponent.html":{}}}],["this.subjects.length",{"_index":1010,"title":{},"body":{"components/SubjectComponent.html":{}}}],["this.subjects.unshift({subjectnam",{"_index":838,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["this.subjects[0].subjectid",{"_index":1012,"title":{},"body":{"components/SubjectComponent.html":{}}}],["this.subjects[devicevalue].subjectid",{"_index":846,"title":{},"body":{"components/PreviewTestsComponent.html":{},"components/SubjectComponent.html":{}}}],["this.subjectservice.getareas(this.subjects[0].subjectid",{"_index":1016,"title":{},"body":{"components/SubjectComponent.html":{}}}],["this.subjectservice.getareas(this.subjects[devicevalue].subjectid",{"_index":1021,"title":{},"body":{"components/SubjectComponent.html":{}}}],["this.subjectservice.getareas(this.subjectval.subjectid",{"_index":1022,"title":{},"body":{"components/SubjectComponent.html":{}}}],["this.subjectservice.getyearofstudies(this.subjects[0].subjectid).subscribe((test",{"_index":1013,"title":{},"body":{"components/SubjectComponent.html":{}}}],["this.subjectservice.getyearofstudies(this.subjects[devicevalue].subjectid).subscribe((test",{"_index":1020,"title":{},"body":{"components/SubjectComponent.html":{}}}],["this.subjectv",{"_index":1006,"title":{},"body":{"components/SubjectComponent.html":{}}}],["this.subjectval.areaid",{"_index":1009,"title":{},"body":{"components/SubjectComponent.html":{}}}],["this.subjectval.subjectid",{"_index":1011,"title":{},"body":{"components/SubjectComponent.html":{}}}],["this.successmessag",{"_index":178,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["this.systemadmin",{"_index":669,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.tableview",{"_index":844,"title":{},"body":{"components/PreviewTestsComponent.html":{},"components/TestPrintPreviewComponent.html":{}}}],["this.test",{"_index":709,"title":{},"body":{"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{},"components/TestPrintPreviewComponent.html":{}}}],["this.testservce.recent(this.id).subscribe(r",{"_index":713,"title":{},"body":{"components/HelloComponent.html":{}}}],["this.testservice.getall(this.indexi",{"_index":847,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["this.token",{"_index":369,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.urlansw",{"_index":227,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["this.urlanswer.indexof(this.base64_mark",{"_index":228,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["this.urlanswer.substring(base64index",{"_index":229,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["this.urlquest",{"_index":220,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["this.urlquestion.indexof(this.base64_mark",{"_index":223,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["this.urlquestion.substring(base64index",{"_index":225,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["this.us",{"_index":840,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["this.user.id",{"_index":850,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["this.vis",{"_index":161,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/VisibilityComponent.html":{}}}],["this.visibilities[0].visibilityid",{"_index":1171,"title":{},"body":{"components/VisibilityComponent.html":{}}}],["this.visibilities[val].visibilityid",{"_index":1172,"title":{},"body":{"components/VisibilityComponent.html":{}}}],["this.visibilityservice.get().subscribe((test",{"_index":1169,"title":{},"body":{"components/VisibilityComponent.html":{}}}],["this.visibilityv",{"_index":1166,"title":{},"body":{"components/VisibilityComponent.html":{}}}],["this.visibilityval.visibilityid",{"_index":1170,"title":{},"body":{"components/VisibilityComponent.html":{}}}],["this.visibiltychange.emit(this.visibilityv",{"_index":1168,"title":{},"body":{"components/VisibilityComponent.html":{}}}],["this.withansw",{"_index":842,"title":{},"body":{"components/PreviewTestsComponent.html":{},"components/TestPrintPreviewComponent.html":{}}}],["this.withblankspac",{"_index":843,"title":{},"body":{"components/PreviewTestsComponent.html":{},"components/TestPrintPreviewComponent.html":{}}}],["this.yearofstudi",{"_index":1014,"title":{},"body":{"components/SubjectComponent.html":{}}}],["this.yearofstudies.length",{"_index":1015,"title":{},"body":{"components/SubjectComponent.html":{}}}],["this.yearofstudies[0].yearofstudyid).subscribe((r",{"_index":1017,"title":{},"body":{"components/SubjectComponent.html":{}}}],["this.yearofstudies[devicevalue].yearofstudyid).subscribe((r",{"_index":1023,"title":{},"body":{"components/SubjectComponent.html":{}}}],["throwerror",{"_index":366,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AreaService.html":{},"injectables/DifficultyLevelService.html":{},"injectables/QuestionService.html":{},"injectables/SubjectService.html":{},"injectables/TestService.html":{},"injectables/YearOfStudyService.html":{}}}],["time",{"_index":543,"title":{},"body":{"injectables/AreaService.html":{},"injectables/DifficultyLevelService.html":{},"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{},"injectables/QuestionService.html":{},"injectables/QuestionTypeService.html":{},"injectables/StatusService.html":{},"injectables/SubjectService.html":{},"injectables/TestService.html":{},"injectables/VisibilityService.html":{},"injectables/YearOfStudyService.html":{}}}],["titl",{"_index":425,"title":{},"body":{"components/AppComponent.html":{},"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{}}}],["today",{"_index":876,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["today.getd",{"_index":878,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["today.getfullyear",{"_index":883,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["today.getmonth",{"_index":880,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["tog",{"_index":196,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["token",{"_index":314,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{}}}],["tokeninterceptor",{"_index":455,"title":{"interceptors/TokenInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/TokenInterceptor.html":{},"overview.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"components/RegisterComponent.html":{},"components/SubjectComponent.html":{},"components/SystemAdminPanelComponent.html":{},"components/TestPrintPreviewComponent.html":{},"components/VisibilityComponent.html":{}}}],["tri",{"_index":418,"title":{},"body":{"injectables/ApiService.html":{}}}],["true",{"_index":297,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{},"injectables/PublicGuard.html":{},"injectables/SystemGuard.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":65,"title":{},"body":{"components/AddQuestionComponent.html":{},"injectables/AdminGuard.html":{},"classes/Answer.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"classes/DifficultyLevel.html":{},"injectables/DifficultyLevelService.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"injectables/PublicGuard.html":{},"classes/Question.html":{},"injectables/QuestionService.html":{},"classes/QuestionType.html":{},"injectables/QuestionTypeService.html":{},"classes/Status.html":{},"injectables/StatusService.html":{},"classes/Subject.html":{},"components/SubjectComponent.html":{},"injectables/SubjectService.html":{},"components/SystemAdminPanelComponent.html":{},"injectables/SystemGuard.html":{},"components/TestPrintPreviewComponent.html":{},"injectables/TestService.html":{},"interceptors/TokenInterceptor.html":{},"classes/Visibility.html":{},"components/VisibilityComponent.html":{},"injectables/VisibilityService.html":{},"classes/YearOfStudy.html":{},"injectables/YearOfStudyService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type.servic",{"_index":117,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/SystemAdminPanelComponent.html":{}}}],["type.service.t",{"_index":951,"title":{},"body":{"injectables/QuestionTypeService.html":{},"coverage.html":{}}}],["type.service.ts:12",{"_index":953,"title":{},"body":{"injectables/QuestionTypeService.html":{}}}],["type.service.ts:9",{"_index":952,"title":{},"body":{"injectables/QuestionTypeService.html":{}}}],["type.t",{"_index":945,"title":{},"body":{"classes/QuestionType.html":{},"coverage.html":{}}}],["type.ts:2",{"_index":949,"title":{},"body":{"classes/QuestionType.html":{}}}],["type.ts:3",{"_index":948,"title":{},"body":{"classes/QuestionType.html":{}}}],["undefin",{"_index":193,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"components/SubjectComponent.html":{}}}],["unit",{"_index":1309,"title":{},"body":{"index.html":{}}}],["unsuccess",{"_index":404,"title":{},"body":{"injectables/ApiService.html":{}}}],["up",{"_index":541,"title":{},"body":{"injectables/AreaService.html":{},"injectables/DifficultyLevelService.html":{},"injectables/QuestionService.html":{},"injectables/QuestionTypeService.html":{},"injectables/StatusService.html":{},"injectables/SubjectService.html":{},"injectables/TestService.html":{},"injectables/VisibilityService.html":{},"injectables/YearOfStudyService.html":{}}}],["updat",{"_index":1031,"title":{},"body":{"injectables/SubjectService.html":{}}}],["update(id",{"_index":1044,"title":{},"body":{"injectables/SubjectService.html":{}}}],["upload",{"_index":1248,"title":{},"body":{"dependencies.html":{}}}],["url",{"_index":337,"title":{},"body":{"injectables/ApiService.html":{}}}],["urlansw",{"_index":38,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["urlquest",{"_index":39,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["us",{"_index":1299,"title":{},"body":{"index.html":{}}}],["user",{"_index":412,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/PreviewTestsComponent.html":{},"injectables/PublicGuard.html":{}}}],["userid",{"_index":436,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{}}}],["usersubject",{"_index":979,"title":{},"body":{"components/SubjectComponent.html":{}}}],["uspjesno",{"_index":204,"title":{},"body":{"components/AddQuestionComponent.html":{}}}],["val",{"_index":1002,"title":{},"body":{"components/SubjectComponent.html":{},"components/VisibilityComponent.html":{}}}],["valid",{"_index":134,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/SystemAdminPanelComponent.html":{},"injectables/TestService.html":{}}}],["validate(test",{"_index":1114,"title":{},"body":{"injectables/TestService.html":{}}}],["validators.requir",{"_index":150,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/SystemAdminPanelComponent.html":{}}}],["valu",{"_index":88,"title":{},"body":{"components/AddQuestionComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"components/SystemAdminPanelComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":240,"title":{},"body":{"components/AddQuestionComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"components/RegisterComponent.html":{},"components/SubjectComponent.html":{},"components/SystemAdminPanelComponent.html":{},"components/TestPrintPreviewComponent.html":{},"components/VisibilityComponent.html":{}}}],["variabl",{"_index":580,"title":{"miscellaneous/variables.html":{}},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":1286,"title":{},"body":{"index.html":{}}}],["via",{"_index":1311,"title":{},"body":{"index.html":{}}}],["view",{"_index":892,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["visibilities[0].visibilitynam",{"_index":1173,"title":{},"body":{"components/VisibilityComponent.html":{}}}],["visibilities[1].visibilitynam",{"_index":1174,"title":{},"body":{"components/VisibilityComponent.html":{}}}],["visibility').pip",{"_index":1178,"title":{},"body":{"injectables/VisibilityService.html":{}}}],["visibility(v",{"_index":1167,"title":{},"body":{"components/VisibilityComponent.html":{}}}],["visibility.component.css",{"_index":1148,"title":{},"body":{"components/VisibilityComponent.html":{}}}],["visibility.component.html",{"_index":1149,"title":{},"body":{"components/VisibilityComponent.html":{}}}],["visibilitycompon",{"_index":274,"title":{"components/VisibilityComponent.html":{}},"body":{"components/AddQuestionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"components/RegisterComponent.html":{},"components/SubjectComponent.html":{},"components/SystemAdminPanelComponent.html":{},"components/TestPrintPreviewComponent.html":{},"components/VisibilityComponent.html":{},"coverage.html":{},"overview.html":{}}}],["visibilityid",{"_index":1143,"title":{},"body":{"classes/Visibility.html":{}}}],["visibilitynam",{"_index":1144,"title":{},"body":{"classes/Visibility.html":{}}}],["visibilityservic",{"_index":1154,"title":{"injectables/VisibilityService.html":{}},"body":{"components/VisibilityComponent.html":{},"injectables/VisibilityService.html":{},"coverage.html":{}}}],["visibilityv",{"_index":1150,"title":{},"body":{"components/VisibilityComponent.html":{}}}],["visibiltychang",{"_index":1152,"title":{},"body":{"components/VisibilityComponent.html":{}}}],["visibl",{"_index":40,"title":{"classes/Visibility.html":{}},"body":{"components/AddQuestionComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"classes/Question.html":{},"components/RegisterComponent.html":{},"components/SubjectComponent.html":{},"components/SystemAdminPanelComponent.html":{},"components/TestPrintPreviewComponent.html":{},"classes/Visibility.html":{},"components/VisibilityComponent.html":{},"coverage.html":{}}}],["void",{"_index":69,"title":{},"body":{"components/AddQuestionComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HelloComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTestsComponent.html":{},"injectables/QuestionService.html":{},"components/RegisterComponent.html":{},"components/SubjectComponent.html":{},"components/SystemAdminPanelComponent.html":{},"components/TestPrintPreviewComponent.html":{},"components/VisibilityComponent.html":{}}}],["went",{"_index":408,"title":{},"body":{"injectables/ApiService.html":{}}}],["window.open('http://localhost:4200/testpreview",{"_index":720,"title":{},"body":{"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{}}}],["window.print",{"_index":1100,"title":{},"body":{"components/TestPrintPreviewComponent.html":{}}}],["withansw",{"_index":793,"title":{},"body":{"components/PreviewTestsComponent.html":{},"components/TestPrintPreviewComponent.html":{}}}],["withblankspac",{"_index":794,"title":{},"body":{"components/PreviewTestsComponent.html":{},"components/TestPrintPreviewComponent.html":{}}}],["wrong",{"_index":409,"title":{},"body":{"injectables/ApiService.html":{}}}],["wysiwyg",{"_index":1245,"title":{},"body":{"dependencies.html":{}}}],["ye",{"_index":338,"title":{},"body":{"injectables/ApiService.html":{}}}],["year",{"_index":735,"title":{},"body":{"components/HelloComponent.html":{},"components/PreviewTestsComponent.html":{},"components/SubjectComponent.html":{}}}],["yearofstudi",{"_index":980,"title":{"classes/YearOfStudy.html":{}},"body":{"components/SubjectComponent.html":{},"classes/YearOfStudy.html":{},"injectables/YearOfStudyService.html":{},"coverage.html":{}}}],["yearofstudy').pip",{"_index":1192,"title":{},"body":{"injectables/YearOfStudyService.html":{}}}],["yearofstudy).pip",{"_index":1193,"title":{},"body":{"injectables/YearOfStudyService.html":{}}}],["yearofstudyid",{"_index":1181,"title":{},"body":{"classes/YearOfStudy.html":{}}}],["yearofstudynam",{"_index":1182,"title":{},"body":{"classes/YearOfStudy.html":{}}}],["yearofstudyservic",{"_index":1185,"title":{"injectables/YearOfStudyService.html":{}},"body":{"injectables/YearOfStudyService.html":{},"coverage.html":{}}}],["yyyi",{"_index":882,"title":{},"body":{"components/PreviewTestsComponent.html":{}}}],["zone.j",{"_index":1279,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":456,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AddQuestionComponent.html":{"url":"components/AddQuestionComponent.html","title":"component - AddQuestionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AddQuestionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/add-question/add-question.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-question\n            \n\n            \n                styleUrls\n                add-question.component.css\n            \n\n\n\n            \n                templateUrl\n                ./add-question.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _success\n                            \n                            \n                                alertType\n                            \n                            \n                                BASE64_MARKER\n                            \n                            \n                                click\n                            \n                            \n                                difficultyLevels\n                            \n                            \n                                question\n                            \n                            \n                                questionForm\n                            \n                            \n                                questionText\n                            \n                            \n                                questionTypes\n                            \n                            \n                                staticAlertClosed\n                            \n                            \n                                statuses\n                            \n                            \n                                subject\n                            \n                            \n                                successMessage\n                            \n                            \n                                urlAnswer\n                            \n                            \n                                urlQuestion\n                            \n                            \n                                visibility\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addQuestionButton\n                            \n                            \n                                changeSuccessMessage\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChangeDifficultyLevel\n                            \n                            \n                                onChangeQuestionType\n                            \n                            \n                                onChangeStatus\n                            \n                            \n                                onSelectAnswerImage\n                            \n                            \n                                onSelectQuestionImage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(statusService: StatusService, difficultyLevelService: DifficultyLevelService, questionTypeService: QuestionTypeService, questionService: QuestionService, form: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/add-question/add-question.component.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        statusService\n                                                  \n                                                        \n                                                                    StatusService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        difficultyLevelService\n                                                  \n                                                        \n                                                                    DifficultyLevelService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        questionTypeService\n                                                  \n                                                        \n                                                                    QuestionTypeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        questionService\n                                                  \n                                                        \n                                                                    QuestionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        form\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addQuestionButton\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addQuestionButton()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/add-question/add-question.component.ts:106\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeSuccessMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeSuccessMessage(message: , type: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/add-question/add-question.component.ts:91\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        type\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/add-question/add-question.component.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/add-question/add-question.component.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onChangeDifficultyLevel\n                            \n                            \n                        \n                    \n                \n                \n                    \nonChangeDifficultyLevel(deviceValue: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/add-question/add-question.component.ts:99\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deviceValue\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onChangeQuestionType\n                            \n                            \n                        \n                    \n                \n                \n                    \nonChangeQuestionType(deviceValue: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/add-question/add-question.component.ts:96\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deviceValue\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onChangeStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \nonChangeStatus(deviceValue: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/add-question/add-question.component.ts:102\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deviceValue\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSelectAnswerImage\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSelectAnswerImage(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/add-question/add-question.component.ts:138\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSelectQuestionImage\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSelectQuestionImage(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/add-question/add-question.component.ts:125\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _success\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _success:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/add-question/add-question.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            alertType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alertType:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/add-question/add-question.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            BASE64_MARKER\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        BASE64_MARKER:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ';base64,'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/add-question/add-question.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            click\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        click:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/add-question/add-question.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            difficultyLevels\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        difficultyLevels:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/add-question/add-question.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            question\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        question:     Question\n\n                    \n                \n                    \n                        \n                            Type :     Question\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/add-question/add-question.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            questionForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        questionForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/add-question/add-question.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            questionText\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        questionText:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/add-question/add-question.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            questionTypes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        questionTypes:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/add-question/add-question.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            staticAlertClosed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        staticAlertClosed:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/add-question/add-question.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            statuses\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        statuses:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/add-question/add-question.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subject:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/add-question/add-question.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            successMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        successMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/add-question/add-question.component.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            urlAnswer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        urlAnswer:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '../../../assets/Images/placeholderImage.png'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/add-question/add-question.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            urlQuestion\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        urlQuestion:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '../../../assets/Images/placeholderImage.png'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/add-question/add-question.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            visibility\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        visibility:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/add-question/add-question.component.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { StatusService } from '../../services/statusService/status.service';\nimport { DifficultyLevelService } from '../../services/difficultyLevelService/difficulty-level.service';\nimport { QuestionTypeService } from '../../services/questionTypeService/question-type.service';\nimport { QuestionService } from '../../services/questionService/question.service';\nimport { Area } from '../../shared/models/area';\nimport { Status } from '../../shared/models/status';\nimport { QuestionType } from '../../shared/models/question-type';\nimport { DifficultyLevel } from '../../shared/models/difficulty-level';\nimport { Visibility } from '../../shared/models/visibility';\nimport { Answer } from '../../shared/models/answer';\nimport { Question } from '../../shared/models/question';\nimport { moment } from 'ngx-bootstrap/chronos/test/chain';\nimport { Subscribable, Subscription, Subject } from 'rxjs';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MIN_LENGTH_VALIDATOR } from '@angular/forms/src/directives/validators';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { catchError, debounceTime } from 'rxjs/operators';\n\n\n@Component({\n  selector: 'app-add-question',\n  templateUrl: './add-question.component.html',\n  styleUrls: ['./add-question.component.css']\n})\n\nexport class AddQuestionComponent implements OnInit, OnDestroy {\n  statuses;\n  difficultyLevels;\n  questionTypes: any;\n  questionText;\n  question: Question;\n  subject: any;\n  visibility: any;\n  questionForm: FormGroup;\n  BASE64_MARKER = ';base64,';\n  urlQuestion = '../../../assets/Images/placeholderImage.png';\n  urlAnswer = '../../../assets/Images/placeholderImage.png';\n  alertType;\n\n  click: Subscription;\n  constructor(private statusService: StatusService, private difficultyLevelService: DifficultyLevelService,\n    private questionTypeService: QuestionTypeService, private questionService: QuestionService, private form: FormBuilder) {\n  }\n\n  ngOnDestroy() {\n    this.click.unsubscribe();\n  }\n  private _success = new Subject();\n\n  staticAlertClosed = false;\n  successMessage: string;\n\n  ngOnInit() {\n    this.questionForm = this.form.group({\n      points: ['', Validators.required]\n    });\n    this.click = new Subscription();\n    this.question = new Question();\n    this.question.answer = new Answer();\n    this.question.questionText = '';\n    this.question.visibility = new Visibility();\n    this.question.subject = {};\n    this.question.area = new Area();\n    this.question.questionType = new QuestionType();\n    this.question.difficultyLevel = new DifficultyLevel();\n    this.question.status = new Status();\n    this.visibility = {};\n    this.question.creator = JSON.parse(localStorage.getItem('user'));\n\n    this.click.add(this.statusService.get().subscribe((test) => {\n      this.statuses = test;\n      this.question.status.statusId = this.statuses[0].statusId;\n    }\n    ));\n    this.click.add(this.difficultyLevelService.get().subscribe((test) => {\n      this.difficultyLevels = test;\n      this.question.difficultyLevel.difficultyLevelId = this.difficultyLevels[0].difficultyLevelId;\n    }));\n    this.click.add(this.questionTypeService.get().subscribe((test) => {\n      this.questionTypes = test;\n      this.question.questionType.questionTypeId = this.questionTypes[0].questionTypeId;\n    }));\n\n    this._success.subscribe((message) => this.successMessage = message);\n    this._success.pipe(\n      debounceTime(3000)\n    ).subscribe(() => this.successMessage = null);\n\n  }\n  changeSuccessMessage(message, type) {\n    this.alertType = type;\n    this._success.next(message);\n  }\n\n  onChangeQuestionType(deviceValue) {\n    this.question.questionType.questionTypeId = this.questionTypes[deviceValue].questionTypeId;\n  }\n  onChangeDifficultyLevel(deviceValue) {\n    this.question.difficultyLevel.difficultyLevelId = this.difficultyLevels[deviceValue].difficultyLevelId;\n  }\n  onChangeStatus(deviceValue) {\n    this.question.status.statusId = this.statuses[deviceValue].statusId;\n  }\n\n  public addQuestionButton(): void {\n\n    this.question.note = '/';\n    if (!this.subject) {\n      this.changeSuccessMessage('Nemate predmeta!', 'danger');\n    } else if (this.subject.areaId == undefined) {\n      this.changeSuccessMessage('Nemate oblasti iz tog predemta!', 'danger');\n         } else if (this.question.questionText != '' || this.question.answer.answerPicture != undefined) {\n      this.question.subject.subjectId = this.subject.subjectId;\n      this.question.area.areaId = this.subject.areaId;\n      this.question.visibility = this.visibility;\n      this.questionService.addQuestion(this.question);\n      this.changeSuccessMessage('Pitanje uspjesno dodano!', 'success');\n\n    } else { this.changeSuccessMessage('Tekst pitanja ne moze biti prazno!', 'danger'); }\n\n\n  }\n\n  onSelectQuestionImage(event) {\n    if (event.target.files && event.target.files[0]) {\n      const reader = new FileReader();\n      reader.readAsDataURL(event.target.files[0]);\n      reader.onload = (event: any) => {\n        this.urlQuestion = event.target.result;\n        const base64Index = this.urlQuestion.indexOf(this.BASE64_MARKER) + this.BASE64_MARKER.length;\n        const base64 = this.urlQuestion.substring(base64Index);\n        this.question.questionImage = base64;\n      };\n    }\n  }\n\n  onSelectAnswerImage(event) {\n\n\n    if (event.target.files && event.target.files[0]) {\n      const reader = new FileReader();\n      reader.readAsDataURL(event.target.files[0]);\n      reader.onload = (event: any) => {\n        this.urlAnswer = event.target.result;\n        const base64Index = this.urlAnswer.indexOf(this.BASE64_MARKER) + this.BASE64_MARKER.length;\n        const base64 = this.urlAnswer.substring(base64Index);\n        this.question.answer.answerPicture = base64;\n      };\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n\n  \n    \n      {{ successMessage }}\n\n    \n  \n  \n\n    \n      \n          \n        \n\n      \n        \n          Question type\n          \n            {{item.quesstionTypeName}}\n          \n        \n\n        \n          Number of points\n          \n        \n      \n\n      \n\n        \n          Difficulty level\n          \n            {{item.level}}\n          \n        \n\n        \n          Status\n          \n            {{item.statusName}}\n          \n        \n\n      \n\n      \n        \n          Visibility\n        \n        \n          \n        \n\n      \n\n    \n    \n      \n    \n  \n\n\n\n  \n    \n      \n        \n          Question text\n          \n          \n        \n        \n          \n          \n        \n      \n    \n  \n\n\n\n  \n    \n      \n        \n           Question answer\n           \n        \n        \n          \n          \n\n        \n      \n    \n\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ successMessage }}                                                            Question type                      {{item.quesstionTypeName}}                                    Number of points                                                Difficulty level                      {{item.level}}                                    Status                      {{item.statusName}}                                                Visibility                                                                                          Question text                                                                                                           Question answer                                                                   '\n    var COMPONENTS = [{'name': 'AddQuestionComponent', 'selector': 'app-add-question'},{'name': 'AdminPanelComponent', 'selector': 'app-admin-panel'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditQuestionComponent', 'selector': 'app-edit-question'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GenerateTestComponent', 'selector': 'app-generate-test'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HelloComponent', 'selector': 'app-hello'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PreviewQuestionComponent', 'selector': 'app-preview-question'},{'name': 'PreviewTestsComponent', 'selector': 'app-preview-tests'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SubjectComponent', 'selector': 'app-subject'},{'name': 'SystemAdminPanelComponent', 'selector': 'app-system-admin-panel'},{'name': 'TestPrintPreviewComponent', 'selector': 'app-test-print-preview'},{'name': 'VisibilityComponent', 'selector': 'app-visibility'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddQuestionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminGuard.html":{"url":"injectables/AdminGuard.html","title":"injectable - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/guards/admin.guard.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/admin.guard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/guards/admin.guard.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Router, RouterStateSnapshot } from '@angular/router';\nimport { AuthService } from '../services/authService/auth.service';\n\n\n@Injectable()\nexport class AdminGuard {\n\n    constructor(private router: Router, private authService: AuthService) {}\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n        if (this.authService.isAdmin() || this.authService.isSystemAdmin()) {\n            return true;\n        } else {\n            this.router.navigate(['/login']);\n            return false;\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Answer.html":{"url":"classes/Answer.html","title":"class - Answer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Answer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/answer.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                answerPicture\n                            \n                            \n                                answerText\n                            \n                            \n                                createdDate\n                            \n                            \n                                modifiedDate\n                            \n                            \n                                note\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            answerPicture\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        answerPicture:     String\n\n                    \n                \n                    \n                        \n                            Type :     String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/answer.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            answerText\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        answerText:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/answer.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdDate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        createdDate:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/answer.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modifiedDate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modifiedDate:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/answer.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            note\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        note:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/answer.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Answer {\n    answerText: any;\n    answerPicture: String;\n    createdDate: any;\n    modifiedDate: any;\n    note: any;\n  }\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiService.html":{"url":"injectables/ApiService.html","title":"injectable - ApiService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/apiService/api.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                API_ROOT\n                            \n                            \n                                    Private\n                                header\n                            \n                            \n                                    Private\n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                generateHttpParams\n                            \n                            \n                                get\n                            \n                            \n                                    Public\n                                handleError\n                            \n                            \n                                httpDelete\n                            \n                            \n                                post\n                            \n                            \n                                put\n                            \n                            \n                                setToken\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    baseUrl\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/apiService/api.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            generateHttpParams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        generateHttpParams(params: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/apiService/api.service.ts:110\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     HttpParams\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget(url: string, params?: any, fullResponse: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/apiService/api.service.ts:48\n                            \n                        \n\n\n                \n                    \n                            Send get request on API\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        params\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        fullResponse\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleError(error: HttpErrorResponse)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/apiService/api.service.ts:122\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    HttpErrorResponse\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            httpDelete\n                            \n                            \n                        \n                    \n                \n                \n                    \nhttpDelete(url: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/apiService/api.service.ts:106\n                            \n                        \n\n\n                \n                    \n                            Send delete request on API\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            post\n                            \n                            \n                        \n                    \n                \n                \n                    \npost(url: string, body: string, additionalOptions: literal type, queryParams?: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/apiService/api.service.ts:75\n                            \n                        \n\n\n                \n                    \n                            Send post request on API\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        body\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        additionalOptions\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                                \n                                                        queryParams\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            put\n                            \n                            \n                        \n                    \n                \n                \n                    \nput(url: string, body: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/apiService/api.service.ts:97\n                            \n                        \n\n\n                \n                    \n                            Send put request on API\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        body\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setToken\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetToken()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/apiService/api.service.ts:33\n                            \n                        \n\n\n                \n                    \n                            Set Auth token on header request\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            API_ROOT\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        API_ROOT:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:60007/api/'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/apiService/api.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            header\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        header:     HttpHeaders\n\n                    \n                \n                    \n                        \n                            Type :     HttpHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/apiService/api.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            token\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        token:     string | null\n\n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/apiService/api.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        baseUrl\n                    \n                \n\n                \n                    \n                        getbaseUrl()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/apiService/api.service.ts:26\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {HttpClient, HttpErrorResponse, HttpHeaders, HttpParams} from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport { AuthService } from '../authService/auth.service';\nimport { throwError} from 'rxjs/internal/observable/throwError';\n\n\n\n@Injectable()\nexport class ApiService {\n\n  private API_ROOT = 'http://localhost:60007/api/';\n  private token: string | null;\n  private header: HttpHeaders;\n\n  constructor(private authService: AuthService, private http: HttpClient) {\n\n    this.setToken();\n\n    if (!this.token) {\n      return;\n    }\n  }\n\n  get baseUrl(): string {\n    return this.API_ROOT;\n  }\n\n  /**\n   * Set Auth token on header request\n   */\n  setToken(): void {\n\n    this.token = this.authService.getToken();\n    this.header = new HttpHeaders()\n      .set('Content-Type', 'application/json')\n      .set('Authorization', 'Bearer ' + this.token as any);\n  }\n\n  /**\n   * Send get request on API\n   *\n   * @param url\n   * @param params\n   * @param fullResponse\n   */\n  get(url: string, params?: any, fullResponse = false): Observable {\n\n    if (!this.header.get('Auth')) {\n      this.setToken();\n    }\n\n    const httpParams: HttpParams = this.generateHttpParams(params);\n\n    let options: {} = Object.assign({}, { headers: this.header, params: httpParams });\n    if (fullResponse) {\n      options = Object.assign({}, options, {\n        observe: 'response'\n      });\n    }\n\n    return this.http\n      .get(this.API_ROOT + url, options);\n  }\n\n  /**\n   * Send post request on API\n   *\n   * @param url\n   * @param body\n   * @param additionalOptions\n   * @param queryParams\n   */\n  post(url: string, body: string, additionalOptions: {} = {}, queryParams?: {}): Observable {\n\n    let options: {} = Object.assign({}, { headers: this.header });\n    if (additionalOptions) {\n      options = Object.assign({}, options, additionalOptions);\n    }\n\n    const httpParams: HttpParams = this.generateHttpParams(queryParams);\n\n    Object.assign(options, {\n      params: httpParams\n    });\n\n    return this.http.post(this.API_ROOT + url, body, options);\n  }\n\n  /**\n   * Send put request on API\n   * @param url\n   * @param body\n   * @returns {Observable}\n   */\n  put(url: string, body: string): Observable {\n    return this.http.put(this.API_ROOT + url, body, { headers: this.header });\n  }\n\n  /**\n   * Send delete request on API\n   * @param url\n   * @returns {Observable}\n   */\n  httpDelete(url: string): Observable {\n    return this.http.delete(this.API_ROOT + url, { headers: this.header });\n  }\n\n  private generateHttpParams(params: any): HttpParams {\n    let httpParams: HttpParams = new HttpParams();\n    if (params) {\n      Object.keys(params)\n        .forEach((paramName: string) => {\n          if (params[paramName]) {\n            httpParams = httpParams.append(paramName, params[paramName]);\n          }\n        });\n    }\n    return httpParams;\n  }\n  public handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n\n    // return an observable with a user-facing error message\n    return throwError(\n      'Something bad happened; please try again later.');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logOut\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logOut\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authService:     AuthService\n\n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'app'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import{Component}from'@angular/core';\nimport { StatusService } from './services/statusService/status.service';\nimport { AuthService } from './services/authService/auth.service';\nimport { AuthenticationService } from './services/authenticationService/authentication.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  /**\n   *\n   */\n  title = 'app';\n  constructor(public authService: AuthService,\n              private authenticationService: AuthenticationService) {}\n\n  ngOnInit(): void {\n    this.authService.authStatus.next(this.authService.isAuthenticated());\n  }\n\n  logOut(): void {\n    const userId = JSON.parse(localStorage.getItem('user')).id;\n    this.authenticationService.logout(userId);\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddQuestionComponent', 'selector': 'app-add-question'},{'name': 'AdminPanelComponent', 'selector': 'app-admin-panel'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditQuestionComponent', 'selector': 'app-edit-question'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GenerateTestComponent', 'selector': 'app-generate-test'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HelloComponent', 'selector': 'app-hello'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PreviewQuestionComponent', 'selector': 'app-preview-question'},{'name': 'PreviewTestsComponent', 'selector': 'app-preview-tests'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SubjectComponent', 'selector': 'app-subject'},{'name': 'SystemAdminPanelComponent', 'selector': 'app-system-admin-panel'},{'name': 'TestPrintPreviewComponent', 'selector': 'app-test-print-preview'},{'name': 'VisibilityComponent', 'selector': 'app-visibility'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAddQuestionComponent\n\nAddQuestionComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddQuestionComponent->AppModule\n\n\n\n\n\nAdminPanelComponent\n\nAdminPanelComponent\n\nAppModule -->\n\nAdminPanelComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nEditQuestionComponent\n\nEditQuestionComponent\n\nAppModule -->\n\nEditQuestionComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nGenerateTestComponent\n\nGenerateTestComponent\n\nAppModule -->\n\nGenerateTestComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nHelloComponent\n\nHelloComponent\n\nAppModule -->\n\nHelloComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nPreviewQuestionComponent\n\nPreviewQuestionComponent\n\nAppModule -->\n\nPreviewQuestionComponent->AppModule\n\n\n\n\n\nPreviewTestsComponent\n\nPreviewTestsComponent\n\nAppModule -->\n\nPreviewTestsComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nSubjectComponent\n\nSubjectComponent\n\nAppModule -->\n\nSubjectComponent->AppModule\n\n\n\n\n\nSystemAdminPanelComponent\n\nSystemAdminPanelComponent\n\nAppModule -->\n\nSystemAdminPanelComponent->AppModule\n\n\n\n\n\nTestPrintPreviewComponent\n\nTestPrintPreviewComponent\n\nAppModule -->\n\nTestPrintPreviewComponent->AppModule\n\n\n\n\n\nVisibilityComponent\n\nVisibilityComponent\n\nAppModule -->\n\nVisibilityComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAdminGuard\n\nAdminGuard\n\nAppModule -->\n\nAdminGuard->AppModule\n\n\n\n\n\nApiService\n\nApiService\n\nAppModule -->\n\nApiService->AppModule\n\n\n\n\n\nAuthGuard\n\nAuthGuard\n\nAppModule -->\n\nAuthGuard->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAppModule -->\n\nAuthenticationService->AppModule\n\n\n\n\n\nPublicGuard\n\nPublicGuard\n\nAppModule -->\n\nPublicGuard->AppModule\n\n\n\n\n\nQuestionService\n\nQuestionService\n\nAppModule -->\n\nQuestionService->AppModule\n\n\n\n\n\nStatusService\n\nStatusService\n\nAppModule -->\n\nStatusService->AppModule\n\n\n\n\n\nSubjectService\n\nSubjectService\n\nAppModule -->\n\nSubjectService->AppModule\n\n\n\n\n\nSystemGuard\n\nSystemGuard\n\nAppModule -->\n\nSystemGuard->AppModule\n\n\n\n\n\nTokenInterceptor\n\nTokenInterceptor\n\nAppModule -->\n\nTokenInterceptor->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AddQuestionComponent\n                            \n                            \n                                AdminPanelComponent\n                            \n                            \n                                AppComponent\n                            \n                            \n                                EditQuestionComponent\n                            \n                            \n                                FooterComponent\n                            \n                            \n                                GenerateTestComponent\n                            \n                            \n                                HeaderComponent\n                            \n                            \n                                HelloComponent\n                            \n                            \n                                LoginComponent\n                            \n                            \n                                PreviewQuestionComponent\n                            \n                            \n                                PreviewTestsComponent\n                            \n                            \n                                RegisterComponent\n                            \n                            \n                                SubjectComponent\n                            \n                            \n                                SystemAdminPanelComponent\n                            \n                            \n                                TestPrintPreviewComponent\n                            \n                            \n                                VisibilityComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AdminGuard\n                            \n                            \n                                     ApiService\n                            \n                            \n                                     AuthGuard\n                            \n                            \n                                     AuthService\n                            \n                            \n                                     AuthenticationService\n                            \n                            \n                                     PublicGuard\n                            \n                            \n                                     QuestionService\n                            \n                            \n                                     StatusService\n                            \n                            \n                                     SubjectService\n                            \n                            \n                                     SystemGuard\n                            \n                            \n                                     TokenInterceptor\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppRoutingModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, LOCALE_ID } from '@angular/core';\n\nimport { StatusService } from './services/statusService/status.service';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AppRoutingModule } from './/app-routing.module';\nimport { AddQuestionComponent } from './components/add-question/add-question.component';\n\nimport { NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport { SubjectComponent } from './components/add-question/add-question-subcomponents/subject/subject.component';\nimport { VisibilityComponent } from './components/add-question/add-question-subcomponents/visibility/visibility.component';\nimport { FormsModule, ReactiveFormsModule  } from '@angular/forms'; // \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AddQuestionComponent } from './components/add-question/add-question.component';\nimport { SubjectComponent } from './components/add-question/add-question-subcomponents/subject/subject.component';\nimport { PreviewQuestionComponent } from './components/preview-question/preview-question.component';\nimport { GenerateTestComponent } from './components/generate-test/generate-test.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { AdminPanelComponent } from './components/admin-panel/admin-panel.component';\nimport { PublicGuard } from './guards/public.guard';\nimport { AuthGuard } from './guards/auth.guard';\nimport {PreviewTestsComponent} from './components/preview-tests/preview-tests.component';\nimport { HelloComponent } from './components/hello/hello.component';\nimport { AdminGuard } from './guards/admin.guard';\nimport { SystemGuard } from './guards/system.guard';\nimport { SystemAdminPanelComponent } from './components/system-admin-panel/system-admin-panel.component';\n\nimport { EditQuestionComponent } from './components/edit-question/edit-question.component';\nimport { TestPrintPreviewComponent } from './components/test-print-preview/test-print-preview.component';\n\nconst routes: Routes = [\n\n  { path: '', redirectTo: '/login', pathMatch: 'full', canActivate: [PublicGuard] },\n  { path: 'login', component: LoginComponent, canActivate: [PublicGuard] },\n  { path: 'register', component: RegisterComponent, canActivate: [PublicGuard] },\n  { path: 'GenerateTest', component: GenerateTestComponent, canActivate: [AuthGuard] },\n  { path: 'AddQuestion', component: AddQuestionComponent, canActivate: [AuthGuard] },\n  { path: 'AdminPanel', component: AdminPanelComponent , canActivate: [AdminGuard] },\n  { path: 'PreviewQuestion', component: PreviewQuestionComponent, canActivate: [AuthGuard] },\n  { path: 'PreviewTests', component: PreviewTestsComponent, canActivate: [AuthGuard] },\n  { path: '', redirectTo: '/StartPage', pathMatch: 'full', canActivate: [AuthGuard] },\n  { path: 'StartPage', component: HelloComponent, canActivate: [AuthGuard] },\n  { path: 'EditQuestion', component: EditQuestionComponent, canActivate: [AuthGuard] },\n  { path: 'testPreview', component: TestPrintPreviewComponent, canActivate: [AuthGuard] },\n  { path: 'systemAdminPanel', component: SystemAdminPanelComponent, canActivate: [SystemGuard] },\n\n\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n\n})\nexport class AppRoutingModule { }\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Area.html":{"url":"classes/Area.html","title":"class - Area","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Area\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/area.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                areaId\n                            \n                            \n                                areaName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            areaId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        areaId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/area.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            areaName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        areaName:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/area.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Area {\n    areaId: number;\n    areaName: any;\n  }\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AreaService.html":{"url":"injectables/AreaService.html","title":"injectable - AreaService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AreaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/areaService/area.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                get\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/areaService/area.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                    ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            add\n                            \n                            \n                        \n                    \n                \n                \n                    \nadd(area: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/areaService/area.service.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        area\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/areaService/area.service.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {catchError, retry} from 'rxjs/operators';\nimport {throwError} from 'rxjs/internal/observable/throwError';\nimport {ApiService} from '../apiService/api.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AreaService {\n\n  constructor(private httpClient: HttpClient, private apiService: ApiService) {}\n  get() {\n    return this.httpClient.get(this.apiService.baseUrl + 'areas').pipe(\n      retry(0), // retry a failed request up to 3 times\n      catchError(this.apiService.handleError)\n    );\n  }\n  add(area) {\n    return this.httpClient.post(this.apiService.baseUrl + 'areas', area).pipe(\n      retry(0), // retry a failed request up to 3 times\n      catchError(this.apiService.handleError)\n    ).subscribe();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuard.html":{"url":"injectables/AuthGuard.html","title":"injectable - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/guards/auth.guard.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/auth.guard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/guards/auth.guard.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Router, RouterStateSnapshot } from '@angular/router';\nimport { AuthService } from '../services/authService/auth.service';\n\n\n@Injectable()\nexport class AuthGuard {\n\n    constructor(private router: Router, private authService: AuthService) {}\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n\n        if (this.authService.isAuthenticated()) {\n            return true;\n        } else {\n            this.router.navigate(['/login']);\n            return false;\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authService/auth.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authStatus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRole\n                            \n                            \n                                getSystemRole\n                            \n                            \n                                getToken\n                            \n                            \n                                isAdmin\n                            \n                            \n                                isAuthenticated\n                            \n                            \n                                isSystemAdmin\n                            \n                            \n                                removeLoginData\n                            \n                            \n                                setToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/authService/auth.service.ts:13\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRole\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRole()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/authService/auth.service.ts:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSystemRole\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetSystemRole()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/authService/auth.service.ts:89\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getToken\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetToken()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/authService/auth.service.ts:49\n                            \n                        \n\n\n                \n                    \n                            Retrieve token from localStorage\n\n\n                            \n                            \n                            \n                                Returns :     string | null\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAdmin\n                            \n                            \n                        \n                    \n                \n                \n                    \nisAdmin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/authService/auth.service.ts:68\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAuthenticated\n                            \n                            \n                        \n                    \n                \n                \n                    \nisAuthenticated()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/authService/auth.service.ts:59\n                            \n                        \n\n\n                \n                    \n                            Check if token is expired or exist.\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSystemAdmin\n                            \n                            \n                        \n                    \n                \n                \n                    \nisSystemAdmin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/authService/auth.service.ts:81\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeLoginData\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveLoginData()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/authService/auth.service.ts:39\n                            \n                        \n\n\n                \n                    \n                            Remove login data from localStorage\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setToken\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetToken(token: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/authService/auth.service.ts:23\n                            \n                        \n\n\n                \n                    \n                            Set token in localStorage\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authStatus:     BehaviorSubject\n\n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authService/auth.service.ts:13\n                            \n                        \n\n                \n                    \n                        Token status reactive variable.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport 'rxjs/add/observable/of';\n\n@Injectable()\nexport class AuthService {\n\n  /**\n   * Token status reactive variable.\n   *\n   * @type {EventEmitter}\n   */\n  authStatus: BehaviorSubject = new BehaviorSubject(false);\n\n  constructor() {}\n\n  /**\n   * Set token in localStorage\n   *\n   * @param token\n   * @returns {string}\n   */\n  setToken(token: string): string {\n\n    // delete any jwt in local storage\n    if (localStorage.getItem('jwt')) {\n      localStorage.removeItem('jwt');\n    }\n\n    // set token, save user and emit new auth status\n    localStorage.setItem('jwt', token);\n    this.authStatus.next(true);\n    return token;\n  }\n\n  /**\n   * Remove login data from localStorage\n   */\n  removeLoginData(): void {\n\n    localStorage.clear();\n    sessionStorage.clear();\n  }\n\n  /**\n   * Retrieve token from localStorage\n   * @returns {string}\n   */\n  getToken(): string | null {\n    return localStorage.getItem('jwt');\n  }\n\n\n  /**\n   * Check if token is expired or exist.\n   *\n   * @returns {boolean}\n   */\n  isAuthenticated(): boolean {\n\n    if (!this.getToken()) {\n      this.authStatus.next(false);\n      return false;\n    }\n    this.authStatus.next(true);\n    return true;\n  }\n  isAdmin(): boolean {\n    if (this.getRole() == false) {\n      this.authStatus.next(false);\n      return false;\n    }\n    this.authStatus.next(true);\n    return true;\n  }\n  getRole() {\n    if (JSON.parse(localStorage.getItem('roleAppAdmin')) == null) { return false; }\n    return JSON.parse(localStorage.getItem('roleAppAdmin'));\n\n  }\n  isSystemAdmin(): boolean {\n    if (this.getSystemRole() == false) {\n      this.authStatus.next(false);\n      return false;\n    }\n    this.authStatus.next(true);\n    return true;\n  }\n  getSystemRole() {\n    if (JSON.parse(localStorage.getItem('roleSystemAdmin')) == null) { return false; }\n    return JSON.parse(localStorage.getItem('roleSystemAdmin'));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authenticationService/authentication.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, apiService: ApiService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/authenticationService/authentication.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                    ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(request: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/authenticationService/authentication.service.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout(id: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/authenticationService/authentication.service.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            register\n                            \n                            \n                        \n                    \n                \n                \n                    \nregister(request: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/authenticationService/authentication.service.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ApiService } from '../apiService/api.service';\nimport { AuthService } from '../authService/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  constructor(private http: HttpClient,\n              private apiService: ApiService,\n              private authService: AuthService) { }\n\n  login(request) {\n    return this.http.post( this.apiService.baseUrl + 'auth/Login', {\n      email: request.email,\n      password: request.password\n    });\n  }\n  register(request) {\n    return this.http.post( this.apiService.baseUrl + 'auth/register', {\n      name: request.name,\n      email: request.email,\n      password: request.password,\n      confirmPassword: request.confirmPassword,\n      subjects: request.subjects,\n      appAdmin: request.appAdmin\n    });\n  }\n  logout(id): void {\n\n    this.http.delete( this.apiService.baseUrl + 'auth/' + id, id).subscribe();\n    console.log('df');\n    this.authService.removeLoginData();\n    location.reload();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DifficultyLevel.html":{"url":"classes/DifficultyLevel.html","title":"class - DifficultyLevel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DifficultyLevel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/difficulty-level.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                difficultyLevelId\n                            \n                            \n                                level\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            difficultyLevelId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        difficultyLevelId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/difficulty-level.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            level\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        level:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/difficulty-level.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DifficultyLevel {\n    difficultyLevelId: number;\n    level: any;\n  }\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DifficultyLevelService.html":{"url":"injectables/DifficultyLevelService.html","title":"injectable - DifficultyLevelService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DifficultyLevelService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/difficultyLevelService/difficulty-level.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/difficultyLevelService/difficulty-level.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                    ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/difficultyLevelService/difficulty-level.service.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {catchError, retry} from 'rxjs/operators';\nimport {throwError} from 'rxjs/internal/observable/throwError';\nimport {ApiService} from '../apiService/api.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DifficultyLevelService {\n\n  constructor(private httpClient: HttpClient, private apiService: ApiService ) {}\n  get() {\n    return this.httpClient.get(this.apiService.baseUrl + 'difficultyLevel').pipe(\n      retry(0), // retry a failed request up to 3 times\n      catchError(this.apiService.handleError)\n    );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/footer/footer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                styleUrls\n                footer.component.css\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/footer/footer.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/footer/footer.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n  \n      \n\n       \n         -->\n       \n      \n      \n      \n      © 2018 OSB Sarajevo\n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        -->                               © 2018 OSB Sarajevo  '\n    var COMPONENTS = [{'name': 'AddQuestionComponent', 'selector': 'app-add-question'},{'name': 'AdminPanelComponent', 'selector': 'app-admin-panel'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditQuestionComponent', 'selector': 'app-edit-question'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GenerateTestComponent', 'selector': 'app-generate-test'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HelloComponent', 'selector': 'app-hello'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PreviewQuestionComponent', 'selector': 'app-preview-question'},{'name': 'PreviewTestsComponent', 'selector': 'app-preview-tests'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SubjectComponent', 'selector': 'app-subject'},{'name': 'SystemAdminPanelComponent', 'selector': 'app-system-admin-panel'},{'name': 'TestPrintPreviewComponent', 'selector': 'app-test-print-preview'},{'name': 'VisibilityComponent', 'selector': 'app-visibility'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/header/header.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                styleUrls\n                header.component.css\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                admin\n                            \n                            \n                                language\n                            \n                            \n                                name\n                            \n                            \n                                systemAdmin\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isAdmin\n                            \n                            \n                                isSystemAdmin\n                            \n                            \n                                logOut\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/header/header.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAdmin\n                            \n                            \n                        \n                    \n                \n                \n                    \nisAdmin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/header/header.component.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSystemAdmin\n                            \n                            \n                        \n                    \n                \n                \n                    \nisSystemAdmin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/header/header.component.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logOut\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/header/header.component.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/header/header.component.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            admin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        admin:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/header/header.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            language\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        language:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'en'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/header/header.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/header/header.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            systemAdmin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        systemAdmin:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/header/header.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Output } from '@angular/core';\nimport { AuthService } from '../services/authService/auth.service';\nimport { Route, Router } from '@angular/router';\nimport { EventEmitter } from 'protractor';\nimport { AuthenticationService } from '../services/authenticationService/authentication.service';\nimport { registerLocaleData } from '@angular/common';\n\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent  implements OnInit {\n  admin = false;\n  systemAdmin = false;\n  language = 'en';\n  name = '';\n  constructor(private authenticationService: AuthenticationService) { }\n\n  ngOnInit() {\n    this.admin = this.isAdmin();\n    this.systemAdmin = this.isSystemAdmin();\n    this.name = JSON.parse(localStorage.getItem('user')).name;\n  }\n  logOut() {\n    const userId = JSON.parse(localStorage.getItem('user')).id;\n\n    this.authenticationService.logout(userId);\n  }\n  isSystemAdmin() {\n    return JSON.parse(localStorage.getItem('roleSystemAdmin'));\n  }\n  isAdmin() {\n    return JSON.parse(localStorage.getItem('roleAppAdmin'));\n  }\n\n}\n\n    \n\n    \n        \n  Test Generator\n  \n    \n  \n\n  \n    \n      \n        Home\n      \n      \n        Add Question\n      \n\n      \n        Preview Question\n      \n\n      \n        Generate Test\n      \n      \n        Preview Tests\n      \n      \n        \n          Admin Panel\n        \n      \n      \n          \n            System Admin Panel\n          \n        \n\n    \n    \n        \n          \n            {{name}}\n        \n      \n        \n          Log out\n          \n        \n      \n    \n   \n  \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Test Generator                            Home                    Add Question                    Preview Question                    Generate Test                    Preview Tests                              Admin Panel                                          System Admin Panel                                                        {{name}}                                Log out                                   '\n    var COMPONENTS = [{'name': 'AddQuestionComponent', 'selector': 'app-add-question'},{'name': 'AdminPanelComponent', 'selector': 'app-admin-panel'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditQuestionComponent', 'selector': 'app-edit-question'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GenerateTestComponent', 'selector': 'app-generate-test'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HelloComponent', 'selector': 'app-hello'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PreviewQuestionComponent', 'selector': 'app-preview-question'},{'name': 'PreviewTestsComponent', 'selector': 'app-preview-tests'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SubjectComponent', 'selector': 'app-subject'},{'name': 'SystemAdminPanelComponent', 'selector': 'app-system-admin-panel'},{'name': 'TestPrintPreviewComponent', 'selector': 'app-test-print-preview'},{'name': 'VisibilityComponent', 'selector': 'app-visibility'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HelloComponent.html":{"url":"components/HelloComponent.html","title":"component - HelloComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HelloComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/hello/hello.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-hello\n            \n\n            \n                styleUrls\n                hello.component.css\n            \n\n\n\n            \n                templateUrl\n                ./hello.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                closeResult\n                            \n                            \n                                id\n                            \n                            \n                                isLoading\n                            \n                            \n                                name\n                            \n                            \n                                test\n                            \n                            \n                                tests\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getDismissReason\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                preview\n                            \n                            \n                                printPdf\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(testServce: TestService, modalService: NgbModal)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/hello/hello.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        testServce\n                                                  \n                                                        \n                                                                    TestService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getDismissReason\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getDismissReason(reason: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/hello/hello.component.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reason\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/hello/hello.component.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            preview\n                            \n                            \n                        \n                    \n                \n                \n                    \npreview(content: , test: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/hello/hello.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        content\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        test\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            printPdf\n                            \n                            \n                        \n                    \n                \n                \n                    \nprintPdf(item: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/hello/hello.component.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeResult\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        closeResult:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/hello/hello.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/hello/hello.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isLoading:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/hello/hello.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/hello/hello.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            test\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        test:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/hello/hello.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tests\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tests:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/hello/hello.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { TestService } from '../../services/testService/test.service';\nimport {ModalDismissReasons, NgbModal} from '@ng-bootstrap/ng-bootstrap';\nimport { AppComponent } from '../../app.component';\nimport { debounce, debounceTime } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-hello',\n  templateUrl: './hello.component.html',\n  styleUrls: ['./hello.component.css']\n})\nexport class HelloComponent implements OnInit {\n  name: any;\n  id: any;\n  tests;\n  test: any;\n  closeResult;\n  constructor( private testServce: TestService, private modalService: NgbModal) { }\n  isLoading;\n\n\n  ngOnInit() {\n    this.tests = [];\n    this.name = JSON.parse(localStorage.getItem('name'));\n    this.id  = JSON.parse(localStorage.getItem('user')).id;\n    this.isLoading = true;\n    this.testServce.recent(this.id).subscribe(res => {\n      this.isLoading = false;\n      this.tests = res;\n    });\n  }\n  printPdf(item) {\n    sessionStorage.setItem('withAnswers', JSON.stringify(false));\n    sessionStorage.setItem('withBlankSpace', JSON.stringify(false));\n    sessionStorage.setItem('test', JSON.stringify(item));\n    window.open('http://localhost:4200/testPreview');\n  }\n  preview(content, test) {\n    this.test = test;\n    this.modalService.open(content, {size: 'lg'}).result.then((result) => {\n      this.closeResult = `Closed with: ${result}`;\n    }, (reason) => {\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n  }\n  private getDismissReason(reason: any): string {\n\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return  `with: ${reason}`;\n    }\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n\n  \n      \n  \n\n    \n        \n            Recent tests\n          \n      \n        \n          \n            Number\n            Subject\n            Test Title\n            Group\n            Test Group\n            Year Of Study\n            Test Date\n            Created Date\n            Preview\n\n          \n          \n            \n                No tests!\n            \n          \n          \n             {{(i+1)}}\n             {{item.subject.subjectName}}\n             {{item.note}}\n             {{item.group}} \n             {{item.testGroup}} \n\n             {{item.yearOfStudy.yearOfStudyName}} \n             {{item.date}} \n\n             {{item.createdDate.substring(0,16)}} \n            \n\n            \n              \n            \n            \n           \n                    \n            \n            \n           \n          \n\n        \n      \n    \n  \n\n  \n      \n        \n            \n                \n                    &times;\n                  \n             \n          \n            \n              {{test.note}}\n            \n          \n          \n              \n                  Name and Surname: _______________\n                \n              \n                  Test Group: {{test.testGroup}}\n              \n    \n          \n          \n              \n                  Date: {{test.date}}\n              \n              \n                  Group: {{test.group}}\n              \n          \n        \n      \n      \n        \n          \n            0\">\n            \n              \n                \n                  \n                    Question {{i+1}}.\n                  \n                  \n                    [{{item.question.points}}]\n    \n                  \n                  \n    \n    \n                  \n                \n                \n    \n                  \n                    \n                  \n    \n                  \n                    \n                  \n                \n              \n            \n          \n          \n        \n      \n      \n      \n    \n    \n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  Recent tests                                              Number            Subject            Test Title            Group            Test Group            Year Of Study            Test Date            Created Date            Preview                                                No tests!                                             {{(i+1)}}             {{item.subject.subjectName}}             {{item.note}}             {{item.group}}              {{item.testGroup}}              {{item.yearOfStudy.yearOfStudyName}}              {{item.date}}              {{item.createdDate.substring(0,16)}}                                                                                                                                                                                                                               ×                                                                   {{test.note}}                                                                Name and Surname: _______________                                                Test Group: {{test.testGroup}}                                                                      Date: {{test.date}}                                              Group: {{test.group}}                                                                          0\">                                                                                Question {{i+1}}.                                                        [{{item.question.points}}]                                                                                                                                                                                                                                                                                                                          '\n    var COMPONENTS = [{'name': 'AddQuestionComponent', 'selector': 'app-add-question'},{'name': 'AdminPanelComponent', 'selector': 'app-admin-panel'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditQuestionComponent', 'selector': 'app-edit-question'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GenerateTestComponent', 'selector': 'app-generate-test'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HelloComponent', 'selector': 'app-hello'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PreviewQuestionComponent', 'selector': 'app-preview-question'},{'name': 'PreviewTestsComponent', 'selector': 'app-preview-tests'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SubjectComponent', 'selector': 'app-subject'},{'name': 'SystemAdminPanelComponent', 'selector': 'app-system-admin-panel'},{'name': 'TestPrintPreviewComponent', 'selector': 'app-test-print-preview'},{'name': 'VisibilityComponent', 'selector': 'app-visibility'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HelloComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                errors\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthenticationService, authService: AuthService, apiService: ApiService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login/login.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                    ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errors\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errors:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { AuthenticationService } from '../../services/authenticationService/authentication.service';\nimport { AuthService } from '../../services/authService/auth.service';\nimport { ApiService } from '../../services/apiService/api.service';\nimport { catchError } from 'rxjs/operators';\nimport { ObservableInput } from 'rxjs';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\n  email = '';\n  password = '';\n  errors: any;\n\n  constructor(private authenticationService: AuthenticationService,\n              private authService: AuthService,\n              private apiService: ApiService,\n              private router: Router) {}\n\n  login(): void {\n\n    this.errors = undefined;\n    this.authenticationService.login({\n      email: this.email,\n      password: this.password\n    })\n     .subscribe((response) => {\n      localStorage.setItem('subjects' , JSON.stringify(response.userSubjects.subjects));\n        localStorage.setItem('name' , JSON.stringify(response.userSubjects.name));\n        localStorage.setItem('user' , JSON.stringify(response.userSubjects));\n        localStorage.setItem('roleAppAdmin' , JSON.stringify(response.roleAppAdmin));\n        localStorage.setItem('roleSystemAdmin' , JSON.stringify(response.roleSystemAdmin));\n\n\n        this.authService.setToken(response.token);\n        this.apiService.setToken();\n        this.router.navigate(['/StartPage']);\n      }, (err: HttpErrorResponse) => {\n        this.errors = err.error.message;\n      });\n\n  }\n}\n\n    \n\n    \n        \n    \n    \n      \n        \n      \n      \n        Email\n        \n      \n      \n        Password\n        \n      \n            \n      \n         Log in\n      \n      \n          \n            {{errors}}\n          \n      \n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Email                            Password                                         Log in                                  {{errors}}                    '\n    var COMPONENTS = [{'name': 'AddQuestionComponent', 'selector': 'app-add-question'},{'name': 'AdminPanelComponent', 'selector': 'app-admin-panel'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditQuestionComponent', 'selector': 'app-edit-question'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GenerateTestComponent', 'selector': 'app-generate-test'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HelloComponent', 'selector': 'app-hello'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PreviewQuestionComponent', 'selector': 'app-preview-question'},{'name': 'PreviewTestsComponent', 'selector': 'app-preview-tests'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SubjectComponent', 'selector': 'app-subject'},{'name': 'SystemAdminPanelComponent', 'selector': 'app-system-admin-panel'},{'name': 'TestPrintPreviewComponent', 'selector': 'app-test-print-preview'},{'name': 'VisibilityComponent', 'selector': 'app-visibility'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PreviewTestsComponent.html":{"url":"components/PreviewTestsComponent.html","title":"component - PreviewTestsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PreviewTestsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/preview-tests/preview-tests.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-preview-tests\n            \n\n            \n                styleUrls\n                preview-tests.component.css\n            \n\n\n\n            \n                templateUrl\n                ./preview-tests.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                closeResult\n                            \n                            \n                                count\n                            \n                            \n                                helpVariable\n                            \n                            \n                                indexi\n                            \n                            \n                                isLoading\n                            \n                            \n                                page\n                            \n                            \n                                question\n                            \n                            \n                                subjects\n                            \n                            \n                                tableView\n                            \n                            \n                                test\n                            \n                            \n                                tests\n                            \n                            \n                                user\n                            \n                            \n                                withAnswers\n                            \n                            \n                                withBlankSpace\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filter\n                            \n                            \n                                generateTableTest\n                            \n                            \n                                generateWithAnswers\n                            \n                            \n                                generateWithBlankSpace\n                            \n                            \n                                getDate\n                            \n                            \n                                    Private\n                                getDismissReason\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChangeSubject\n                            \n                            \n                                pageChanged\n                            \n                            \n                                preview\n                            \n                            \n                                printPdf\n                            \n                            \n                                repeat\n                            \n                            \n                                repeatTest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(testService: TestService, modalService: NgbModal)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/preview-tests/preview-tests.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        testService\n                                                  \n                                                        \n                                                                    TestService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filter\n                            \n                            \n                        \n                    \n                \n                \n                    \nfilter()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/preview-tests/preview-tests.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            generateTableTest\n                            \n                            \n                        \n                    \n                \n                \n                    \ngenerateTableTest()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/preview-tests/preview-tests.component.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            generateWithAnswers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngenerateWithAnswers()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/preview-tests/preview-tests.component.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            generateWithBlankSpace\n                            \n                            \n                        \n                    \n                \n                \n                    \ngenerateWithBlankSpace()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/preview-tests/preview-tests.component.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDate\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/preview-tests/preview-tests.component.ts:134\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getDismissReason\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getDismissReason(reason: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/preview-tests/preview-tests.component.ts:72\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reason\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/preview-tests/preview-tests.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onChangeSubject\n                            \n                            \n                        \n                    \n                \n                \n                    \nonChangeSubject(deviceValue: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/preview-tests/preview-tests.component.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deviceValue\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pageChanged\n                            \n                            \n                        \n                    \n                \n                \n                    \npageChanged(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/preview-tests/preview-tests.component.ts:81\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            preview\n                            \n                            \n                        \n                    \n                \n                \n                    \npreview(content: , test: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/preview-tests/preview-tests.component.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        content\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        test\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            printPdf\n                            \n                            \n                        \n                    \n                \n                \n                    \nprintPdf(item: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/preview-tests/preview-tests.component.ts:85\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            repeat\n                            \n                            \n                        \n                    \n                \n                \n                    \nrepeat()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/preview-tests/preview-tests.component.ts:151\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            repeatTest\n                            \n                            \n                        \n                    \n                \n                \n                    \nrepeatTest(repeatContent: , item: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/preview-tests/preview-tests.component.ts:126\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repeatContent\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeResult\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        closeResult:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/preview-tests/preview-tests.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            count\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        count:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/preview-tests/preview-tests.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpVariable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        helpVariable:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/preview-tests/preview-tests.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            indexi\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        indexi:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/preview-tests/preview-tests.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isLoading:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/preview-tests/preview-tests.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            page\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        page:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/preview-tests/preview-tests.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            question\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        question:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/preview-tests/preview-tests.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subjects\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subjects:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/preview-tests/preview-tests.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tableView\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tableView:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/preview-tests/preview-tests.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            test\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        test:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/preview-tests/preview-tests.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tests\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tests:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/preview-tests/preview-tests.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/preview-tests/preview-tests.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            withAnswers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        withAnswers:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/preview-tests/preview-tests.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            withBlankSpace\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        withBlankSpace:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/preview-tests/preview-tests.component.ts:32\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {TestService} from '../../services/testService/test.service';\nimport {ModalDismissReasons, NgbModal} from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-preview-tests',\n  templateUrl: './preview-tests.component.html',\n  styleUrls: ['./preview-tests.component.css']\n})\nexport class PreviewTestsComponent implements OnInit {\n  subjects: any;\n  tests: any;\n  count = 1;\n  indexi = 0;\n  page = 1;\n  user;\n  closeResult: string;\n  question: any;\n  test: any;\n  helpVariable: any;\n  constructor(private testService: TestService, private modalService: NgbModal) { }\n\n  ngOnInit() {\n    this.subjects = JSON.parse(localStorage.getItem('subjects'));\n    this.subjects.unshift({subjectName: 'All', areas: [] , subjectId: 0} );\n    this.user = JSON.parse(localStorage.getItem('user'));\n    this.tests = [];\n    this.filter();\n\n  }\n  withAnswers = false;\n  withBlankSpace = false;\n  tableView = false;\n  generateWithAnswers() {\n    this.withAnswers = !this.withAnswers;\n}\ngenerateWithBlankSpace() {\n  this.withBlankSpace = !this.withBlankSpace;\n}\ngenerateTableTest() {\n  this.tableView = !this.tableView;\n}\n  onChangeSubject(deviceValue) {\n    this.indexi = this.subjects[deviceValue].subjectId;\n    this.filter();\n  }\n   isLoading;\n\n  filter() {\n    this.isLoading = true;\n\n    this.tests = [];\n    this.testService.getAll(this.indexi, 10, (this.page - 1) * 10, this.user.id)\n      .subscribe((response: any) => {\n        this.isLoading = false;\n\n        this.tests = response.data;\n        this.count = response.count;\n        if (this.tests == undefined) { this.tests = []; }\n\n        }\n      );\n  }\n  preview(content, test) {\n    this.test = test;\n    this.modalService.open(content, {size: 'lg'}).result.then((result) => {\n      this.closeResult = `Closed with: ${result}`;\n    }, (reason) => {\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n  }\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return  `with: ${reason}`;\n    }\n  }\n  pageChanged(event) {\n    this.page = event;\n    this.filter();\n  }\n  printPdf(item) {\n    sessionStorage.setItem('withAnswers', JSON.stringify(this.withAnswers));\n    sessionStorage.setItem('withBlankSpace', JSON.stringify(this.withBlankSpace));\n    sessionStorage.setItem('tableView', JSON.stringify(this.tableView));\n    sessionStorage.setItem('test', JSON.stringify(item));\n    window.open('http://localhost:4200/testPreview');\n\n/*\n    const doc = new jsPDF('p', 'mm','a4');\n    doc.setFont('Arial');\n    doc.setFontSize(22);\n    doc.text(item.subject.subjectName,90,30);\n    doc.setFontSize(14);\n    doc.line(30,32,190,32);\n    doc.text(\"Grupa:\"+item.group,160,40);\n    doc.text(\"Test grupa: \"+item.testGroup,160,50);\n    var s:string;\n    s='';\n    for (let i = 0; i Pitanje \"+ (i+1) +\".\"+item.testQuestions[i].question.points+\"\"+item.testQuestions[i].question.questionText;\n    }\n    doc.fromHTML(s,30,60);\n   s=\"\";\n   var j=0;\n   for (let i = 0; i  {\n      this.closeResult = `Closed with: ${result}`;\n    }, (reason) => {\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n  }\n  getDate() {\n    const today = new Date();\n    const dd = today.getDate();\n    const mm = today.getMonth() + 1; //January is 0!\n    const yyyy = today.getFullYear();\n    let m = mm.toString();\n    let d = dd.toString();\n    if (dd \n    \n\n    \n        \n\n  \n        \n            \n        \n    \n      \n          \n              Tests \n\n            \n            \n                \n                    \n                    Generate with answers\n                  \n                    \n                    Leave blank space for answer\n                \n                      \n                      Table view\n                \n                 \n                \n        \n          \n            \n               \n              \n                 0\">\n                  \n                    {{item.subjectName}}\n                  \n                \n      \n            \n\n            \n              Number\n              Subject\n              Test Title\n              Group\n              Test Group\n              Year Of Study\n              Test Date\n              Created Date\n              Preview\n              \n\n            \n            \n              \n                  No tests!\n              \n            \n            \n               {{((page-1)*10)+(i+1)}}\n               {{item.subject.subjectName}}\n               {{item.note}}\n               {{item.group}} \n               {{item.testGroup}} \n\n               {{item.yearOfStudy.yearOfStudyName}} \n               {{item.date}} \n\n               {{item.createdDate.substring(0,16)}} \n              \n\n              \n                \n              \n              \n             \n                      \n              \n              \n              \n                  \n                    Repeat Test\n                  \n              \n            \n\n          \n          \n        \n      \n    \n  \n\n\n  \n    \n    \n       \n          \n              &times;\n            \n       \n      \n        \n          {{test.note}}\n        \n      \n      \n          \n              Name and Surname: _______________\n            \n          \n              Test Group: {{test.testGroup}}\n          \n\n      \n      \n          \n              Date: {{test.date}}\n          \n          \n              Group: {{test.group}}\n          \n      \n    \n  \n  \n    \n      \n        0\">\n        \n          \n            \n              \n                Question {{i+1}}.\n              \n              \n                [{{item.question.points}}]\n\n              \n              \n\n\n              \n            \n            \n\n              \n                \n              \n\n              \n                \n              \n            \n          \n        \n      \n      \n    \n  \n  \n  \n\n\n\n\n    \n      \n        \n                \n\n                \n                \n\n        \n        \n            \n                Name and Surname: _______________\n              \n            \n           \n            \n                Test Group:\n                \n            \n\n        \n        \n          \n              Date:                 \n          \n            \n                Group:\n                  \n            \n\n        \n      \n    \n    \n      \n          0\">\n\n        \n\n          \n            \n                \n                    \n                        Question {{i+1}}.\n                    \n                    \n                      [{{item.question.points}}]\n\n                    \n\n                \n              \n\n          \n            \n          \n          \n            \n          \n        \n          \n          \n        \n        \n          Number of questions :  {{test.testQuestions.length}}\n        \n      \n      \n    \n    \n       Repeat\n    \n  \n\n\n\n\n\n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                Tests                                                                                 Generate with answers                                                          Leave blank space for answer                                                            Table view                                                                                                                             0\">                                      {{item.subjectName}}                                                                              Number              Subject              Test Title              Group              Test Group              Year Of Study              Test Date              Created Date              Preview                                                                      No tests!                                                     {{((page-1)*10)+(i+1)}}               {{item.subject.subjectName}}               {{item.note}}               {{item.group}}                {{item.testGroup}}                {{item.yearOfStudy.yearOfStudyName}}                {{item.date}}                {{item.createdDate.substring(0,16)}}                                                                                                                                                                                            Repeat Test                                                                                                                             ×                                           {{test.note}}                                            Name and Surname: _______________                                    Test Group: {{test.testGroup}}                                              Date: {{test.date}}                                  Group: {{test.group}}                                          0\">                                                            Question {{i+1}}.                                            [{{item.question.points}}]                                                                                                                                                                                                                                                                                                                            Name and Surname: _______________                                                                 Test Group:                                                                    Date:                                                       Group:                                                                    0\">                                                                                          Question {{i+1}}.                                                              [{{item.question.points}}]                                                                                                                                                                        Number of questions :  {{test.testQuestions.length}}                                   Repeat      '\n    var COMPONENTS = [{'name': 'AddQuestionComponent', 'selector': 'app-add-question'},{'name': 'AdminPanelComponent', 'selector': 'app-admin-panel'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditQuestionComponent', 'selector': 'app-edit-question'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GenerateTestComponent', 'selector': 'app-generate-test'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HelloComponent', 'selector': 'app-hello'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PreviewQuestionComponent', 'selector': 'app-preview-question'},{'name': 'PreviewTestsComponent', 'selector': 'app-preview-tests'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SubjectComponent', 'selector': 'app-subject'},{'name': 'SystemAdminPanelComponent', 'selector': 'app-system-admin-panel'},{'name': 'TestPrintPreviewComponent', 'selector': 'app-test-print-preview'},{'name': 'VisibilityComponent', 'selector': 'app-visibility'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PreviewTestsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PublicGuard.html":{"url":"injectables/PublicGuard.html","title":"injectable - PublicGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PublicGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/guards/public.guard.ts\n        \n\n            \n                Description\n            \n            \n                This guard prevents user from accessing pages like login when he is already\nauthenticated\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/public.guard.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate(route: ActivatedRouteSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/guards/public.guard.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Router } from '@angular/router';\nimport { AuthService } from '../services/authService/auth.service';\n\n\n/**\n * This guard prevents user from accessing pages like login when he is already\n * authenticated\n */\n@Injectable()\nexport class PublicGuard {\n    constructor(private router: Router,\n                private auth: AuthService) {}\n\n    canActivate(route: ActivatedRouteSnapshot): boolean {\n\n        if (this.auth.isAuthenticated()) {\n\n            this.router.navigate(['/AddQuestion']);\n            return false;\n        } else if (!this.auth.isAuthenticated()) {\n            return true;\n        }\n        return !this.auth.isAuthenticated();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Question.html":{"url":"classes/Question.html","title":"class - Question","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Question\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/question.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                answer\n                            \n                            \n                                area\n                            \n                            \n                                createdDate\n                            \n                            \n                                creator\n                            \n                            \n                                difficultyLevel\n                            \n                            \n                                modifiedDate\n                            \n                            \n                                note\n                            \n                            \n                                points\n                            \n                            \n                                questionImage\n                            \n                            \n                                questionText\n                            \n                            \n                                questionType\n                            \n                            \n                                status\n                            \n                            \n                                subject\n                            \n                            \n                                visibility\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            answer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        answer:     Answer\n\n                    \n                \n                    \n                        \n                            Type :     Answer\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/question.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            area\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        area:     Area\n\n                    \n                \n                    \n                        \n                            Type :     Area\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/question.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdDate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        createdDate:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/question.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            creator\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        creator:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/question.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            difficultyLevel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        difficultyLevel:     DifficultyLevel\n\n                    \n                \n                    \n                        \n                            Type :     DifficultyLevel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/question.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modifiedDate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modifiedDate:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/question.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            note\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        note:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/question.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            points\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        points:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/question.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            questionImage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        questionImage:     String\n\n                    \n                \n                    \n                        \n                            Type :     String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/question.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            questionText\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        questionText:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/question.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            questionType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        questionType:     QuestionType\n\n                    \n                \n                    \n                        \n                            Type :     QuestionType\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/question.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        status:     Status\n\n                    \n                \n                    \n                        \n                            Type :     Status\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/question.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subject:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/question.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            visibility\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        visibility:     Visibility\n\n                    \n                \n                    \n                        \n                            Type :     Visibility\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/question.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Area } from '../../shared/models/area';\nimport { Status } from '../../shared/models/status';\nimport { QuestionType } from '../../shared/models/question-type';\nimport { DifficultyLevel } from '../../shared/models/difficulty-level';\nimport { Visibility } from '../../shared/models/visibility';\nimport { Answer } from '../../shared/models/answer';\nimport { Subject } from '../../shared/models/subject';\n\n\nexport class Question {\n  questionText: any;\n  createdDate: any;\n  modifiedDate: any;\n  questionType: QuestionType;\n  difficultyLevel: DifficultyLevel;\n  area: Area;\n  note: any;\n  status: Status;\n  subject: any;\n  visibility: Visibility;\n  answer: Answer;\n  questionImage: String;\n  points: number;\n  creator: any;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuestionService.html":{"url":"injectables/QuestionService.html","title":"injectable - QuestionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  QuestionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/questionService/question.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addQuestion\n                            \n                            \n                                editQuestion\n                            \n                            \n                                get\n                            \n                            \n                                getAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/questionService/question.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                    ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addQuestion\n                            \n                            \n                        \n                    \n                \n                \n                    \naddQuestion(question: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/questionService/question.service.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        question\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editQuestion\n                            \n                            \n                        \n                    \n                \n                \n                    \neditQuestion(id: , question: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/questionService/question.service.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        question\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/questionService/question.service.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAll\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAll(indexi: Array, limit: number, skip: number, id: String)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/questionService/question.service.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        indexi\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        limit\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        skip\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        id\n                                                        \n                                                                    String\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {HttpClient, HttpErrorResponse, HttpHeaders} from '@angular/common/http';\nimport {Body} from '@angular/http/src/body';\nimport {catchError, retry} from 'rxjs/operators';\nimport {throwError} from 'rxjs/internal/observable/throwError';\nimport {ApiService} from '../apiService/api.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuestionService {\n\n  constructor(private httpClient: HttpClient, private apiService: ApiService ) {}\n  get() {\n    return this.httpClient.get(this.apiService.baseUrl + 'question').pipe(\n      retry(0), // retry a failed request up to 3 times\n      catchError(this.apiService.handleError)\n    );\n  }\n\n  getAll(indexi: Array, limit: number, skip: number, id: String) {\n    return this.httpClient.post(this.apiService.baseUrl + 'question/pagination/limit=' + limit + '&skip=' + skip + '&id=' + id, indexi).pipe(\n      retry(0), // retry a failed request up to 3 times\n      catchError(this.apiService.handleError)\n    );\n  }\n\n  addQuestion (question) {\n    this.httpClient.post(this.apiService.baseUrl + 'question', question).pipe(\n      retry(0), // retry a failed request up to 3 times\n      catchError(this.apiService.handleError)\n    ).subscribe();\n  }\n  editQuestion (id, question) {\n    this.httpClient.put(this.apiService.baseUrl + 'question/' + id, question).pipe(\n      retry(0), // retry a failed request up to 3 times\n      catchError(this.apiService.handleError)\n    ).subscribe();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QuestionType.html":{"url":"classes/QuestionType.html","title":"class - QuestionType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QuestionType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/question-type.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                quesstionTypeName\n                            \n                            \n                                questionTypeId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            quesstionTypeName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        quesstionTypeName:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/question-type.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            questionTypeId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        questionTypeId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/question-type.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class QuestionType {\n    questionTypeId: number;\n    quesstionTypeName: any;\n  }\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuestionTypeService.html":{"url":"injectables/QuestionTypeService.html","title":"injectable - QuestionTypeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  QuestionTypeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/questionTypeService/question-type.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/questionTypeService/question-type.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                    ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/questionTypeService/question-type.service.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {catchError, retry} from 'rxjs/operators';\nimport { ApiService } from '../apiService/api.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuestionTypeService {\n\n  constructor(private httpClient: HttpClient, private apiService: ApiService ) {}\n  get() {\n    return this.httpClient.get(this.apiService.baseUrl + 'questionType').pipe(\n      retry(0), // retry a failed request up to 3 times\n      catchError(this.apiService.handleError)\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/register/register.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                register.component.css\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/register/register.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/register/register.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddQuestionComponent', 'selector': 'app-add-question'},{'name': 'AdminPanelComponent', 'selector': 'app-admin-panel'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditQuestionComponent', 'selector': 'app-edit-question'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GenerateTestComponent', 'selector': 'app-generate-test'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HelloComponent', 'selector': 'app-hello'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PreviewQuestionComponent', 'selector': 'app-preview-question'},{'name': 'PreviewTestsComponent', 'selector': 'app-preview-tests'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SubjectComponent', 'selector': 'app-subject'},{'name': 'SystemAdminPanelComponent', 'selector': 'app-system-admin-panel'},{'name': 'TestPrintPreviewComponent', 'selector': 'app-test-print-preview'},{'name': 'VisibilityComponent', 'selector': 'app-visibility'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Status.html":{"url":"classes/Status.html","title":"class - Status","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Status\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/status.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                statusId\n                            \n                            \n                                statusName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            statusId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        statusId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/status.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            statusName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        statusName:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/status.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Status {\n    statusId: number;\n    statusName: any;\n  }\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StatusService.html":{"url":"injectables/StatusService.html","title":"injectable - StatusService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StatusService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/statusService/status.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/statusService/status.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                    ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/statusService/status.service.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable }from'@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {catchError, retry} from 'rxjs/operators';\nimport { ApiService } from '../apiService/api.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StatusService {\n\n  constructor(private httpClient: HttpClient, private apiService: ApiService ) {}\n  get() {\n    return this.httpClient.get(this.apiService.baseUrl + 'status').pipe(\n      retry(0), // retry a failed request up to 3 times\n      catchError(this.apiService.handleError)\n    );\n  }\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Subject.html":{"url":"classes/Subject.html","title":"class - Subject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Subject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/subject.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                areaId\n                            \n                            \n                                subjectId\n                            \n                            \n                                subjectName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            areaId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        areaId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/subject.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subjectId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subjectId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/subject.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subjectName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subjectName:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/subject.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Subject {\n    subjectId: number;\n    subjectName: any;\n    areaId: number;\n  }\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SubjectComponent.html":{"url":"components/SubjectComponent.html","title":"component - SubjectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SubjectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/add-question/add-question-subcomponents/subject/subject.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-subject\n            \n\n            \n                styleUrls\n                subject.component.css\n            \n\n\n\n            \n                templateUrl\n                ./subject.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                areas\n                            \n                            \n                                subjects\n                            \n                            \n                                subjectVal\n                            \n                            \n                                userSubjects\n                            \n                            \n                                yearOfStudies\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onChangeArea\n                            \n                            \n                                onChangeSubject\n                            \n                            \n                                onChangeYearOfStudy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                subject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                subjectChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    subject\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(subjectService: SubjectService, areaService: AreaService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/add-question/add-question-subcomponents/subject/subject.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        subjectService\n                                                  \n                                                        \n                                                                    SubjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        areaService\n                                                  \n                                                        \n                                                                    AreaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        subject\n                    \n                    \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/add-question/add-question-subcomponents/subject/subject.component.ts:19\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        subjectChange\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/add-question/add-question-subcomponents/subject/subject.component.ts:17\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/add-question/add-question-subcomponents/subject/subject.component.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onChangeArea\n                            \n                            \n                        \n                    \n                \n                \n                    \nonChangeArea(deviceValue: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/add-question/add-question-subcomponents/subject/subject.component.ts:70\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deviceValue\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onChangeSubject\n                            \n                            \n                        \n                    \n                \n                \n                    \nonChangeSubject(deviceValue: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/add-question/add-question-subcomponents/subject/subject.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deviceValue\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onChangeYearOfStudy\n                            \n                            \n                        \n                    \n                \n                \n                    \nonChangeYearOfStudy(deviceValue: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/add-question/add-question-subcomponents/subject/subject.component.ts:65\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deviceValue\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            areas\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        areas:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/add-question/add-question-subcomponents/subject/subject.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subjects\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subjects:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/add-question/add-question-subcomponents/subject/subject.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subjectVal\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subjectVal:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/add-question/add-question-subcomponents/subject/subject.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userSubjects\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userSubjects:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/add-question/add-question-subcomponents/subject/subject.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            yearOfStudies\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        yearOfStudies:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/add-question/add-question-subcomponents/subject/subject.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        subject\n                    \n                \n\n\n                \n                    \n                        setsubject(val: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/add-question/add-question-subcomponents/subject/subject.component.ts:22\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { SubjectService } from '../../../../services/subjectService/subject.service';\nimport { AreaService } from '../../../../services/areaService/area.service';\nimport { LoginComponent } from '../../../login/login.component';\n\n@Component({\n  selector: 'app-subject',\n  templateUrl: './subject.component.html',\n  styleUrls: ['./subject.component.css']\n})\nexport class SubjectComponent implements OnInit {\n  subjects;\n  areas;\n  yearOfStudies: any;\n  subjectVal: any;\n  userSubjects;\n  @Output() subjectChange = new EventEmitter();\n  @Input()\n  get subject() {\n    return this.subjectVal;\n  }\n  set subject(val) {\n    this.subjectVal = val;\n    this.subjectChange.emit(this.subjectVal);\n  }\n\n  constructor(private subjectService: SubjectService, private areaService: AreaService) { }\n\n  ngOnInit() {\n    this.subjects = JSON.parse(localStorage.getItem('subjects'));\n    this.subjectVal = {};\n    this.subjectVal.areaId = undefined;\n    if (this.subjects.length != 0) {\n      this.subjectVal.subjectId = this.subjects[0].subjectId;\n      this.subjectService.getYearOfStudies(this.subjects[0].subjectId).subscribe((test) => {\n        this.yearOfStudies = test;\n        if (this.yearOfStudies.length != 0) {\n          this.subjectService.getAreas(this.subjects[0].subjectId, this.yearOfStudies[0].yearOfStudyId).subscribe((res) => {\n            this.areas = res;\n            this.subjectVal.areaId = this.areas[0].areaId;\n          });\n        } else { this.subjectVal.areaId = undefined; }\n        this.subjectChange.emit(this.subjectVal);\n\n      });\n    }\n  }\n\n  onChangeSubject(deviceValue) {\n    this.subjectVal.subjectId = this.subjects[deviceValue].subjectId;\n    this.areas = [];\n    this.yearOfStudies = [];\n    this.subjectService.getYearOfStudies(this.subjects[deviceValue].subjectId).subscribe((test) => {\n      this.yearOfStudies = test;\n      if (this.yearOfStudies.length != 0) {\n        this.subjectService.getAreas(this.subjects[deviceValue].subjectId, this.yearOfStudies[0].yearOfStudyId).subscribe((res) => {\n          this.areas = res;\n          this.subjectVal.areaId = this.areas[0].areaId;\n        });\n      } else { this.subjectVal.areaId = undefined; }\n      this.subjectChange.emit(this.subjectVal);\n\n    });\n  }\n  onChangeYearOfStudy(deviceValue) {\n    this.subjectService.getAreas(this.subjectVal.subjectId, this.yearOfStudies[deviceValue].yearOfStudyId).subscribe((res) => {\n      this.areas = res;\n    });\n  }\n  onChangeArea(deviceValue) {\n    this.subjectVal.areaId = this.areas[deviceValue].areaId;\n    this.subjectChange.emit(this.subjectVal);\n\n  }\n\n}\n\n\n    \n\n    \n        \n  \n    \n      Subject\n      \n        {{item.subjectName}}\n      \n    \n\n\n    \n\n      Year of study\n      \n        {{item.yearOfStudyName}}\n      \n\n\n    \n    \n\n      Area\n      \n        {{item.areaName}}\n      \n    \n\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Subject              {{item.subjectName}}                    Year of study              {{item.yearOfStudyName}}                    Area              {{item.areaName}}            '\n    var COMPONENTS = [{'name': 'AddQuestionComponent', 'selector': 'app-add-question'},{'name': 'AdminPanelComponent', 'selector': 'app-admin-panel'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditQuestionComponent', 'selector': 'app-edit-question'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GenerateTestComponent', 'selector': 'app-generate-test'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HelloComponent', 'selector': 'app-hello'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PreviewQuestionComponent', 'selector': 'app-preview-question'},{'name': 'PreviewTestsComponent', 'selector': 'app-preview-tests'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SubjectComponent', 'selector': 'app-subject'},{'name': 'SystemAdminPanelComponent', 'selector': 'app-system-admin-panel'},{'name': 'TestPrintPreviewComponent', 'selector': 'app-test-print-preview'},{'name': 'VisibilityComponent', 'selector': 'app-visibility'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SubjectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubjectService.html":{"url":"injectables/SubjectService.html","title":"injectable - SubjectService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SubjectService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/subjectService/subject.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                get\n                            \n                            \n                                getAreas\n                            \n                            \n                                getId\n                            \n                            \n                                getYearOfStudies\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/subjectService/subject.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                    ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            add\n                            \n                            \n                        \n                    \n                \n                \n                    \nadd(subject: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/subjectService/subject.service.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        subject\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/subjectService/subject.service.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAreas\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAreas(idSubject: number, idArea: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/subjectService/subject.service.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        idSubject\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        idArea\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getId\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetId(id: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/subjectService/subject.service.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getYearOfStudies\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetYearOfStudies(id: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/subjectService/subject.service.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate(id: number, subject: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/subjectService/subject.service.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        subject\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        error:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/services/subjectService/subject.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {catchError, retry} from 'rxjs/operators';\nimport {throwError} from 'rxjs/internal/observable/throwError';\nimport {ApiService} from '../apiService/api.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SubjectService {\n  error;\n  constructor(private httpClient: HttpClient, private apiService: ApiService) {}\n  get() {\n    return this.httpClient.get(this.apiService.baseUrl + 'subject').pipe(\n      retry(0), // retry a failed request up to 3 times\n      catchError(this.apiService.handleError)\n    );\n  }\n\n  getId(id) {\n    return this.httpClient.get(this.apiService.baseUrl + 'subject/' + id).pipe(\n      retry(0), // retry a failed request up to 3 times\n      catchError(this.apiService.handleError)\n    );\n  }\n\n  getYearOfStudies(id: number) {\n    return this.httpClient.get(this.apiService.baseUrl + 'subject/yearOfStudies/' + id).pipe(\n      retry(0), // retry a failed request up to 3 times\n      catchError(this.apiService.handleError)\n    );\n  }\n  getAreas(idSubject: number, idArea: number) {\n    return this.httpClient.get(this.apiService.baseUrl + 'subject/areas/' + idSubject + '/' + idArea).pipe(\n      retry(0), // retry a failed request up to 3 times\n      catchError(this.apiService.handleError)\n    );\n  }\n  add(subject) {\n    return this.httpClient.post(this.apiService.baseUrl + 'subject', subject).pipe(\n      retry(0), // retry a failed request up to 3 times\n      catchError(this.apiService.handleError)\n    );\n  }\n  update(id: number, subject) {\n    return this.httpClient.put(this.apiService.baseUrl + 'subject/' + id, subject).pipe(\n      retry(0), // retry a failed request up to 3 times\n      catchError(this.apiService.handleError)\n    ).subscribe();\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SystemAdminPanelComponent.html":{"url":"components/SystemAdminPanelComponent.html","title":"component - SystemAdminPanelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SystemAdminPanelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/system-admin-panel/system-admin-panel.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-system-admin-panel\n            \n\n            \n                styleUrls\n                system-admin-panel.component.css\n            \n\n\n\n            \n                templateUrl\n                ./system-admin-panel.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                questionType\n                            \n                            \n                                questionTypeForm\n                            \n                            \n                                questionTypes\n                            \n                            \n                                questionTypeSearch\n                            \n                            \n                                questionTypeShow\n                            \n                            \n                                successMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addQuestionTypeButton\n                            \n                            \n                                collapseSubject\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSearchChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(form: FormBuilder, questionTypeService: QuestionTypeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/system-admin-panel/system-admin-panel.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        questionTypeService\n                                                  \n                                                        \n                                                                    QuestionTypeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addQuestionTypeButton\n                            \n                            \n                        \n                    \n                \n                \n                    \naddQuestionTypeButton()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/system-admin-panel/system-admin-panel.component.ts:47\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            collapseSubject\n                            \n                            \n                        \n                    \n                \n                \n                    \ncollapseSubject()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/system-admin-panel/system-admin-panel.component.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/system-admin-panel/system-admin-panel.component.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSearchChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSearchChange()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/system-admin-panel/system-admin-panel.component.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            questionType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        questionType:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/system-admin-panel/system-admin-panel.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            questionTypeForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        questionTypeForm:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/system-admin-panel/system-admin-panel.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            questionTypes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        questionTypes:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/system-admin-panel/system-admin-panel.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            questionTypeSearch\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        questionTypeSearch:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/system-admin-panel/system-admin-panel.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            questionTypeShow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        questionTypeShow:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/system-admin-panel/system-admin-panel.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            successMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        successMessage:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/system-admin-panel/system-admin-panel.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder, FormControl } from '@angular/forms';\nimport { QuestionTypeService } from 'src/app/services/questionTypeService/question-type.service';\nimport { HttpXsrfCookieExtractor } from '@angular/common/http/src/xsrf';\n\n@Component({\n  selector: 'app-system-admin-panel',\n  templateUrl: './system-admin-panel.component.html',\n  styleUrls: ['./system-admin-panel.component.css']\n})\nexport class SystemAdminPanelComponent implements OnInit {\n  questionTypeShow = false;\n  questionTypeForm: any;\n  questionType;\n  questionTypeSearch: any;\n  questionTypes;\n  successMessage;\n  constructor(private form: FormBuilder, private questionTypeService: QuestionTypeService) { }\n\n  ngOnInit() {\n    this.questionType = {};\n    this.questionTypeSearch = [];\n    this.questionType.QuesstionTypeName = '';\n    this.questionTypeService.get().subscribe((res) => {\n      this.questionTypes = res;\n    });\n    this.questionTypeForm = this.form.group({\n      quesstionTypeName: ['', Validators.required]\n    });\n  }\n\n  collapseSubject() {\n    this.questionTypeShow = !this.questionTypeShow;\n  }\n  onSearchChange() {\n    this.questionTypeSearch = [];\n    if (this.questionType.quesstionTypeName == '') { return; }\n\n    for (let i = 0; i \n    \n\n    \n        \n\n\n\n  \n    \n      \n        \n          \n\n        \n\n      \n    \n    \n      \n        \n          \n            \n              \n                \n                  Add Question Type\n                \n              \n              \n            \n            \n                \n                  \n                    \n                      \n                        \n                        \n  \n                        {{item.quesstionTypeName}}\n                      \n                    \n                    \n                      \n                        Add Question Type\n                      \n                    \n                  \n                \n              \n          \n        \n      \n                             \n    \n  \n\n\n\n\n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                        Add Question Type                                                                                                                                                                                                                          {{item.quesstionTypeName}}                                                                                                            Add Question Type                                                                                                                                                     '\n    var COMPONENTS = [{'name': 'AddQuestionComponent', 'selector': 'app-add-question'},{'name': 'AdminPanelComponent', 'selector': 'app-admin-panel'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditQuestionComponent', 'selector': 'app-edit-question'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GenerateTestComponent', 'selector': 'app-generate-test'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HelloComponent', 'selector': 'app-hello'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PreviewQuestionComponent', 'selector': 'app-preview-question'},{'name': 'PreviewTestsComponent', 'selector': 'app-preview-tests'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SubjectComponent', 'selector': 'app-subject'},{'name': 'SystemAdminPanelComponent', 'selector': 'app-system-admin-panel'},{'name': 'TestPrintPreviewComponent', 'selector': 'app-test-print-preview'},{'name': 'VisibilityComponent', 'selector': 'app-visibility'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SystemAdminPanelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SystemGuard.html":{"url":"injectables/SystemGuard.html","title":"injectable - SystemGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SystemGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/guards/system.guard.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/system.guard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/guards/system.guard.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Router, RouterStateSnapshot } from '@angular/router';\nimport { AuthService } from '../services/authService/auth.service';\n\n\n@Injectable()\nexport class SystemGuard {\n\n    constructor(private router: Router, private authService: AuthService) {}\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n        if (this.authService.isSystemAdmin()) {\n            return true;\n        } else {\n            this.router.navigate(['/login']);\n            return false;\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TestPrintPreviewComponent.html":{"url":"components/TestPrintPreviewComponent.html","title":"component - TestPrintPreviewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TestPrintPreviewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/test-print-preview/test-print-preview.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-test-print-preview\n            \n\n            \n                styleUrls\n                test-print-preview.component.css\n            \n\n\n\n            \n                templateUrl\n                ./test-print-preview.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                tableView\n                            \n                            \n                                test\n                            \n                            \n                                withAnswer\n                            \n                            \n                                withBlankSpace\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/test-print-preview/test-print-preview.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/test-print-preview/test-print-preview.component.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/test-print-preview/test-print-preview.component.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tableView\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tableView:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/test-print-preview/test-print-preview.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            test\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        test:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/test-print-preview/test-print-preview.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            withAnswer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        withAnswer:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/test-print-preview/test-print-preview.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            withBlankSpace\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        withBlankSpace:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/test-print-preview/test-print-preview.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\n\n@Component({\n  selector: 'app-test-print-preview',\n  templateUrl: './test-print-preview.component.html',\n  styleUrls: ['./test-print-preview.component.css']\n})\nexport class TestPrintPreviewComponent implements OnInit, OnDestroy {\n\n  constructor() { }\n  test: any;\n  withAnswer;\n  withBlankSpace;\n  tableView;\n  ngOnInit() {\n\n    this.withAnswer = JSON.parse(sessionStorage.getItem('withAnswers'));\n    this.withBlankSpace = JSON.parse(sessionStorage.getItem('withBlankSpace'));\n    this.tableView = JSON.parse(sessionStorage.getItem('tableView'));\n    this.test = JSON.parse(sessionStorage.getItem('test'));\n\n    sessionStorage.removeItem('test');\n\n    window.print();\n  }\n  ngOnDestroy() {\n    this.test = null;\n    sessionStorage.removeItem('test');\n\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{test.note}}\n      \n    \n    \n      \n        Name and Surname: _______________\n      \n      \n        Test Group: {{test.testGroup}}\n      \n\n    \n    \n      \n        Date: {{test.date}}\n      \n      \n        Group: {{test.group}}\n      \n    \n  \n  \n\n  \n    0\">\n\n      \n\n        \n          \n            \n              \n                Question {{i+1}}.\n              \n              \n                [{{item.question.points}}]\n\n              \n\n            \n            \n              \n              \n                \n              \n              \n              \n                \n              \n              \n                \n                        \n                \n              \n              \n                Answer: \n\n                  \n                \n                \n                \n                  \n                \n              \n            \n          \n          \n        \n      \n\n    \n  \n  \n\n  \n    {{test.creator.name}}\n  \n\n\n\n  \n    \n      \n        {{test.note}}\n      \n    \n    \n      \n        Name and Surname: _______________\n      \n      \n        Test Group: {{test.testGroup}}\n      \n\n    \n    \n      \n        Date: {{test.date}}\n      \n      \n        Group: {{test.group}}\n      \n    \n  \n  \n\n  \n      \n\n        \n          Number\n          Question Text\n          Question Answer\n          Points\n          Achieved points\n        \n\n        \n           {{i+1}}\n           \n            \n              \n            \n\n          \n          \n            \n              \n\n                \n              \n              \n              \n                \n              \n            \n          \n           {{item.question.points}} \n            \n        \n        \n      \n\n  \n  \n\n  \n    {{test.creator.name}}\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{test.note}}                            Name and Surname: _______________                    Test Group: {{test.testGroup}}                            Date: {{test.date}}                    Group: {{test.group}}                    0\">                                                                  Question {{i+1}}.                                            [{{item.question.points}}]                                                                                                                                                                                                                                                                            Answer:                                                                                                                                                                               {{test.creator.name}}                      {{test.note}}                            Name and Surname: _______________                    Test Group: {{test.testGroup}}                            Date: {{test.date}}                    Group: {{test.group}}                                        Number          Question Text          Question Answer          Points          Achieved points                           {{i+1}}                                                                                                                                                                                                                        {{item.question.points}}                                             {{test.creator.name}}  '\n    var COMPONENTS = [{'name': 'AddQuestionComponent', 'selector': 'app-add-question'},{'name': 'AdminPanelComponent', 'selector': 'app-admin-panel'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditQuestionComponent', 'selector': 'app-edit-question'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GenerateTestComponent', 'selector': 'app-generate-test'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HelloComponent', 'selector': 'app-hello'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PreviewQuestionComponent', 'selector': 'app-preview-question'},{'name': 'PreviewTestsComponent', 'selector': 'app-preview-tests'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SubjectComponent', 'selector': 'app-subject'},{'name': 'SystemAdminPanelComponent', 'selector': 'app-system-admin-panel'},{'name': 'TestPrintPreviewComponent', 'selector': 'app-test-print-preview'},{'name': 'VisibilityComponent', 'selector': 'app-visibility'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TestPrintPreviewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TestService.html":{"url":"injectables/TestService.html","title":"injectable - TestService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TestService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/testService/test.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTest\n                            \n                            \n                                generateTest\n                            \n                            \n                                get\n                            \n                            \n                                getAll\n                            \n                            \n                                recent\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/testService/test.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                    ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addTest\n                            \n                            \n                        \n                    \n                \n                \n                    \naddTest(test: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/testService/test.service.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        test\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            generateTest\n                            \n                            \n                        \n                    \n                \n                \n                    \ngenerateTest(test: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/testService/test.service.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        test\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/testService/test.service.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAll\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAll(indexi: number, limit: number, skip: number, id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/testService/test.service.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        indexi\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        limit\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        skip\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recent\n                            \n                            \n                        \n                    \n                \n                \n                    \nrecent(id: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/testService/test.service.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validate\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalidate(test: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/testService/test.service.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        test\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport { ApiService } from '../apiService/api.service';\nimport {catchError, retry} from 'rxjs/operators';\nimport {throwError} from 'rxjs/internal/observable/throwError';\nimport {Http, Headers, RequestOptions} from '@angular/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TestService {\n\n  constructor(private httpClient: HttpClient, private apiService: ApiService) { }\n  generateTest (test) {\n    return this.httpClient.post(this.apiService.baseUrl + 'test/generateTest', test).pipe(\n      retry(0), // retry a failed request up to 3 times\n      catchError(this.apiService.handleError)\n    );\n\n  }\n  addTest (test) {\n    return this.httpClient.post(this.apiService.baseUrl + 'test', test).pipe(\n      retry(0), // retry a failed request up to 3 times\n      catchError(this.apiService.handleError)\n    );\n\n  }\n  get () {\n    return this.httpClient.get(this.apiService.baseUrl + 'test').pipe(\n      retry(0), // retry a failed request up to 3 times\n      catchError(this.apiService.handleError)\n    );\n  }\n  validate(test) {\n    return this.httpClient.post(this.apiService.baseUrl + 'test/testValidation', test).pipe(\n      retry(0), // retry a failed request up to 3 times\n      catchError(this.apiService.handleError)\n    );\n  }\n  recent(id) {\n\n    return this.httpClient.post(this.apiService.baseUrl + 'test/recentTests/' + id, id).pipe(\n      retry(0), // retry a failed request up to 3 times\n      catchError(this.apiService.handleError)\n    );\n\n\n\n  }\n\n\n  getAll(indexi: number, limit: number, skip: number, id: string) {\n    return this.httpClient.post(this.apiService.baseUrl + 'test/pagination/limit=' + limit + '&skip=' + skip + '&id=' + id, indexi).pipe(\n      retry(0), // retry a failed request up to 3 times\n      catchError(this.apiService.handleError)\n    );\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/TokenInterceptor.html":{"url":"interceptors/TokenInterceptor.html","title":"interceptor - TokenInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  TokenInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/interceptors/TokenInterceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/interceptors/TokenInterceptor.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \nintercept(request: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/interceptors/TokenInterceptor.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        auth:     AuthService\n\n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/interceptors/TokenInterceptor.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { AuthService } from '../../services/authService/auth.service';\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n  constructor(public auth: AuthService) {}\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n\n    request = request.clone({\n      setHeaders: {\n        Authorization: `${this.auth.getToken()}`\n      }\n    });\n    return next.handle(request);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Visibility.html":{"url":"classes/Visibility.html","title":"class - Visibility","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Visibility\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/visibility.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                visibilityId\n                            \n                            \n                                visibilityName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            visibilityId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        visibilityId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/visibility.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            visibilityName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        visibilityName:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/visibility.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Visibility {\n    visibilityId: number;\n    visibilityName: any;\n  }\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VisibilityComponent.html":{"url":"components/VisibilityComponent.html","title":"component - VisibilityComponent","body":"\n                   \n\n\n\n\n\n  Components\n  VisibilityComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/add-question/add-question-subcomponents/visibility/visibility.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-visibility\n            \n\n            \n                styleUrls\n                visibility.component.css\n            \n\n\n\n            \n                templateUrl\n                ./visibility.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                visibilities\n                            \n                            \n                                visibilityVal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSelectionChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                visibility\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                visibiltyChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    visibility\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(visibilityService: VisibilityService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/add-question/add-question-subcomponents/visibility/visibility.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        visibilityService\n                                                  \n                                                        \n                                                                    VisibilityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        visibility\n                    \n                    \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/add-question/add-question-subcomponents/visibility/visibility.component.ts:16\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        visibiltyChange\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/add-question/add-question-subcomponents/visibility/visibility.component.ts:13\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/add-question/add-question-subcomponents/visibility/visibility.component.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSelectionChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSelectionChange(val: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/add-question/add-question-subcomponents/visibility/visibility.component.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        val\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            visibilities\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        visibilities:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/add-question/add-question-subcomponents/visibility/visibility.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            visibilityVal\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        visibilityVal:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/add-question/add-question-subcomponents/visibility/visibility.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        visibility\n                    \n                \n\n\n                \n                    \n                        setvisibility(val: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/add-question/add-question-subcomponents/visibility/visibility.component.ts:19\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { VisibilityService } from '../../../../services/visibilityService/visibility.service';\n\n@Component({\n  selector: 'app-visibility',\n  templateUrl: './visibility.component.html',\n  styleUrls: ['./visibility.component.css']\n})\nexport class VisibilityComponent implements OnInit {\n  visibilities;\n  visibilityVal: any;\n\n  @Output() visibiltyChange = new EventEmitter();\n\n  @Input()\n  get visibility() {\n    return this.visibilityVal;\n  }\n  set visibility(val) {\n    this.visibilityVal = val;\n    this.visibiltyChange.emit(this.visibilityVal);\n  }\n  constructor(private visibilityService: VisibilityService) { }\n\n  ngOnInit() {\n    this.visibilityService.get().subscribe((test) => {\n      this.visibilities = test;\n      this.visibilityVal.visibilityId = this.visibilities[0].visibilityId;\n    });\n  }\n  onSelectionChange(val) {\n    this.visibilityVal.visibilityId = this.visibilities[val].visibilityId;\n    this.visibiltyChange.emit(this.visibilityVal);\n  }\n}\n\n    \n\n    \n         1\">\n  \n    \n    {{visibilities[0].visibilityName}}\n  \n  \n    \n    {{visibilities[1].visibilityName}}\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' 1\">          {{visibilities[0].visibilityName}}            {{visibilities[1].visibilityName}}  '\n    var COMPONENTS = [{'name': 'AddQuestionComponent', 'selector': 'app-add-question'},{'name': 'AdminPanelComponent', 'selector': 'app-admin-panel'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditQuestionComponent', 'selector': 'app-edit-question'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GenerateTestComponent', 'selector': 'app-generate-test'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HelloComponent', 'selector': 'app-hello'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PreviewQuestionComponent', 'selector': 'app-preview-question'},{'name': 'PreviewTestsComponent', 'selector': 'app-preview-tests'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SubjectComponent', 'selector': 'app-subject'},{'name': 'SystemAdminPanelComponent', 'selector': 'app-system-admin-panel'},{'name': 'TestPrintPreviewComponent', 'selector': 'app-test-print-preview'},{'name': 'VisibilityComponent', 'selector': 'app-visibility'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VisibilityComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VisibilityService.html":{"url":"injectables/VisibilityService.html","title":"injectable - VisibilityService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  VisibilityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/visibilityService/visibility.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/visibilityService/visibility.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                    ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/visibilityService/visibility.service.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {catchError, retry} from 'rxjs/operators';\nimport {ApiService} from '../apiService/api.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VisibilityService {\n\n\n  constructor(private httpClient: HttpClient, private apiService: ApiService) {}\n  get() {\n    return this.httpClient.get(this.apiService.baseUrl + 'visibility').pipe(\n      retry(0), // retry a failed request up to 3 times\n      catchError(this.apiService.handleError)\n    );\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/YearOfStudy.html":{"url":"classes/YearOfStudy.html","title":"class - YearOfStudy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  YearOfStudy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/year-of-study.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                yearOfStudyId\n                            \n                            \n                                yearOfStudyName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            yearOfStudyId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        yearOfStudyId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/year-of-study.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            yearOfStudyName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        yearOfStudyName:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/year-of-study.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class YearOfStudy {\n    yearOfStudyId: number;\n    yearOfStudyName: any;\n  }\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/YearOfStudyService.html":{"url":"injectables/YearOfStudyService.html","title":"injectable - YearOfStudyService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  YearOfStudyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/yearOdStudyService/year-of-study.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                get\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/yearOdStudyService/year-of-study.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                    ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            add\n                            \n                            \n                        \n                    \n                \n                \n                    \nadd(yearOfStudy: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/yearOdStudyService/year-of-study.service.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        yearOfStudy\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/yearOdStudyService/year-of-study.service.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {catchError, retry} from 'rxjs/operators';\nimport {throwError} from 'rxjs/internal/observable/throwError';\nimport {ApiService} from '../apiService/api.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class YearOfStudyService {\n\n  constructor(private httpClient: HttpClient, private apiService: ApiService) {}\n  get() {\n    return this.httpClient.get(this.apiService.baseUrl + 'yearOfStudy').pipe(\n      retry(0), // retry a failed request up to 3 times\n      catchError(this.apiService.handleError)\n    );\n  }\n  add(yearOfStudy) {\n    return this.httpClient.post(this.apiService.baseUrl + 'yearOfStudy', yearOfStudy).pipe(\n      retry(0), // retry a failed request up to 3 times\n      catchError(this.apiService.handleError)\n    );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/add-question/add-question-subcomponents/subject/subject.component.ts\n            \n            \n                component\n            \n            \n                SubjectComponent\n            \n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/components/add-question/add-question-subcomponents/visibility/visibility.component.ts\n            \n            \n                component\n            \n            \n                VisibilityComponent\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/add-question/add-question.component.ts\n            \n            \n                component\n            \n            \n                AddQuestionComponent\n            \n            \n                0 %\n                (0/27)\n            \n        \n        \n            \n                \n                src/app/components/admin-panel/admin-panel.component.ts\n            \n            \n                component\n            \n            \n                AdminPanelComponent\n            \n            \n                0 %\n                (0/39)\n            \n        \n        \n            \n                \n                src/app/components/edit-question/edit-question.component.ts\n            \n            \n                component\n            \n            \n                EditQuestionComponent\n            \n            \n                0 %\n                (0/33)\n            \n        \n        \n            \n                \n                src/app/components/generate-test/generate-test.component.ts\n            \n            \n                component\n            \n            \n                GenerateTestComponent\n            \n            \n                0 %\n                (0/53)\n            \n        \n        \n            \n                \n                src/app/components/hello/hello.component.ts\n            \n            \n                component\n            \n            \n                HelloComponent\n            \n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/preview-question/preview-question.component.ts\n            \n            \n                component\n            \n            \n                PreviewQuestionComponent\n            \n            \n                0 %\n                (0/42)\n            \n        \n        \n            \n                \n                src/app/components/preview-tests/preview-tests.component.ts\n            \n            \n                component\n            \n            \n                PreviewTestsComponent\n            \n            \n                0 %\n                (0/29)\n            \n        \n        \n            \n                \n                src/app/components/register/register.component.ts\n            \n            \n                component\n            \n            \n                RegisterComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/system-admin-panel/system-admin-panel.component.ts\n            \n            \n                component\n            \n            \n                SystemAdminPanelComponent\n            \n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/components/test-print-preview/test-print-preview.component.ts\n            \n            \n                component\n            \n            \n                TestPrintPreviewComponent\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/footer/footer.component.ts\n            \n            \n                component\n            \n            \n                FooterComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/guards/admin.guard.ts\n            \n            \n                injectable\n            \n            \n                AdminGuard\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/guards/auth.guard.ts\n            \n            \n                injectable\n            \n            \n                AuthGuard\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/guards/public.guard.ts\n            \n            \n                injectable\n            \n            \n                PublicGuard\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/guards/system.guard.ts\n            \n            \n                injectable\n            \n            \n                SystemGuard\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/header/header.component.ts\n            \n            \n                component\n            \n            \n                HeaderComponent\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/services/apiService/api.service.ts\n            \n            \n                injectable\n            \n            \n                ApiService\n            \n            \n                41 %\n                (5/12)\n            \n        \n        \n            \n                \n                src/app/services/areaService/area.service.ts\n            \n            \n                injectable\n            \n            \n                AreaService\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/authService/auth.service.ts\n            \n            \n                injectable\n            \n            \n                AuthService\n            \n            \n                45 %\n                (5/11)\n            \n        \n        \n            \n                \n                src/app/services/authenticationService/authentication.service.ts\n            \n            \n                injectable\n            \n            \n                AuthenticationService\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/difficultyLevelService/difficulty-level.service.ts\n            \n            \n                injectable\n            \n            \n                DifficultyLevelService\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/questionService/question.service.ts\n            \n            \n                injectable\n            \n            \n                QuestionService\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/questionTypeService/question-type.service.ts\n            \n            \n                injectable\n            \n            \n                QuestionTypeService\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/statusService/status.service.ts\n            \n            \n                injectable\n            \n            \n                StatusService\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/subjectService/subject.service.ts\n            \n            \n                injectable\n            \n            \n                SubjectService\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/testService/test.service.ts\n            \n            \n                injectable\n            \n            \n                TestService\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/visibilityService/visibility.service.ts\n            \n            \n                injectable\n            \n            \n                VisibilityService\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/yearOdStudyService/year-of-study.service.ts\n            \n            \n                injectable\n            \n            \n                YearOfStudyService\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/models/answer.ts\n            \n            \n                class\n            \n            \n                Answer\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/models/area.ts\n            \n            \n                class\n            \n            \n                Area\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/difficulty-level.ts\n            \n            \n                class\n            \n            \n                DifficultyLevel\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/question-type.ts\n            \n            \n                class\n            \n            \n                QuestionType\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/question.ts\n            \n            \n                class\n            \n            \n                Question\n            \n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/shared/models/status.ts\n            \n            \n                class\n            \n            \n                Status\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/subject.ts\n            \n            \n                class\n            \n            \n                Subject\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/models/visibility.ts\n            \n            \n                class\n            \n            \n                Visibility\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/year-of-study.ts\n            \n            \n                class\n            \n            \n                YearOfStudy\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                context\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.0.3\n        \n            @angular/common : ^6.0.3\n        \n            @angular/compiler : ^6.0.3\n        \n            @angular/core : ^6.0.3\n        \n            @angular/forms : ^6.0.3\n        \n            @angular/http : ^6.0.3\n        \n            @angular/platform-browser : ^6.0.3\n        \n            @angular/platform-browser-dynamic : ^6.0.3\n        \n            @angular/router : ^6.0.3\n        \n            @ng-bootstrap/ng-bootstrap : ^2.1.2\n        \n            angular-alert-module : ^2.0.3\n        \n            angular2-fontawesome : ^5.2.1\n        \n            angular2-froala-wysiwyg : ^2.6.0\n        \n            angular2-image-upload : ^1.0.0-rc.1\n        \n            angularfire2 : ^5.0.0-rc.11\n        \n            core-js : ^2.5.4\n        \n            firebase : ^5.3.1\n        \n            font-awesome : ^4.7.0\n        \n            html2canvas : ^1.0.0-alpha.12\n        \n            jspdf : ^1.4.1\n        \n            ng-image-input-with-preview : ^1.0.0\n        \n            ng2-modal : 0.0.25\n        \n            ng2-opd-popup : ^1.1.21\n        \n            ngx-bootstrap : ^3.0.1\n        \n            ngx-editor : ^3.3.0\n        \n            ngx-pagination : ^3.2.0\n        \n            rxjs : ^6.2.1\n        \n            rxjs-compat : ^6.2.1\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTestGenerator\nThis project was generated with Angular CLI version 6.0.8.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAddQuestionComponent\n\nAddQuestionComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddQuestionComponent->AppModule\n\n\n\n\n\nAdminPanelComponent\n\nAdminPanelComponent\n\nAppModule -->\n\nAdminPanelComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nEditQuestionComponent\n\nEditQuestionComponent\n\nAppModule -->\n\nEditQuestionComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nGenerateTestComponent\n\nGenerateTestComponent\n\nAppModule -->\n\nGenerateTestComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nHelloComponent\n\nHelloComponent\n\nAppModule -->\n\nHelloComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nPreviewQuestionComponent\n\nPreviewQuestionComponent\n\nAppModule -->\n\nPreviewQuestionComponent->AppModule\n\n\n\n\n\nPreviewTestsComponent\n\nPreviewTestsComponent\n\nAppModule -->\n\nPreviewTestsComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nSubjectComponent\n\nSubjectComponent\n\nAppModule -->\n\nSubjectComponent->AppModule\n\n\n\n\n\nSystemAdminPanelComponent\n\nSystemAdminPanelComponent\n\nAppModule -->\n\nSystemAdminPanelComponent->AppModule\n\n\n\n\n\nTestPrintPreviewComponent\n\nTestPrintPreviewComponent\n\nAppModule -->\n\nTestPrintPreviewComponent->AppModule\n\n\n\n\n\nVisibilityComponent\n\nVisibilityComponent\n\nAppModule -->\n\nVisibilityComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAdminGuard\n\nAdminGuard\n\nAppModule -->\n\nAdminGuard->AppModule\n\n\n\n\n\nApiService\n\nApiService\n\nAppModule -->\n\nApiService->AppModule\n\n\n\n\n\nAuthGuard\n\nAuthGuard\n\nAppModule -->\n\nAuthGuard->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAppModule -->\n\nAuthenticationService->AppModule\n\n\n\n\n\nPublicGuard\n\nPublicGuard\n\nAppModule -->\n\nPublicGuard->AppModule\n\n\n\n\n\nQuestionService\n\nQuestionService\n\nAppModule -->\n\nQuestionService->AppModule\n\n\n\n\n\nStatusService\n\nStatusService\n\nAppModule -->\n\nStatusService->AppModule\n\n\n\n\n\nSubjectService\n\nSubjectService\n\nAppModule -->\n\nSubjectService->AppModule\n\n\n\n\n\nSystemGuard\n\nSystemGuard\n\nAppModule -->\n\nSystemGuard->AppModule\n\n\n\n\n\nTokenInterceptor\n\nTokenInterceptor\n\nAppModule -->\n\nTokenInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    16 Components\n                \n            \n        \n        \n            \n                \n                    \n                    16 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        13 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
